["^ ","~:output",["^ ","~:js","goog.provide('clojure.data.xml');\nclojure.data.xml.parse_qname = clojure.data.xml.name.parse_qname;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.parse_qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"parse-qname\",\"clojure.data.xml/parse-qname\",-114696648,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"parse-qname\",\"parse-qname\",-503996965,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.parse_qname)?clojure.data.xml.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.parse_qname;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"parse-qname\",\"clojure.data.xml.name/parse-qname\",-631519353,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml/name.cljc\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),23,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"parse-qname\",\"parse-qname\",-503996965,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.name.parse_qname)?clojure.data.xml.name.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.parse_qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"parse-qname\",\"clojure.data.xml/parse-qname\",-114696648,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"parse-qname\",\"parse-qname\",-503996965,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.parse_qname)?clojure.data.xml.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.qname_uri = clojure.data.xml.name.qname_uri;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.qname_uri;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname-uri\",\"clojure.data.xml/qname-uri\",-679361477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname-uri\",\"qname-uri\",-288720740,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname_uri)?clojure.data.xml.qname_uri.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.qname_uri;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"qname-uri\",\"clojure.data.xml.name/qname-uri\",-1269027496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"qname-uri\",\"qname-uri\",-288720740,null),\"clojure/data/xml/name.cljc\",16,1,39,39,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"v\",\"v\",1661996586,null)], null)),\"Get the namespace uri for this qname\",(cljs.core.truth_(clojure.data.xml.name.qname_uri)?clojure.data.xml.name.qname_uri.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname_uri;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname-uri\",\"clojure.data.xml/qname-uri\",-679361477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname-uri\",\"qname-uri\",-288720740,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname_uri)?clojure.data.xml.qname_uri.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.qname_local = clojure.data.xml.name.qname_local;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.qname_local;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname-local\",\"clojure.data.xml/qname-local\",-1663929151,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname-local\",\"qname-local\",-1247825572,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname_local)?clojure.data.xml.qname_local.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.qname_local;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"qname-local\",\"clojure.data.xml.name/qname-local\",-64196768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"qname-local\",\"qname-local\",-1247825572,null),\"clojure/data/xml/name.cljc\",18,1,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"v\",\"v\",1661996586,null)], null)),\"Get the name for this qname\",(cljs.core.truth_(clojure.data.xml.name.qname_local)?clojure.data.xml.name.qname_local.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname_local;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname-local\",\"clojure.data.xml/qname-local\",-1663929151,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname-local\",\"qname-local\",-1247825572,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname_local)?clojure.data.xml.qname_local.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.qname = clojure.data.xml.name.qname;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname\",\"clojure.data.xml/qname\",-1035338605,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname\",\"qname\",-343080652,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname)?clojure.data.xml.qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.qname;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"qname\",\"clojure.data.xml.name/qname\",555473776,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"qname\",\"qname\",-343080652,null),\"clojure/data/xml/name.cljc\",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),false,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),3,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),3,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.list(null,null,null)], null),1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null),new cljs.core.Symbol(null,\"local\",\"local\",142764803,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null)], null)),null,cljs.core.list(\"@param {...*} var_args\"),(cljs.core.truth_(clojure.data.xml.name.qname)?clojure.data.xml.name.qname.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"qname\",\"clojure.data.xml/qname\",-1035338605,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"qname\",\"qname\",-343080652,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.qname)?clojure.data.xml.qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.as_qname = clojure.data.xml.name.as_qname;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.as_qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"as-qname\",\"clojure.data.xml/as-qname\",322599212,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"as-qname\",\"as-qname\",-343491959,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.as_qname)?clojure.data.xml.as_qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.as_qname;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"as-qname\",\"clojure.data.xml.name/as-qname\",812146893,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"as-qname\",\"as-qname\",-343491959,null),\"clojure/data/xml/name.cljc\",15,1,83,83,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"n\",\"n\",-2092305744,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.as_qname)?clojure.data.xml.name.as_qname.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.as_qname;},new cljs.core.Symbol(\"clojure.data.xml\",\"as-qname\",\"clojure.data.xml/as-qname\",322599212,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"as-qname\",\"as-qname\",-343491959,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.as_qname)?clojure.data.xml.as_qname.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.uri_symbol = clojure.data.xml.name.uri_symbol;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.uri_symbol;},new cljs.core.Symbol(\"clojure.data.xml\",\"uri-symbol\",\"clojure.data.xml/uri-symbol\",703185909,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"uri-symbol\",\"uri-symbol\",-793966768,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.uri_symbol)?clojure.data.xml.uri_symbol.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.uri_symbol;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"uri-symbol\",\"clojure.data.xml.name/uri-symbol\",171694740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"uri-symbol\",\"uri-symbol\",-793966768,null),\"clojure/data/xml/name.cljc\",17,1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"uri\",\"uri\",865819680,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.uri_symbol)?clojure.data.xml.name.uri_symbol.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.uri_symbol;},new cljs.core.Symbol(\"clojure.data.xml\",\"uri-symbol\",\"clojure.data.xml/uri-symbol\",703185909,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"uri-symbol\",\"uri-symbol\",-793966768,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.uri_symbol)?clojure.data.xml.uri_symbol.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.symbol_uri = clojure.data.xml.name.symbol_uri;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.symbol_uri;},new cljs.core.Symbol(\"clojure.data.xml\",\"symbol-uri\",\"clojure.data.xml/symbol-uri\",695933298,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"symbol-uri\",\"symbol-uri\",12535007,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.symbol_uri)?clojure.data.xml.symbol_uri.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.name.symbol_uri;},new cljs.core.Symbol(\"clojure.data.xml.name\",\"symbol-uri\",\"clojure.data.xml.name/symbol-uri\",1311604243,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.name\",\"clojure.data.xml.name\",1709632289,null),new cljs.core.Symbol(null,\"symbol-uri\",\"symbol-uri\",12535007,null),\"clojure/data/xml/name.cljc\",17,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ss\",\"ss\",177481949,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.symbol_uri)?clojure.data.xml.name.symbol_uri.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.symbol_uri;},new cljs.core.Symbol(\"clojure.data.xml\",\"symbol-uri\",\"clojure.data.xml/symbol-uri\",695933298,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"symbol-uri\",\"symbol-uri\",12535007,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.symbol_uri)?clojure.data.xml.symbol_uri.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.element_STAR_ = clojure.data.xml.node.element_STAR_;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.element_STAR_;},new cljs.core.Symbol(\"clojure.data.xml\",\"element*\",\"clojure.data.xml/element*\",-1685549580,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element*\",\"element*\",1925988439,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_STAR_)?clojure.data.xml.element_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.node.element_STAR_;},new cljs.core.Symbol(\"clojure.data.xml.node\",\"element*\",\"clojure.data.xml.node/element*\",-1204115558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.node\",\"clojure.data.xml.node\",1098224825,null),new cljs.core.Symbol(null,\"element*\",\"element*\",1925988439,null),\"clojure/data/xml/node.cljc\",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),false,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),4,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),4,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.list(null,null)], null),1,185,185,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),\"Create an xml element from a content collection and optional metadata\",cljs.core.list(\"@param {...*} var_args\"),(cljs.core.truth_(clojure.data.xml.node.element_STAR_)?clojure.data.xml.node.element_STAR_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_STAR_;},new cljs.core.Symbol(\"clojure.data.xml\",\"element*\",\"clojure.data.xml/element*\",-1685549580,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element*\",\"element*\",1925988439,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_STAR_)?clojure.data.xml.element_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.element = clojure.data.xml.node.element;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.element;},new cljs.core.Symbol(\"clojure.data.xml\",\"element\",\"clojure.data.xml/element\",-935472879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element\",\"element\",-680416020,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element)?clojure.data.xml.element.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.node.element;},new cljs.core.Symbol(\"clojure.data.xml.node\",\"element\",\"clojure.data.xml.node/element\",-377238721,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.node\",\"clojure.data.xml.node\",1098224825,null),new cljs.core.Symbol(null,\"element\",\"element\",-680416020,null),\"clojure/data/xml/node.cljc\",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),true,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),(2),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.list(null,null,null)], null),1,201,201,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),\"Create an xml Element from content varargs\",cljs.core.list(\"@param {...*} var_args\"),(cljs.core.truth_(clojure.data.xml.node.element)?clojure.data.xml.node.element.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element;},new cljs.core.Symbol(\"clojure.data.xml\",\"element\",\"clojure.data.xml/element\",-935472879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element\",\"element\",-680416020,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element)?clojure.data.xml.element.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.cdata = clojure.data.xml.node.cdata;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.cdata;},new cljs.core.Symbol(\"clojure.data.xml\",\"cdata\",\"clojure.data.xml/cdata\",88405792,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cdata\",\"cdata\",1008251779,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.cdata)?clojure.data.xml.cdata.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.node.cdata;},new cljs.core.Symbol(\"clojure.data.xml.node\",\"cdata\",\"clojure.data.xml.node/cdata\",1703596342,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.node\",\"clojure.data.xml.node\",1098224825,null),new cljs.core.Symbol(null,\"cdata\",\"cdata\",1008251779,null),\"clojure/data/xml/node.cljc\",12,1,207,207,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),\"Create a CData node\",(cljs.core.truth_(clojure.data.xml.node.cdata)?clojure.data.xml.node.cdata.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.cdata;},new cljs.core.Symbol(\"clojure.data.xml\",\"cdata\",\"clojure.data.xml/cdata\",88405792,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cdata\",\"cdata\",1008251779,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.cdata)?clojure.data.xml.cdata.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.xml_comment = clojure.data.xml.node.xml_comment;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.xml_comment;},new cljs.core.Symbol(\"clojure.data.xml\",\"xml-comment\",\"clojure.data.xml/xml-comment\",1278736895,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"xml-comment\",\"xml-comment\",-1142274982,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.xml_comment)?clojure.data.xml.xml_comment.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.node.xml_comment;},new cljs.core.Symbol(\"clojure.data.xml.node\",\"xml-comment\",\"clojure.data.xml.node/xml-comment\",1833296789,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.node\",\"clojure.data.xml.node\",1098224825,null),new cljs.core.Symbol(null,\"xml-comment\",\"xml-comment\",-1142274982,null),\"clojure/data/xml/node.cljc\",18,1,212,212,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"content\",\"content\",1656364751,null)], null)),\"Create a Comment node\",(cljs.core.truth_(clojure.data.xml.node.xml_comment)?clojure.data.xml.node.xml_comment.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.xml_comment;},new cljs.core.Symbol(\"clojure.data.xml\",\"xml-comment\",\"clojure.data.xml/xml-comment\",1278736895,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"xml-comment\",\"xml-comment\",-1142274982,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.xml_comment)?clojure.data.xml.xml_comment.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.element_QMARK_ = clojure.data.xml.node.element_QMARK_;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.element_QMARK_;},new cljs.core.Symbol(\"clojure.data.xml\",\"element?\",\"clojure.data.xml/element?\",-550843616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element?\",\"element?\",-134836339,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_QMARK_)?clojure.data.xml.element_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.node.element_QMARK_;},new cljs.core.Symbol(\"clojure.data.xml.node\",\"element?\",\"clojure.data.xml.node/element?\",543485242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.node\",\"clojure.data.xml.node\",1098224825,null),new cljs.core.Symbol(null,\"element?\",\"element?\",-134836339,null),\"clojure/data/xml/node.cljc\",15,1,226,226,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"el\",\"el\",22330409,null)], null)),null,(cljs.core.truth_(clojure.data.xml.node.element_QMARK_)?clojure.data.xml.node.element_QMARK_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_QMARK_;},new cljs.core.Symbol(\"clojure.data.xml\",\"element?\",\"clojure.data.xml/element?\",-550843616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element?\",\"element?\",-134836339,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_QMARK_)?clojure.data.xml.element_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.extend_dom_as_data_BANG_ = clojure.data.xml.js.dom.extend_dom_as_data_BANG_;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.extend_dom_as_data_BANG_;},new cljs.core.Symbol(\"clojure.data.xml\",\"extend-dom-as-data!\",\"clojure.data.xml/extend-dom-as-data!\",2101916080,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"extend-dom-as-data!\",\"extend-dom-as-data!\",1723141133,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.extend_dom_as_data_BANG_)?clojure.data.xml.extend_dom_as_data_BANG_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.js.dom.extend_dom_as_data_BANG_;},new cljs.core.Symbol(\"clojure.data.xml.js.dom\",\"extend-dom-as-data!\",\"clojure.data.xml.js.dom/extend-dom-as-data!\",871842435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.js.dom\",\"clojure.data.xml.js.dom\",-1545277890,null),new cljs.core.Symbol(null,\"extend-dom-as-data!\",\"extend-dom-as-data!\",1723141133,null),\"clojure/data/xml/js/dom.cljs\",26,1,172,172,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(clojure.data.xml.js.dom.extend_dom_as_data_BANG_)?clojure.data.xml.js.dom.extend_dom_as_data_BANG_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.extend_dom_as_data_BANG_;},new cljs.core.Symbol(\"clojure.data.xml\",\"extend-dom-as-data!\",\"clojure.data.xml/extend-dom-as-data!\",2101916080,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"extend-dom-as-data!\",\"extend-dom-as-data!\",1723141133,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.extend_dom_as_data_BANG_)?clojure.data.xml.extend_dom_as_data_BANG_.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.element_node = clojure.data.xml.js.dom.element_node;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.element_node;},new cljs.core.Symbol(\"clojure.data.xml\",\"element-node\",\"clojure.data.xml/element-node\",1133911801,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element-node\",\"element-node\",751452826,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_node)?clojure.data.xml.element_node.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.js.dom.element_node;},new cljs.core.Symbol(\"clojure.data.xml.js.dom\",\"element-node\",\"clojure.data.xml.js.dom/element-node\",789480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.js.dom\",\"clojure.data.xml.js.dom\",-1545277890,null),new cljs.core.Symbol(null,\"element-node\",\"element-node\",751452826,null),\"clojure/data/xml/js/dom.cljs\",19,1,89,89,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"el\",\"el\",22330409,null)], null)),\"Coerce xml elements to dom nodes\",(cljs.core.truth_(clojure.data.xml.js.dom.element_node)?clojure.data.xml.js.dom.element_node.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_node;},new cljs.core.Symbol(\"clojure.data.xml\",\"element-node\",\"clojure.data.xml/element-node\",1133911801,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element-node\",\"element-node\",751452826,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_node)?clojure.data.xml.element_node.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n\nclojure.data.xml.element_data = clojure.data.xml.js.dom.element_data;\n\ncljs.core.alter_meta_BANG_(new cljs.core.Var(function(){return clojure.data.xml.element_data;},new cljs.core.Symbol(\"clojure.data.xml\",\"element-data\",\"clojure.data.xml/element-data\",-1187275535,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element-data\",\"element-data\",1105680406,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_data)?clojure.data.xml.element_data.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(new cljs.core.Var(function(){return clojure.data.xml.js.dom.element_data;},new cljs.core.Symbol(\"clojure.data.xml.js.dom\",\"element-data\",\"clojure.data.xml.js.dom/element-data\",2090962816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[new cljs.core.Symbol(null,\"clojure.data.xml.js.dom\",\"clojure.data.xml.js.dom\",-1545277890,null),new cljs.core.Symbol(null,\"element-data\",\"element-data\",1105680406,null),\"clojure/data/xml/js/dom.cljs\",19,1,146,146,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"el\",\"el\",22330409,null)], null)),\"Coerce xml elements to element maps / content vectors\",(cljs.core.truth_(clojure.data.xml.js.dom.element_data)?clojure.data.xml.js.dom.element_data.cljs$lang$test:null)]))),new cljs.core.Keyword(null,\"wrapped-by\",\"wrapped-by\",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_data;},new cljs.core.Symbol(\"clojure.data.xml\",\"element-data\",\"clojure.data.xml/element-data\",-1187275535,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"clojure/data/xml.cljs\",new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"clojure.data.xml\",\"clojure.data.xml\",-1608931981,null),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),10,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"element-data\",\"element-data\",1105680406,null),new cljs.core.Keyword(null,\"test\",\"test\",577538877),(cljs.core.truth_(clojure.data.xml.element_data)?clojure.data.xml.element_data.cljs$lang$test:null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),cljs.core.List.EMPTY], null)))));\n/**\n * Use DOMParser to parse xml string\n * @param {...*} var_args\n */\nclojure.data.xml.parse_str = (function clojure$data$xml$parse_str(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___31379 = arguments.length;\nvar i__4731__auto___31380 = (0);\nwhile(true){\nif((i__4731__auto___31380 < len__4730__auto___31379)){\nargs__4736__auto__.push((arguments[i__4731__auto___31380]));\n\nvar G__31382 = (i__4731__auto___31380 + (1));\ni__4731__auto___31380 = G__31382;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn clojure.data.xml.parse_str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nclojure.data.xml.parse_str.cljs$core$IFn$_invoke$arity$variadic = (function (s,p__31258){\nvar map__31262 = p__31258;\nvar map__31262__$1 = (((((!((map__31262 == null))))?(((((map__31262.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31262.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31262):map__31262);\nvar content_type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__31262__$1,new cljs.core.Keyword(null,\"content-type\",\"content-type\",-508222634),\"text/xml\");\nvar on_error = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__31262__$1,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),((function (map__31262,map__31262__$1,content_type){\nreturn (function (p1__31245_SHARP_){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"XML parser error\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),p1__31245_SHARP_,new cljs.core.Keyword(null,\"input\",\"input\",556931961),s], null));\n});})(map__31262,map__31262__$1,content_type))\n);\nvar raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31262__$1,new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272));\nvar dom = (new DOMParser()).parseFromString(s,content_type);\nvar doc = dom.documentElement;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"parsererror\",doc.nodeName)){\nreturn (on_error.cljs$core$IFn$_invoke$arity$1 ? on_error.cljs$core$IFn$_invoke$arity$1(doc) : on_error.call(null,doc));\n} else {\nif(cljs.core.truth_(raw)){\nreturn doc;\n} else {\nreturn (clojure.data.xml.element_data.cljs$core$IFn$_invoke$arity$1 ? clojure.data.xml.element_data.cljs$core$IFn$_invoke$arity$1(doc) : clojure.data.xml.element_data.call(null,doc));\n\n}\n}\n});\n\nclojure.data.xml.parse_str.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nclojure.data.xml.parse_str.cljs$lang$applyTo = (function (seq31247){\nvar G__31248 = cljs.core.first(seq31247);\nvar seq31247__$1 = cljs.core.next(seq31247);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31248,seq31247__$1);\n});\n\n/**\n * Use XMLSerializer to render an xml string\n * @param {...*} var_args\n */\nclojure.data.xml.emit_str = (function clojure$data$xml$emit_str(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___31387 = arguments.length;\nvar i__4731__auto___31388 = (0);\nwhile(true){\nif((i__4731__auto___31388 < len__4730__auto___31387)){\nargs__4736__auto__.push((arguments[i__4731__auto___31388]));\n\nvar G__31391 = (i__4731__auto___31388 + (1));\ni__4731__auto___31388 = G__31391;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn clojure.data.xml.emit_str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nclojure.data.xml.emit_str.cljs$core$IFn$_invoke$arity$variadic = (function (e,p__31273){\nvar map__31274 = p__31273;\nvar map__31274__$1 = (((((!((map__31274 == null))))?(((((map__31274.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31274.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31274):map__31274);\nreturn (new XMLSerializer()).serializeToString((clojure.data.xml.element_node.cljs$core$IFn$_invoke$arity$1 ? clojure.data.xml.element_node.cljs$core$IFn$_invoke$arity$1(e) : clojure.data.xml.element_node.call(null,e)));\n});\n\nclojure.data.xml.emit_str.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nclojure.data.xml.emit_str.cljs$lang$applyTo = (function (seq31268){\nvar G__31269 = cljs.core.first(seq31268);\nvar seq31268__$1 = cljs.core.next(seq31268);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31269,seq31268__$1);\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/data/xml.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$export-api","~$clojure.data.xml.impl"],"~:excludes",["~#set",[]],"~:name","~$clojure.data.xml","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.data.xml.name","^Q","~$dom","~$clojure.data.xml.js.dom","~$cljs.core","^T","~$goog","^U","~$name","^Q","~$node","~$clojure.data.xml.node","^X","^X","^S","^S","~$clojure.data.xml.protocols","^Y"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$AsQName","^Y"],"^10",["^ ","^H","^H","^T","^T"],"~:form",["~#list",["~$ns","^L",["^14",["^10",["^H","~:refer",["^G"]]]],["^14",["^[",["^Q","~:as","^V"],["^X","^17","^W"],["^S","^17","^R"],["^Y","^16",["^12"]]]]]],"~:flags",["^ ","^10",["^J",[]],"^[",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^Q","^X","^S","^Y"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","clojure/data/xml.cljs"],"~:compiled-at",1560578451307,"~:resource-name","clojure/data/xml.cljs","~:warnings",[],"~:source","(ns clojure.data.xml\n  (:require-macros\n   [clojure.data.xml.impl :refer [export-api]])\n  (:require\n   [clojure.data.xml.name :as name]\n   [clojure.data.xml.node :as node]\n   [clojure.data.xml.js.dom :as dom]\n   [clojure.data.xml.protocols :refer [AsQName]]))\n\n(export-api\n name/parse-qname name/qname-uri name/qname-local name/qname name/as-qname name/uri-symbol name/symbol-uri\n node/element* node/element node/cdata node/xml-comment node/element?\n dom/extend-dom-as-data! dom/element-node dom/element-data)\n\n;;;; ## TODO event-seq\n;; This probably won't happen due to js' non-blocking semantics\n;; Instead, for clojurescript, the machinery around event-seq could be implemented\n;; as a transducer stack, such that a push-based source for parser events, like sax-js,\n;; could be used.\n\n;; TODO parse (use goog StringBuffer?)\n\n(defn parse-str\n  \"Use DOMParser to parse xml string\"\n  ;; TODO detect browser specific parsererror tags\n  ;;  see http://stackoverflow.com/questions/11563554/how-do-i-detect-xml-parsing-errors-when-using-javascripts-domparser-in-a-cross\n  [s & {:keys [content-type on-error raw]\n        :or {content-type \"text/xml\"\n             on-error #(throw (ex-info \"XML parser error\" {:doc % :input s}))}}]\n  (let [dom (. (js/DOMParser.)\n               (parseFromString s content-type))\n        doc (.-documentElement dom)]\n    (cond (= \"parsererror\" (.-nodeName doc))\n          (on-error doc)\n          raw doc\n          :else (element-data doc))))\n\n;; TODO emit (use goog StringBuffer?)\n\n(defn emit-str\n  \"Use XMLSerializer to render an xml string\"\n  [e & {:keys []}]\n  (. (js/XMLSerializer.)\n     (serializeToString\n      (element-node e))))\n\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["clojure.data.xml/parse-qname","cljs.core/alter-meta!","cljs.core/constantly","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/meta","clojure.data.xml.name/parse-qname","clojure.data.xml/qname-uri","clojure.data.xml.name/qname-uri","clojure.data.xml/qname-local","clojure.data.xml.name/qname-local","clojure.data.xml/qname","clojure.data.xml.name/qname","clojure.data.xml/as-qname","clojure.data.xml.name/as-qname","clojure.data.xml/uri-symbol","clojure.data.xml.name/uri-symbol","clojure.data.xml/symbol-uri","clojure.data.xml.name/symbol-uri","clojure.data.xml/element*","clojure.data.xml.node/element*","clojure.data.xml/element","clojure.data.xml.node/element","clojure.data.xml/cdata","clojure.data.xml.node/cdata","clojure.data.xml/xml-comment","clojure.data.xml.node/xml-comment","clojure.data.xml/element?","clojure.data.xml.node/element?","clojure.data.xml/extend-dom-as-data!","clojure.data.xml.js.dom/extend-dom-as-data!","clojure.data.xml/element-node","clojure.data.xml.js.dom/element-node","clojure.data.xml/element-data","clojure.data.xml.js.dom/element-data","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","clojure.data.xml/parse-str","p__31258","map__31262","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$3","p1__31245#","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq31247","G__31248","cljs.core/first","cljs.core/next","self__4717__auto__","s","content-type","on-error","raw","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","dom","js/DOMParser","doc","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","clojure.data.xml/emit-str","p__31273","map__31274","seq31268","G__31269","e","js/XMLSerializer"]]],"~:cache-keys",["~#cmap",[["^1<","clojure/data/xml/node.cljc"],[1551120970000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^U","^T","^Q"]]],["~:macro","^T"],[1559826623000],["^1<","goog/math/math.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","~$goog.array","~$goog.asserts"]]],["^1<","goog/array/array.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1O"]]],["^1<","goog/debug/error.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","goog/dom/nodetype.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","goog/object/object.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^1<","goog/math/long.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1O","~$goog.reflect"]]],["^1<","goog/string/internal.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","goog/functions/functions.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","clojure/data/xml.cljs"],[1551120970000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T","^Q","^X","^S","^Y"]]],["^1<","clojure/data/xml/js/dom.cljs"],[1551120970000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T","^Q","^X"]]],["^1<","goog/structs/map.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1<","clojure/data/xml/js/name.cljs"],[1551120970000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T","^Y","~$clojure.string"]]],["^1<","goog/asserts/asserts.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1<","goog/uri/uri.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1N","^1O","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1<","goog/base.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",[]]],["^1<","goog/structs/structs.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1N","~$goog.object"]]],["^1<","clojure/data/xml/protocols.cljc"],[1551120970000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T"]]],["^1<","clojure/string.cljs"],[1559826623000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T","^1W","~$goog.string.StringBuffer"]]],["^1<","goog/string/string.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","~$goog.string.internal"]]],["^1<","goog/reflect/reflect.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","goog/string/stringbuffer.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","clojure/data/xml/name.cljc"],[1551120970000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^T","^1T","~$clojure.data.xml.js.name","^Y","^22"]]],["^1<","goog/iter/iter.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1N","^1O","~$goog.functions","~$goog.math"]]],["^1<","cljs/core.cljs"],[1559826623000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["~$goog.math.Long","~$goog.math.Integer","^1W","^21","^1N","~$goog.Uri","^22"]]],["^1<","goog/math/integer.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U"]]],["^1<","goog/uri/utils.js"],[1560546089000,"^1I",["^ ","^1J",null,"^1K",["^J",[]],"^1L",["^U","^1N","^1O","^1W"]]],["^1M","^H"],[1551120970000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/data/xml.cljs","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^S","^T","^T","^U","^U","^V","^Q","^W","^X","^X","^X","^S","^S","^Y","^Y"],"^Z",["^J",["^[","^10"]],"~:shadow/js-access-global",["^J",["DOMParser","XMLSerializer"]],"^11",["^ ","^12","^Y"],"~:defs",["^ ","~$cdata",["^ ","^K","~$clojure.data.xml/cdata","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$as-qname",["^ ","^K","~$clojure.data.xml/as-qname","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$element",["^ ","^K","~$clojure.data.xml/element","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$extend-dom-as-data!",["^ ","^K","~$clojure.data.xml/extend-dom-as-data!","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$element?",["^ ","^K","~$clojure.data.xml/element?","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$uri-symbol",["^ ","^K","~$clojure.data.xml/uri-symbol","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$parse-str",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/data/xml.cljs","^:",16,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^14",["~$s",["^ ","~:keys",["~$content-type","~$on-error","~$raw"],"~:or",["^ ","^2Q","text/xml","^2R",["^14",["~$fn*",["~$p1__31245#"],["^14",["~$throw",["^14",["~$ex-info","XML parser error",["^ ","~:doc","^2V","~:input","~$s"]]]]]]]]]]]],"~:arglists",["^14",[["~$s","~$&",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]],"~:arglists-meta",["^14",[null]]],"^8",7,"^7",23,"^9",23,"^2[",["^14",["~$quote",["^14",[["~$s","~$&",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]]]],"^2Y","Use DOMParser to parse xml string","~:jsdoc",["^14",["@param {...*} var_args"]]],"^K","~$clojure.data.xml/parse-str","^6","clojure/data/xml.cljs","^:",16,"^2K",["^ ","^2L",true,"^2M",1,"^2N",1,"^2O",[["^14",["~$s",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]],"^2[",["^14",[["~$s","~$&",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]],"^30",["^14",[null]]],"^2O",[["^14",["~$s",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]],"~:protocol-impl",null,"^2M",1,"^30",["^14",[null]],"^8",1,"^2L",true,"~:methods",[["^ ","^2M",1,"^2L",true,"~:tag",["^J",["~$any","~$js"]]]],"^7",23,"~:ret-tag","^37","^9",23,"^2N",1,"~:fn-var",true,"^2[",["^14",[["~$s","~$&",["^ ","^2P",["^2Q","^2R","^2S"],"^2T",["^ ","^2Q","text/xml","^2R",["^14",["^2U",["^2V"],["^14",["^2W",["^14",["^2X","XML parser error",["^ ","^2Y","^2V","^2Z","~$s"]]]]]]]]]]]],"^2Y","Use DOMParser to parse xml string","^32",["^14",["@param {...*} var_args"]]],"~$qname",["^ ","^K","~$clojure.data.xml/qname","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$element-data",["^ ","^K","~$clojure.data.xml/element-data","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$element*",["^ ","^K","~$clojure.data.xml/element*","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$xml-comment",["^ ","^K","~$clojure.data.xml/xml-comment","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$element-node",["^ ","^K","~$clojure.data.xml/element-node","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$parse-qname",["^ ","^K","~$clojure.data.xml/parse-qname","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1,"^36","~$function"],"~$emit-str",["^ ","^2J",null,"^5",["^ ","^6","clojure/data/xml.cljs","^:",15,"^2K",["^ ","^2L",true,"^2M",1,"^2N",1,"^2O",[["^14",["~$e",["^ ","^2P",[]]]]],"^2[",["^14",[["~$e","~$&",["^ ","^2P",[]]]]],"^30",["^14",[null]]],"^8",7,"^7",40,"^9",40,"^2[",["^14",["^31",["^14",[["~$e","~$&",["^ ","^2P",[]]]]]]],"^2Y","Use XMLSerializer to render an xml string","^32",["^14",["@param {...*} var_args"]]],"^K","~$clojure.data.xml/emit-str","^6","clojure/data/xml.cljs","^:",15,"^2K",["^ ","^2L",true,"^2M",1,"^2N",1,"^2O",[["^14",["~$e",["^ ","^2P",[]]]]],"^2[",["^14",[["~$e","~$&",["^ ","^2P",[]]]]],"^30",["^14",[null]]],"^2O",[["^14",["~$e",["^ ","^2P",[]]]]],"^34",null,"^2M",1,"^30",["^14",[null]],"^8",1,"^2L",true,"^35",[["^ ","^2M",1,"^2L",true,"^36","^38"]],"^7",40,"^39","^37","^9",40,"^2N",1,"^3:",true,"^2[",["^14",[["~$e","~$&",["^ ","^2P",[]]]]],"^2Y","Use XMLSerializer to render an xml string","^32",["^14",["@param {...*} var_args"]]],"~$qname-uri",["^ ","^K","~$clojure.data.xml/qname-uri","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$qname-local",["^ ","^K","~$clojure.data.xml/qname-local","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1],"~$symbol-uri",["^ ","^K","~$clojure.data.xml/symbol-uri","^5",["^ ","^6",null],"^6","clojure/data/xml.cljs","^7",10,"^8",1]],"^10",["^ ","^H","^H","^T","^T"],"~:cljs.analyzer/constants",["^ ","^Z",["^J",["~$uri","~$tag","~$&","^2F","^2>","~$clojure.data.xml.name/qname-local","~$clojure.data.xml.js.dom/element-data","^3M","^Q","~$clojure.data.xml.js.dom/extend-dom-as-data!","~$local","^2=","~:else","~$clojure.data.xml.name/parse-qname","~:raw","^N","~$clojure.data.xml.js.dom/element-node","~$el","^K","^2?","~:wrapped-by","^6","~$v","^:","~$meta","^2K","^2A","^2@","^2C","^2O","~$clojure.data.xml.name/as-qname","^2M","^2E","^30","~$content","^8","^2D","~$n","^2G","~$clojure.data.xml.name/qname","^3>","^2B","^2L","^3O","^3<","^L","^7","~$clojure.data.xml.name/symbol-uri","^3;","^3@","~$clojure.data.xml.name/uri-symbol","~$clojure.data.xml.node/xml-comment","^2H","^3=","~$clojure.data.xml.node/cdata","~$prefix","~:content-type","^3?","^9","~$clojure.data.xml.name/qname-uri","^3F","^2N","^X","^3D","^2Z","~:on-error","^3A","~$clojure.data.xml.node/element?","^3C","^2[","~$clojure.data.xml.node/element*","^3K","^3E","^2Y","^3J","^3L","^32","~$ss","~:test","^S","~$attrs","^3N","^3B","~$clojure.data.xml.node/element"]],"~:order",["^3F","^6","^N","^2Y","^7","^8","^K","^4@","^2[","^L","^3E","^3X","^Q","^40","^3K","^3J","^4;","^:","^9","~$v","^3M","^3L","^3S","^3<","^3;","^44","^2K","^32","^2L","^2M","^2N","^2O","^30","^3V","^3Q","^49","^2@","^2?","^42","~$n","^2H","^2G","^46","^3O","^3N","^45","^4?","^3@","^3?","^4>","^X","^3R","^4A","^43","^41","^2B","^2A","^4B","~$&","^2>","^2=","^48","^3B","^3A","^47","^2F","^2E","^4=","^3[","^2D","^2C","^3U","^S","^3D","^3C","^3Z","^3>","^3=","^3T","^4:","^4<","^2Z","^3Y","^3W"]],"^18",["^ ","^10",["^J",[]],"^[",["^J",[]]],"^19",["^ "],"^1:",["^U","^T","^Q","^X","^S","^Y"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1H",[["^4F","~:static-fns"],true,["^4F","~:elide-asserts"],true,["^4F","~:optimize-constants"],null,["^4F","^1?"],null,["^4F","~:external-config"],null,["^4F","~:tooling-config"],null,["^4F","~:emit-constants"],null,["^4F","~:load-tests"],false,["^4F","~:infer-externs"],true,["^4F","^1A"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^4F","~:fn-invoke-direct"],null,["^4F","~:source-map"],"/dev/null"]]]