["^ ","~:output",["^ ","~:js","goog.provide('instaparse.util');\n/**\n * @param {...*} var_args\n */\ninstaparse.util.throw_runtime_exception = (function instaparse$util$throw_runtime_exception(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___27396 = arguments.length;\nvar i__4731__auto___27397 = (0);\nwhile(true){\nif((i__4731__auto___27397 < len__4730__auto___27396)){\nargs__4736__auto__.push((arguments[i__4731__auto___27397]));\n\nvar G__27398 = (i__4731__auto___27397 + (1));\ni__4731__auto___27397 = G__27398;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ninstaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic = (function (message){\nthrow cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,message);\n});\n\ninstaparse.util.throw_runtime_exception.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ninstaparse.util.throw_runtime_exception.cljs$lang$applyTo = (function (seq27388){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27388));\n});\n\n/**\n * @param {...*} var_args\n */\ninstaparse.util.throw_illegal_argument_exception = (function instaparse$util$throw_illegal_argument_exception(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___27400 = arguments.length;\nvar i__4731__auto___27401 = (0);\nwhile(true){\nif((i__4731__auto___27401 < len__4730__auto___27400)){\nargs__4736__auto__.push((arguments[i__4731__auto___27401]));\n\nvar G__27402 = (i__4731__auto___27401 + (1));\ni__4731__auto___27401 = G__27402;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ninstaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic = (function (message){\nthrow cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,message);\n});\n\ninstaparse.util.throw_illegal_argument_exception.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ninstaparse.util.throw_illegal_argument_exception.cljs$lang$applyTo = (function (seq27393){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27393));\n});\n\ninstaparse.util.regexp_flags = (function instaparse$util$regexp_flags(re){\nvar G__27394 = \"\";\nvar G__27394__$1 = (cljs.core.truth_(re.ignoreCase)?[G__27394,\"i\"].join(''):G__27394);\nvar G__27394__$2 = (cljs.core.truth_(re.multiline)?[G__27394__$1,\"m\"].join(''):G__27394__$1);\nif(cljs.core.truth_(re.unicode)){\nreturn [G__27394__$2,\"u\"].join('');\n} else {\nreturn G__27394__$2;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","instaparse/util.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",20],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$instaparse.util","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^O","~$goog","^P"],"~:seen",["^H",[]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^J"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^P","^O"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","instaparse/util.cljc"],"~:compiled-at",1560578449185,"~:resource-name","instaparse/util.cljc","~:warnings",[],"~:source","(ns instaparse.util)\r\n\r\n(defn throw-runtime-exception\r\n  [& message]\r\n  (-> (apply str message)\r\n      #?(:clj RuntimeException.)\r\n      throw))\r\n\r\n(defn throw-illegal-argument-exception\r\n  [& message]\r\n  (-> (apply str message)\r\n      #?(:clj IllegalArgumentException.)\r\n      throw))\r\n\r\n#?(:cljs\r\n    (defn regexp-flags [re]\r\n      (cond-> \"\"\r\n        (.-ignoreCase re) (str \"i\")\r\n        (.-multiline re) (str \"m\")\r\n        (.-unicode re) (str \"u\"))))\r\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAEA,AAAA;;;AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AACDI;AADL,AAEE,AAAI,AAACC,AAAMC,AAAIF;;;AAFjB,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAMA,AAAA;;;AAAA,AAAAP,AAAMa;AAAN,AAAA,AAAAZ,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAY,AAAAT;;;AAAA,AAAA,AAAA,AAAA,AAAMS,AACDH;AADL,AAEE,AAAI,AAACC,AAAMC,AAAIF;;;AAFjB,AAAA,AAAA,AAAMG;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAK;;;AAAA,AAOI,AAAA,AAAMC,AAAcC;AAApB,AACE,AAAAC,AAAA;AAAAA,AAAA,AAAAA,AACE,AAAcD,AAAI,AAAAC,AAAA;AADpBA,AAAA,AAAAA,AAEE,AAAaD,AAAI,AAAAC,AAAA;AAFnB,AAAA,AAGE,AAAWD;AAAI,AAAAC,AAAA;;AAHjBA","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","instaparse.util/throw-runtime-exception","seq27388","self__4718__auto__","cljs.core/seq","message","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","instaparse.util/throw-illegal-argument-exception","seq27393","instaparse.util/regexp-flags","re","G__27394"]]],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1559826623000],["^[","goog/math/math.js"],[1560546089000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^P","~$goog.array","~$goog.asserts"]]],["^[","goog/array/array.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1B"]]],["^[","goog/debug/error.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/dom/nodetype.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/object/object.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^[","goog/math/long.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1B","~$goog.reflect"]]],["^[","goog/string/internal.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/functions/functions.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/structs/map.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^[","goog/asserts/asserts.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^[","goog/uri/uri.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1A","^1B","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^[","goog/base.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",[]]],["^[","goog/structs/structs.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1A","~$goog.object"]]],["^[","goog/string/string.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","~$goog.string.internal"]]],["^[","goog/reflect/reflect.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/string/stringbuffer.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/iter/iter.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1A","^1B","~$goog.functions","~$goog.math"]]],["^[","cljs/core.cljs"],[1559826623000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["~$goog.math.Long","~$goog.math.Integer","^1I","^1O","^1A","~$goog.Uri","~$goog.string.StringBuffer"]]],["^[","instaparse/util.cljc"],[1548085352000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^O"]]],["^[","goog/math/integer.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P"]]],["^[","goog/uri/utils.js"],[1560546089000,"^1=",["^ ","^1>",null,"^1?",["^H",[]],"^1@",["^P","^1A","^1B","^1I"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","instaparse/util.cljc","^7",1,"^8",5,"^9",1,"^:",20],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P"],"^Q",["^H",[]],"^R",null,"~:defs",["^ ","~$throw-runtime-exception",["^ ","~:protocol-inline",null,"^5",["^ ","^6","instaparse/util.cljc","^7",3,"^8",7,"^9",3,"^:",30,"~:arglists",["^U",["~$quote",["^U",[["~$&","~$message"]]]]],"~:jsdoc",["^U",["@param {...*} var_args"]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",[["^U",["^21"]]],"^1[",["^U",[["~$&","^21"]]],"~:arglists-meta",["^U",[null]]]],"^I","~$instaparse.util/throw-runtime-exception","^6","instaparse/util.cljc","^:",30,"^23",["^ ","^24",true,"^25",0,"^26",0,"^27",[["^U",["^21"]]],"^1[",["^U",[["~$&","^21"]]],"^28",["^U",[null]]],"^27",[["^U",["^21"]]],"~:protocol-impl",null,"^25",0,"^28",["^U",[null]],"^8",1,"^24",true,"~:methods",[["^ ","^25",0,"^24",true,"~:tag","~$ignore"]],"^7",3,"~:ret-tag","~$any","^9",3,"^26",0,"~:fn-var",true,"^1[",["^U",[["~$&","^21"]]],"^22",["^U",["@param {...*} var_args"]]],"~$throw-illegal-argument-exception",["^ ","^1Z",null,"^5",["^ ","^6","instaparse/util.cljc","^7",9,"^8",7,"^9",9,"^:",39,"^1[",["^U",["^20",["^U",[["~$&","^21"]]]]],"^22",["^U",["@param {...*} var_args"]],"^23",["^ ","^24",true,"^25",0,"^26",0,"^27",[["^U",["^21"]]],"^1[",["^U",[["~$&","^21"]]],"^28",["^U",[null]]]],"^I","~$instaparse.util/throw-illegal-argument-exception","^6","instaparse/util.cljc","^:",39,"^23",["^ ","^24",true,"^25",0,"^26",0,"^27",[["^U",["^21"]]],"^1[",["^U",[["~$&","^21"]]],"^28",["^U",[null]]],"^27",[["^U",["^21"]]],"^2:",null,"^25",0,"^28",["^U",[null]],"^8",1,"^24",true,"^2;",[["^ ","^25",0,"^24",true,"^2<","^2="]],"^7",9,"^2>","^2?","^9",9,"^26",0,"^2@",true,"^1[",["^U",[["~$&","^21"]]],"^22",["^U",["@param {...*} var_args"]]],"~$regexp-flags",["^ ","^1Z",null,"^5",["^ ","^6","instaparse/util.cljc","^7",16,"^8",11,"^9",16,"^:",23,"^1[",["^U",["^20",["^U",[["~$re"]]]]]],"^I","~$instaparse.util/regexp-flags","^6","instaparse/util.cljc","^:",23,"^27",["^U",[["^2D"]]],"^2:",null,"^28",["^U",[null,null]],"^8",5,"^24",false,"^7",16,"^2>","~$string","^9",16,"^26",1,"^2@",true,"^1[",["^U",["^20",["^U",[["^2D"]]]]]]],"^S",["^ ","^O","^O"],"^W",["^ "],"^X",["^ "],"^Y",["^P","^O"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1;",[["^2I","~:static-fns"],true,["^2I","~:elide-asserts"],true,["^2I","~:optimize-constants"],null,["^2I","^12"],null,["^2I","~:external-config"],null,["^2I","~:tooling-config"],null,["^2I","~:emit-constants"],null,["^2I","~:load-tests"],false,["^2I","~:infer-externs"],true,["^2I","^14"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^2I","~:fn-invoke-direct"],null,["^2I","~:source-map"],"/dev/null"]]]