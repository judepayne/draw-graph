["^ ","~:output",["^ ","~:js","goog.provide('kvlt.event_source');\nif((typeof kvlt !== 'undefined') && (typeof kvlt.event_source !== 'undefined') && (typeof kvlt.event_source.format_event !== 'undefined')){\n} else {\n/**\n * Dispatching on the (first) `format` param (corresponding\n *   to [[kvlt.core/event-source!]]'s `:format` param), transform an incoming event\n *   prior to placement on the source's channel.\n * \n *   Implementations receive (and are expected to return the event map) not only\n *   its body.\n */\nkvlt.event_source.format_event = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__20155 = cljs.core.get_global_hierarchy;\nreturn (fexpr__20155.cljs$core$IFn$_invoke$arity$0 ? fexpr__20155.cljs$core$IFn$_invoke$arity$0() : fexpr__20155.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"kvlt.event-source\",\"format-event\"),((function (method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__){\nreturn (function (format,event){\nreturn format;\n});})(method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\nkvlt.event_source.format_event.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (_,e){\nreturn e;\n}));\nkvlt.event_source.format_event.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885),(function (_,e){\nreturn cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(e);\n}));\nkvlt.event_source.format_event.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"json\",\"json\",1279968570),(function (_,e){\nreturn kvlt.platform.util.parse_json(e);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","kvlt/event_source.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$kvlt.event-source","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.reader","^O","~$edn","^O","~$kvlt.platform.util","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$parse-json","^Q"],"~:require-macros",["^ ","^R","^R","^O","^O","^P","^O"],"~:form",["~#list",["~$ns","^J",["^Z",["^U",["^O","~:as","^P"],["^Q","~:refer",["^W"]]]]]],"~:flags",["^ ","^U",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^O","^Q"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","kvlt/event_source.cljc"],"~:compiled-at",1560836576325,"~:resource-name","kvlt/event_source.cljc","~:warnings",[],"~:source","(ns kvlt.event-source\n  (:require [#?(:clj clojure.edn :cljs cljs.reader) :as edn]\n            [kvlt.platform.util :refer [parse-json]]))\n\n(defmulti format-event\n  \"Dispatching on the (first) `format` param (corresponding\n  to [[kvlt.core/event-source!]]'s `:format` param), transform an incoming event\n  prior to placement on the source's channel.\n\n  Implementations receive (and are expected to return the event map) not only\n  its body.\"\n  (fn [format event] format))\n\n(defmethod format-event :default [_ e] e)\n(defmethod format-event :edn     [_ e] (edn/read-string e))\n(defmethod format-event :json    [_ e] (parse-json e))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAIA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;;;;;;AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAUS;AAAVR,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAF,AAAA;AAAAG,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAOE;AAAKE,AAAOC;AAAZ,AAAmBD;;AAPrB,AAAAN,AAAAL,AAAAE,AAAAC,AAAAC;;;AASA,AAAAM,AAAA,AAAA,AAAkCG,AAAEC;AAApC,AAAuCA;;AACvC,AAAAJ,AAAA,AAAA,AAAkCG,AAAEC;AAApC,AAAuC,AAACC,AAAgBD;;AACxD,AAAAJ,AAAA,AAAA,AAAkCG,AAAEC;AAApC,AAAuC,AAACE,AAAWF","names",["js/kvlt","js/kvlt.event-source","js/kvlt.event-source.format-event","method-table__4613__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4614__auto__","method-cache__4615__auto__","cached-hierarchy__4616__auto__","hierarchy__4617__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__20155","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","kvlt.event-source/format-event","format","event","_","e","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","kvlt.platform.util/parse-json"]]],"~:cache-keys",["~#cmap",[["~:macro","^R"],[1559826623000],["^16","cljs/tools/reader/impl/utils.cljs"],[1560546087000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^S","^R","~$clojure.string","~$goog.string"]]],["^16","goog/math/math.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","~$goog.array","~$goog.asserts"]]],["^16","goog/array/array.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1K"]]],["^1C","~$cljs.tools.reader.reader-types"],[1560546087000],["^16","goog/debug/error.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","cljs/tools/reader/edn.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","~$cljs.tools.reader.impl.errors","^1L","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1I","~$goog.string.StringBuffer"]]],["^16","goog/dom/nodetype.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","cljs/tools/reader/impl/inspect.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R"]]],["^16","cljs/tools/reader.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^1L","^1N","^1O","^1M","^1J","^1I","^1Q"]]],["^16","goog/object/object.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^16","kvlt/platform/util.cljs"],[1547383501000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","~$clojure.walk"]]],["^16","goog/math/long.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1K","~$goog.reflect"]]],["^16","goog/string/internal.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","goog/functions/functions.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","clojure/walk.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R"]]],["^16","goog/structs/map.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","cljs/reader.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","~$goog.object","^1P","~$cljs.tools.reader.edn","^1Q"]]],["^16","goog/asserts/asserts.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1J","^1K","^1I","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/base.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",[]]],["^16","goog/structs/structs.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1J","^1W"]]],["^16","cljs/tools/reader/impl/errors.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^1L","^1H","~$cljs.tools.reader.impl.inspect"]]],["^16","clojure/string.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^1I","^1Q"]]],["^16","goog/string/string.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","~$goog.string.internal"]]],["^16","goog/reflect/reflect.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","goog/string/stringbuffer.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","cljs/tools/reader/reader_types.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^1N","^1I","^1Q"]]],["^16","goog/iter/iter.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1J","^1K","~$goog.functions","~$goog.math"]]],["^16","cljs/tools/reader/impl/commons.cljs"],[1560546087000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^1M","^1L","^1N"]]],["^16","cljs/core.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["~$goog.math.Long","~$goog.math.Integer","^1I","^1W","^1J","~$goog.Uri","^1Q"]]],["^16","goog/math/integer.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S"]]],["^16","kvlt/event_source.cljc"],[1547383501000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^R","^O","^Q"]]],["^16","goog/uri/utils.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^S","^1J","^1K","^1I"]]],["^1C","^O"],[1559826623000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","kvlt/event_source.cljc","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^O","^Q","^Q","^R","^R","^S","^S"],"^T",["^H",["^U"]],"^V",["^ ","^W","^Q"],"~:defs",["^ ","~$format-event",["^ ","^5",["^ ","^6","kvlt/event_source.cljc","^7",5,"^8",11,"^9",5,"^:",23,"~:doc","Dispatching on the (first) `format` param (corresponding\n  to [[kvlt.core/event-source!]]'s `:format` param), transform an incoming event\n  prior to placement on the source's channel.\n\n  Implementations receive (and are expected to return the event map) not only\n  its body."],"^I","~$kvlt.event-source/format-event","^6","kvlt/event_source.cljc","^:",23,"^8",1,"^7",5,"^9",5,"~:tag","~$cljs.core/MultiFn","^2>","Dispatching on the (first) `format` param (corresponding\n  to [[kvlt.core/event-source!]]'s `:format` param), transform an incoming event\n  prior to placement on the source's channel.\n\n  Implementations receive (and are expected to return the event map) not only\n  its body."]],"^X",["^ ","^R","^R","^O","^O","^P","^O"],"~:cljs.analyzer/constants",["^ ","^T",["^H",["~:default","~:edn","~:json","~:hierarchy"]],"~:order",["^2F","^2C","^2D","^2E"]],"^12",["^ ","^U",["^H",[]]],"^13",["^ "],"^14",["^S","^R","^O","^Q"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1B",[["^2J","~:static-fns"],true,["^2J","~:elide-asserts"],true,["^2J","~:optimize-constants"],null,["^2J","^19"],null,["^2J","~:external-config"],null,["^2J","~:tooling-config"],null,["^2J","~:emit-constants"],null,["^2J","~:load-tests"],false,["^2J","~:infer-externs"],"~:auto",["^2J","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^2J","~:fn-invoke-direct"],null,["^2J","~:source-map"],null]]]