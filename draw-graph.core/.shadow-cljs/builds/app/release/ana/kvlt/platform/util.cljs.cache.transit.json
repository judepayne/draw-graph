["^ ","~:output",["^ ","~:js","goog.provide('kvlt.platform.util');\nkvlt.platform.util.exception__GT_map = (function kvlt$platform$util$exception__GT_map(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___18782 = arguments.length;\nvar i__4731__auto___18783 = (0);\nwhile(true){\nif((i__4731__auto___18783 < len__4730__auto___18782)){\nargs__4736__auto__.push((arguments[i__4731__auto___18783]));\n\nvar G__18784 = (i__4731__auto___18783 + (1));\ni__4731__auto___18783 = G__18784;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn kvlt.platform.util.exception__GT_map.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nkvlt.platform.util.exception__GT_map.cljs$core$IFn$_invoke$arity$variadic = (function (e,p__18772){\nvar vec__18773 = p__18772;\nvar hints = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18773,(0),null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"message\",\"message\",-406056002),e.message,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"http-error\",\"http-error\",-1040049553)], null),hints], 0));\n});\n\nkvlt.platform.util.exception__GT_map.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nkvlt.platform.util.exception__GT_map.cljs$lang$applyTo = (function (seq18761){\nvar G__18762 = cljs.core.first(seq18761);\nvar seq18761__$1 = cljs.core.next(seq18761);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18762,seq18761__$1);\n});\n\nkvlt.platform.util.gunzip = (function kvlt$platform$util$gunzip(s){\nreturn s;\n});\nkvlt.platform.util.inflate = (function kvlt$platform$util$inflate(s){\nreturn s;\n});\nkvlt.platform.util.byte_array_QMARK_ = (function kvlt$platform$util$byte_array_QMARK_(x){\nreturn (((((typeof ArrayBuffer !== 'undefined')) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.type(x),ArrayBuffer)))) || ((((typeof Buffer !== 'undefined')) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.type(x),Buffer)))));\n});\nkvlt.platform.util.byte_array__GT_str = (function kvlt$platform$util$byte_array__GT_str(ba,encoding){\nif((((typeof Buffer !== 'undefined')) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.type(ba),Buffer)))){\nreturn ba.toString(encoding);\n} else {\nreturn ba;\n}\n});\nkvlt.platform.util.parse_json = (function kvlt$platform$util$parse_json(s){\nreturn clojure.walk.keywordize_keys(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(JSON.parse(s)));\n});\nkvlt.platform.util.encode_json = (function kvlt$platform$util$encode_json(x){\nreturn JSON.stringify(cljs.core.clj__GT_js(x));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","kvlt/platform/util.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",32,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$kvlt.platform.util","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.walk","^P","~$walk","^P","~$cljs.core","^R","~$goog","^S"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^K",["^Y",["^U",["^P","~:as","^Q"]]]]],"~:flags",["^ ","^U",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^P"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","kvlt/platform/util.cljs"],"~:compiled-at",1560836575758,"~:resource-name","kvlt/platform/util.cljs","~:warnings",[],"~:source","(ns ^:no-doc kvlt.platform.util\n  (:require [clojure.walk :as walk]))\n\n(defn exception->map [e & [hints]]\n  (merge {:message (.. e -message)\n          :type    :http-error\n          :error   :http-error} hints))\n\n;; These functions oughtn't be invoked currently - accept-encoding\n;; isn't ever set on Node, and in the browser, the response will be\n;; silently decompressed.\n(defn gunzip  [s] s)\n(defn inflate [s] s)\n\n(defn byte-array? [x]\n  (or (and (exists? js/ArrayBuffer) (= (type x) js/ArrayBuffer))\n      (and (exists? js/Buffer) (= (type x) js/Buffer))))\n\n(defn byte-array->str [ba encoding]\n  (if (and (exists? js/Buffer) (= (type ba) js/Buffer))\n    (.toString ba encoding)\n    ba))\n\n(defn parse-json [s]\n  (walk/keywordize-keys (js->clj (.parse js/JSON s))))\n\n(defn encode-json [x]\n  (.stringify js/JSON (clj->js x)))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAGA,AAAA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAgBS;AAAtB,AAAA,AAAAP,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAA2BQ;AAA3B,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAgB,AAAIF,AAESC;;;AAHhC,AAAA,AAAA,AAAMV;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA,AAQA,AAAA,AAAMQ,AAASC;AAAf,AAAkBA;;AAClB,AAAA,AAAMC,AAASD;AAAf,AAAkBA;;AAElB,AAAA,AAAME,AAAaC;AAAnB,AACE,AAAI,AAAK,AAAAC,AAAyB,AAACC,AAAE,AAACC,AAAKH,AAAGC,AAC1C,AAAK,AAAAG,AAAoB,AAACF,AAAE,AAACC,AAAKH,AAAGI;;AAE3C,AAAA,AAAMC,AAAiBC,AAAGC;AAA1B,AACE,AAAI,AAAK,AAAAH,AAAoB,AAACF,AAAE,AAACC,AAAKG,AAAIF;AACxC,AAAWE,AAAGC;;AACdD;;;AAEJ,AAAA,AAAME,AAAYX;AAAlB,AACE,AAACY,AAAqB,AAACC,AAAQ,AAAQC,AAAQd;;AAEjD,AAAA,AAAMe,AAAaZ;AAAnB,AACE,AAAYW,AAAQ,AAACE,AAAQb","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","kvlt.platform.util/exception->map","p__18772","vec__18773","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq18761","G__18762","cljs.core/first","cljs.core/next","self__4717__auto__","e","hints","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","kvlt.platform.util/gunzip","s","kvlt.platform.util/inflate","kvlt.platform.util/byte-array?","x","js/ArrayBuffer","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/type","js/Buffer","kvlt.platform.util/byte-array->str","ba","encoding","kvlt.platform.util/parse-json","clojure.walk/keywordize-keys","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","js/JSON","kvlt.platform.util/encode-json","cljs.core/clj->js"]]],"~:cache-keys",["~#cmap",[["~:macro","^R"],[1559826623000],["^14","goog/math/math.js"],[1560546089000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^S","~$goog.array","~$goog.asserts"]]],["^14","goog/array/array.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1G"]]],["^14","goog/debug/error.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/dom/nodetype.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/object/object.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^14","kvlt/platform/util.cljs"],[1547383501000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^R","^P"]]],["^14","goog/math/long.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1G","~$goog.reflect"]]],["^14","goog/string/internal.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/functions/functions.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","clojure/walk.cljs"],[1559826623000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^R"]]],["^14","goog/structs/map.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^14","goog/asserts/asserts.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1F","^1G","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/base.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",[]]],["^14","goog/structs/structs.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1F","~$goog.object"]]],["^14","goog/string/string.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","~$goog.string.internal"]]],["^14","goog/reflect/reflect.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/string/stringbuffer.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/iter/iter.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1F","^1G","~$goog.functions","~$goog.math"]]],["^14","cljs/core.cljs"],[1559826623000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["~$goog.math.Long","~$goog.math.Integer","^1N","^1T","^1F","~$goog.Uri","~$goog.string.StringBuffer"]]],["^14","goog/math/integer.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S"]]],["^14","goog/uri/utils.js"],[1560546089000,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^S","^1F","^1G","^1N"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","kvlt/platform/util.cljs","^7",1,"^8",14,"^9",1,"^:",32,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^P","^R","^R","^S","^S"],"^T",["^I",["^U"]],"~:shadow/js-access-global",["^I",["ArrayBuffer","Buffer","JSON"]],"^V",null,"~:defs",["^ ","~$exception->map",["^ ","~:protocol-inline",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",4,"^8",7,"^9",4,"^:",21,"~:arglists",["^Y",["~$quote",["^Y",[["~$e","~$&",["~$hints"]]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^Y",["~$e",["^27"]]]],"^25",["^Y",[["~$e","~$&",["^27"]]]],"~:arglists-meta",["^Y",[null]]]],"^J","~$kvlt.platform.util/exception->map","^6","kvlt/platform/util.cljs","^:",21,"^28",["^ ","^29",true,"^2:",1,"^2;",1,"^2<",[["^Y",["~$e",["^27"]]]],"^25",["^Y",[["~$e","~$&",["^27"]]]],"^2=",["^Y",[null]]],"^2<",[["^Y",["~$e",["^27"]]]],"~:protocol-impl",null,"^2:",1,"^2=",["^Y",[null]],"^8",1,"^29",true,"~:methods",[["^ ","^2:",1,"^29",true,"~:tag",["^I",["~$any","~$clj-nil"]]]],"^7",4,"~:ret-tag","^2B","^9",4,"^2;",1,"~:fn-var",true,"^25",["^Y",[["~$e","~$&",["^27"]]]]],"~$gunzip",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",12,"^8",7,"^9",12,"^:",13,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"^J","~$kvlt.platform.util/gunzip","^6","kvlt/platform/util.cljs","^:",13,"^2<",["^Y",[["~$s"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",12,"^9",12,"^2;",1,"^2E",true,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"~$inflate",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"^J","~$kvlt.platform.util/inflate","^6","kvlt/platform/util.cljs","^:",14,"^2<",["^Y",[["~$s"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",13,"^9",13,"^2;",1,"^2E",true,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"~$byte-array?",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",15,"^8",7,"^9",15,"^:",18,"^25",["^Y",["^26",["^Y",[["~$x"]]]]]],"^J","~$kvlt.platform.util/byte-array?","^6","kvlt/platform/util.cljs","^:",18,"^2<",["^Y",[["~$x"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",15,"^2D","~$boolean","^9",15,"^2;",1,"^2E",true,"^25",["^Y",["^26",["^Y",[["~$x"]]]]]],"~$byte-array->str",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",19,"^8",7,"^9",19,"^:",22,"^25",["^Y",["^26",["^Y",[["~$ba","~$encoding"]]]]]],"^J","~$kvlt.platform.util/byte-array->str","^6","kvlt/platform/util.cljs","^:",22,"^2<",["^Y",[["^2N","^2O"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",19,"^2D",["^I",[null,"^2B"]],"^9",19,"^2;",2,"^2E",true,"^25",["^Y",["^26",["^Y",[["^2N","^2O"]]]]]],"~$parse-json",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",24,"^8",7,"^9",24,"^:",17,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"^J","~$kvlt.platform.util/parse-json","^6","kvlt/platform/util.cljs","^:",17,"^2<",["^Y",[["~$s"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",24,"^2D","^2B","^9",24,"^2;",1,"^2E",true,"^25",["^Y",["^26",["^Y",[["~$s"]]]]]],"~$encode-json",["^ ","^24",null,"^5",["^ ","^6","kvlt/platform/util.cljs","^7",27,"^8",7,"^9",27,"^:",18,"^25",["^Y",["^26",["^Y",[["~$x"]]]]]],"^J","~$kvlt.platform.util/encode-json","^6","kvlt/platform/util.cljs","^:",18,"^2<",["^Y",[["~$x"]]],"^2?",null,"^2=",["^Y",[null,null]],"^8",1,"^29",false,"^7",27,"^2D","~$js","^9",27,"^2;",1,"^2E",true,"^25",["^Y",["^26",["^Y",[["~$x"]]]]]]],"^W",["^ ","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^I",["~:type","~:http-error","~:error","~:message"]],"~:order",["^2Z","^2W","^2Y","^2X"]],"^10",["^ ","^U",["^I",[]]],"^11",["^ "],"^12",["^S","^R","^P"]],"^M","^K","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1@",[["^32","~:static-fns"],true,["^32","~:elide-asserts"],true,["^32","~:optimize-constants"],null,["^32","^17"],null,["^32","~:external-config"],null,["^32","~:tooling-config"],null,["^32","~:emit-constants"],null,["^32","~:load-tests"],false,["^32","~:infer-externs"],"~:auto",["^32","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^32","~:fn-invoke-direct"],null,["^32","~:source-map"],null]]]