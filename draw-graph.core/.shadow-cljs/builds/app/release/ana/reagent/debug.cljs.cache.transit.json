["^ ","~:output",["^ ","~:js","goog.provide('reagent.debug');\nreagent.debug.has_console = (typeof console !== 'undefined');\nreagent.debug.tracking = false;\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.warnings !== 'undefined')){\n} else {\nreagent.debug.warnings = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.track_console !== 'undefined')){\n} else {\nreagent.debug.track_console = (function (){var o = ({});\no.warn = ((function (o){\nreturn (function() { \nvar G__7917__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__7917 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__7918__i = 0, G__7918__a = new Array(arguments.length -  0);\nwhile (G__7918__i < G__7918__a.length) {G__7918__a[G__7918__i] = arguments[G__7918__i + 0]; ++G__7918__i;}\n  args = new cljs.core.IndexedSeq(G__7918__a,0,null);\n} \nreturn G__7917__delegate.call(this,args);};\nG__7917.cljs$lang$maxFixedArity = 0;\nG__7917.cljs$lang$applyTo = (function (arglist__7919){\nvar args = cljs.core.seq(arglist__7919);\nreturn G__7917__delegate(args);\n});\nG__7917.cljs$core$IFn$_invoke$arity$variadic = G__7917__delegate;\nreturn G__7917;\n})()\n;})(o))\n;\n\no.error = ((function (o){\nreturn (function() { \nvar G__7925__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__7925 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__7926__i = 0, G__7926__a = new Array(arguments.length -  0);\nwhile (G__7926__i < G__7926__a.length) {G__7926__a[G__7926__i] = arguments[G__7926__i + 0]; ++G__7926__i;}\n  args = new cljs.core.IndexedSeq(G__7926__a,0,null);\n} \nreturn G__7925__delegate.call(this,args);};\nG__7925.cljs$lang$maxFixedArity = 0;\nG__7925.cljs$lang$applyTo = (function (arglist__7927){\nvar args = cljs.core.seq(arglist__7927);\nreturn G__7925__delegate(args);\n});\nG__7925.cljs$core$IFn$_invoke$arity$variadic = G__7925__delegate;\nreturn G__7925;\n})()\n;})(o))\n;\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings = (function reagent$debug$track_warnings(f){\nreagent.debug.tracking = true;\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns = cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\nreagent.debug.tracking = false;\n\nreturn warns;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/debug.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$assert-js-object",["^ ","~:arglists",["~#list",[["~$value"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","~:name","~$reagent.debug/assert-js-object","~:ns","~$reagent.debug","~:macro",true],"~$log",["^ ","^K",["^L",[["~$&","~$forms"]]],"~:doc","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/log","^P","^Q","^R",true],"~$warn-unless",["^ ","^K",["^L",[["~$cond","~$&","^T"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/warn-unless","^P","^Q","^R",true],"~$assert-some",["^ ","^K",["^L",[["^M","~$tag"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/assert-some","^P","^Q","^R",true],"~$assert-new-state",["^ ","^K",["^L",[["^M"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/assert-new-state","^P","^Q","^R",true],"~$dbg",["^ ","^K",["^L",[["~$x"]]],"^U","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/dbg","^P","^Q","^R",true],"~$prn",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/prn","^P","^Q","^R",true],"~$warn",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/warn","^P","^Q","^R",true],"~$dev?",["^ ","^K",["^L",[[]]],"^U","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/dev?","^P","^Q","^R",true],"~$println",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/println","^P","^Q","^R",true],"~$time",["^ ","^K",["^L",[["~$&","^T"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/time","^P","^Q","^R",true],"~$assert-component",["^ ","^K",["^L",[["^M"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/assert-component","^P","^Q","^R",true],"~$assert-callable",["^ ","^K",["^L",[["^M"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/assert-callable","^P","^Q","^R",true],"~$error",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^N","~$reagent.debug/error","^P","^Q","^R",true]],"^N","^Q","~:op","^P","~:imports",null,"~:requires",["^ ","~$cljs.core","^1H","~$goog","^1I"],"~:seen",["^H",["~:require-macros"]],"~:uses",null,"^1K",["^ ","^Q","^Q","^1H","^1H"],"~:form",["^L",["~$ns","^Q",["^L",["^1K",["^Q"]]]]],"~:flags",["^ ","^1K",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^1I","^1H"]],"^P","^Q","~:resource-id",["~:shadow.build.classpath/resource","reagent/debug.cljs"],"~:compiled-at",1560836571385,"~:resource-name","reagent/debug.cljs","~:warnings",[],"~:source","(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAGA,AAAaA,AAAY,AAAAC;AAEzB,AAAA,AAAcC;AAEd,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC;;AAEnB,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAMC;AAAN,AACE,AAAM,AAAQA,AACR;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAkBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD7CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEb,AAAM,AAASD,AACT;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAmBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD9CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEbD;;;AAEJ,AAAA,AAAMO,AAAgBC;AAAtB,AACE,AAAA,AAAMhB;;AACN,AAAA,AAACiB,AAAOb;;AACR,AAACY,AAAAA,AAAAA;;AACD,AAAA,AAAAE,AAAMC,AAAOf;AAAb,AACE,AAAA,AAACa,AAAOb;;AACR,AAAA,AAAMJ;;AACNmB","names",["reagent.debug/has-console","js/console","reagent.debug/tracking","js/reagent","js/reagent.debug","js/reagent.debug.warnings","reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/reagent.debug.track-console","reagent.debug/track-console","o","args","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/conj","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","reagent.debug/track-warnings","f","cljs.core/reset!","cljs.core/deref","warns"]]],"~:cache-keys",["~#cmap",[["^R","^1H"],[1559826623000],["^1S","goog/math/math.js"],[1560546089000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^1I","~$goog.array","~$goog.asserts"]]],["^R","^Q"],[1546943132000],["^1S","goog/array/array.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^29"]]],["^1S","goog/debug/error.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/dom/nodetype.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/object/object.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^1S","goog/math/long.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^29","~$goog.reflect"]]],["^1S","goog/string/internal.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/functions/functions.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/structs/map.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1S","goog/asserts/asserts.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1S","goog/uri/uri.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^28","^29","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1S","goog/base.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",[]]],["^1S","goog/structs/structs.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^28","~$goog.object"]]],["^1S","goog/string/string.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","~$goog.string.internal"]]],["^1S","goog/reflect/reflect.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/string/stringbuffer.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/iter/iter.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^28","^29","~$goog.functions","~$goog.math"]]],["^1S","cljs/core.cljs"],[1559826623000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["~$goog.math.Long","~$goog.math.Integer","^2@","^2F","^28","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1S","reagent/debug.cljs"],[1546943132000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^1H"]]],["^1S","goog/math/integer.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I"]]],["^1S","goog/uri/utils.js"],[1560546089000,"^24",["^ ","^25",null,"^26",["^H",[]],"^27",["^1I","^28","^29","^2@"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/debug.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I",["^ ","^J",["^ ","^K",["^L",[["^M"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","^N","^O","^P","^Q","^R",true],"^S",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^N","^V","^P","^Q","^R",true],"^W",["^ ","^K",["^L",[["^X","~$&","^T"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^N","^Y","^P","^Q","^R",true],"^Z",["^ ","^K",["^L",[["^M","^["]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^N","^10","^P","^Q","^R",true],"^11",["^ ","^K",["^L",[["^M"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^N","^12","^P","^Q","^R",true],"^13",["^ ","^K",["^L",[["~$x"]]],"^U","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^N","^14","^P","^Q","^R",true],"^15",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^N","^16","^P","^Q","^R",true],"^17",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^N","^18","^P","^Q","^R",true],"^19",["^ ","^K",["^L",[[]]],"^U","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^N","^1:","^P","^Q","^R",true],"^1;",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^N","^1<","^P","^Q","^R",true],"^1=",["^ ","^K",["^L",[["~$&","^T"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^N","^1>","^P","^Q","^R",true],"^1?",["^ ","^K",["^L",[["^M"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^N","^1@","^P","^Q","^R",true],"^1A",["^ ","^K",["^L",[["^M"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^N","^1B","^P","^Q","^R",true],"^1C",["^ ","^K",["^L",[["~$&","^T"]]],"^U","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^N","^1D","^P","^Q","^R",true]],"^N","^Q","^1F",null,"^1G",["^ ","^1H","^1H","^1I","^1I"],"^1J",["^H",["^1K"]],"^1L",null,"~:defs",["^ ","~$has-console",["^ ","^5",["^ ","^6","reagent/debug.cljs","^7",4,"^8",14,"^9",4,"^:",25,"~:const",true],"^N","~$reagent.debug/has-console","^6","reagent/debug.cljs","^:",25,"^8",1,"^2Q",true,"^7",4,"^9",4,"~:tag","~$boolean"],"~$tracking",["^ ","^N","~$reagent.debug/tracking","^6","reagent/debug.cljs","^7",6,"^8",1,"^9",6,"^:",23,"^2S","^2T","^5",["^ ","^6","reagent/debug.cljs","^7",6,"^8",15,"^9",6,"^:",23,"^2S","^2T"]],"~$warnings",["^ ","^N","~$reagent.debug/warnings","^6","reagent/debug.cljs","^7",8,"^8",1,"^9",8,"^:",18,"^5",["^ ","^6","reagent/debug.cljs","^7",8,"^8",10,"^9",8,"^:",18],"^2S","~$cljs.core/Atom"],"~$track-console",["^ ","^N","~$reagent.debug/track-console","^6","reagent/debug.cljs","^7",10,"^8",1,"^9",10,"^:",23,"^5",["^ ","^6","reagent/debug.cljs","^7",10,"^8",10,"^9",10,"^:",23],"^2S","~$object"],"~$track-warnings",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/debug.cljs","^7",20,"^8",7,"^9",20,"^:",21,"^K",["^L",["~$quote",["^L",[["~$f"]]]]]],"^N","~$reagent.debug/track-warnings","^6","reagent/debug.cljs","^:",21,"~:method-params",["^L",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^8",1,"~:variadic?",false,"^7",20,"~:ret-tag","~$any","^9",20,"~:max-fixed-arity",1,"~:fn-var",true,"^K",["^L",["^33",["^L",[["~$f"]]]]]]],"^1K",["^ ","^Q","^Q","^1H","^1H"],"~:cljs.analyzer/constants",["^ ","^1J",["^H",["~:warn","~:error"]],"~:order",["^3>","^3?"]],"^1O",["^ ","^1K",["^H",[]]],"^1P",["^ "],"^1Q",["^1I","^1H"]],"^P","^Q","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^23",[["^3C","~:static-fns"],true,["^3C","~:elide-asserts"],true,["^3C","~:optimize-constants"],null,["^3C","^1V"],null,["^3C","~:external-config"],null,["^3C","~:tooling-config"],null,["^3C","~:emit-constants"],null,["^3C","~:load-tests"],false,["^3C","~:infer-externs"],"~:auto",["^3C","^1X"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^3C","~:fn-invoke-direct"],null,["^3C","~:source-map"],null]]]