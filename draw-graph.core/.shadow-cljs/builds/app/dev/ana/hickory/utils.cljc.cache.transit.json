["^ ","~:output",["^ ","~:js","goog.provide('hickory.utils');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('goog.string');\n/**\n * Elements that don't have a meaningful <tag></tag> form.\n */\nhickory.utils.void_element = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 16, [new cljs.core.Keyword(null,\"hr\",\"hr\",1377740067),null,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),null,new cljs.core.Keyword(null,\"wbr\",\"wbr\",228661800),null,new cljs.core.Keyword(null,\"command\",\"command\",-894540724),null,new cljs.core.Keyword(null,\"source\",\"source\",-433931539),null,new cljs.core.Keyword(null,\"param\",\"param\",2013631823),null,new cljs.core.Keyword(null,\"link\",\"link\",-1769163468),null,new cljs.core.Keyword(null,\"col\",\"col\",-1959363084),null,new cljs.core.Keyword(null,\"area\",\"area\",472007256),null,new cljs.core.Keyword(null,\"br\",\"br\",934104792),null,new cljs.core.Keyword(null,\"input\",\"input\",556931961),null,new cljs.core.Keyword(null,\"base\",\"base\",185279322),null,new cljs.core.Keyword(null,\"embed\",\"embed\",-1354913349),null,new cljs.core.Keyword(null,\"keygen\",\"keygen\",-571693253),null,new cljs.core.Keyword(null,\"img\",\"img\",1442687358),null,new cljs.core.Keyword(null,\"track\",\"track\",195787487),null], null), null);\n/**\n * Elements whose content should never have html-escape codes.\n */\nhickory.utils.unescapable_content = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"script\",\"script\",-1304443801),null,new cljs.core.Keyword(null,\"style\",\"style\",-496642736),null], null), null);\nhickory.utils.html_escape = (function hickory$utils$html_escape(s){\nreturn goog.string.htmlEscape(s);\n});\nhickory.utils.starts_with = (function hickory$utils$starts_with(s,prefix){\nreturn goog.string.startsWith(s,prefix);\n});\n/**\n * Converts its string argument into a lowercase keyword.\n */\nhickory.utils.lower_case_keyword = (function hickory$utils$lower_case_keyword(s){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case(s));\n});\n/**\n * Returns a string containing the HTML source for the doctype with given args.\n * The second and third arguments can be nil or empty strings.\n */\nhickory.utils.render_doctype = (function hickory$utils$render_doctype(name,publicid,systemid){\nreturn [\"<!DOCTYPE \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),(cljs.core.truth_(cljs.core.not_empty(publicid))?[\" PUBLIC \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(publicid),\"\\\"\"].join(''):null),(cljs.core.truth_(cljs.core.not_empty(systemid))?[\" \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(systemid),\"\\\"\"].join(''):null),\">\"].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Miscellaneous utilities used internally.","~:file","hickory/utils.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$hickory.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^P","~$string","^P","~$goog.string","^R","~$gstring","^R","~$cljs.core","^T","~$goog","^U"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^K","Miscellaneous utilities used internally.",["^[",["^W",["^P","~:as","^Q"],["^R","^11","^S"]]]]],"~:flags",["^ ","^W",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^P","^R"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","hickory/utils.cljc"],"~:compiled-at",1560836392308,"~:resource-name","hickory/utils.cljc","~:warnings",[],"~:source","(ns hickory.utils\n  \"Miscellaneous utilities used internally.\"\n  (:require [clojure.string :as string]\n    #?(:clj\n            [quoin.text :as qt]\n       :cljs [goog.string :as gstring])))\n\n;;\n;; Data\n;;\n\n(def void-element\n  \"Elements that don't have a meaningful <tag></tag> form.\"\n  #{:area :base :br :col :command :embed :hr :img :input :keygen :link :meta\n    :param :source :track :wbr})\n\n(def unescapable-content\n  \"Elements whose content should never have html-escape codes.\"\n  #{:script :style})\n\n;;\n;; String utils\n;;\n\n(defn html-escape\n  [s]\n  #?(:clj  (qt/html-escape s)\n     :cljs (gstring/htmlEscape s)))\n\n(defn starts-with\n  [^String s ^String prefix]\n  #?(:clj  (.startsWith s prefix)\n     :cljs (goog.string.startsWith s prefix)))\n\n(defn lower-case-keyword\n  \"Converts its string argument into a lowercase keyword.\"\n  [s]\n  (-> s string/lower-case keyword))\n\n(defn render-doctype\n  \"Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings.\"\n  [name publicid systemid]\n  (str \"<!DOCTYPE \" name\n       (when (not-empty publicid)\n         (str \" PUBLIC \\\"\" publicid \"\\\"\"))\n       (when (not-empty systemid)\n         (str \" \\\"\" systemid \"\\\"\"))\n       \">\"))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;;AAWA;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAKL;;;AAAA,AAAA,AAAA,AAAKC;AAQL,AAAA,AAAMC,AACHC;AADH,AAGW,AAACC,AAAmBD;;AAE/B,AAAA,AAAME,AACKF,AAAUG;AADrB,AAGW,AAACC,AAAuBJ,AAAEG;;AAErC;;;AAAA,AAAME,AAEHL;AAFH,AAGE,AAAA,AAAIA,AAAEM,AAAkBC;;AAE1B;;;;AAAA,AAAMC,AAGHC,AAAKC,AAASC;AAHjB,AAIE,AAAA,AAAA,AAAkBF,AACb,AAAA,AAAA,AAAM,AAACG,AAAUF,AACf,AAAA,AAAA,AAAkBA,AACpB,AAAA,AAAA,AAAM,AAACE,AAAUD,AACf,AAAA,AAAA,AAAWA","names",["hickory.utils/void-element","hickory.utils/unescapable-content","hickory.utils/html-escape","s","goog.string/htmlEscape","hickory.utils/starts-with","prefix","js/goog.string.startsWith","hickory.utils/lower-case-keyword","clojure.string/lower-case","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","hickory.utils/render-doctype","name","publicid","systemid","cljs.core/not-empty"]]],"~:cache-keys",["~#cmap",[["~:macro","^T"],[1559826623000],["^16","goog/math/math.js"],[1560546089000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^U","~$goog.array","~$goog.asserts"]]],["^16","goog/array/array.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1I"]]],["^16","goog/debug/error.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/dom/nodetype.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/object/object.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],"~:SHADOW-TIMESTAMP",[1560546091000,1559826623000],["^16","goog/math/long.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1I","~$goog.reflect"]]],["^16","goog/string/internal.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/functions/functions.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/structs/map.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","goog/asserts/asserts.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1H","^1I","^R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","hickory/utils.cljc"],[1547313541000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^T","^P","^R"]]],["^16","goog/base.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",[]]],["^16","goog/structs/structs.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1H","~$goog.object"]]],["^16","clojure/string.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^T","^R","~$goog.string.StringBuffer"]]],["^16","goog/string/string.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","~$goog.string.internal"]]],["^16","goog/reflect/reflect.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/string/stringbuffer.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/iter/iter.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1H","^1I","~$goog.functions","~$goog.math"]]],["^16","cljs/core.cljs"],[1559826623000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["~$goog.math.Long","~$goog.math.Integer","^R","^1U","^1H","~$goog.Uri","^1V"]]],["^16","goog/math/integer.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U"]]],["^16","goog/uri/utils.js"],[1560546089000,"^1D",["^ ","^1E",null,"^1F",["^I",[]],"^1G",["^U","^1H","^1I","^R"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Miscellaneous utilities used internally.","^7","hickory/utils.cljc","^8",1,"^9",5,"^:",1,"^;",18],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^P","^R","^R","^S","^R","^T","^T","^U","^U"],"^V",["^I",["^W"]],"^X",null,"~:defs",["^ ","~$void-element",["^ ","^5",["^ ","^7","hickory/utils.cljc","^8",12,"^9",6,"^:",12,"^;",18],"^J","~$hickory.utils/void-element","^7","hickory/utils.cljc","^;",18,"^9",1,"^8",12,"^:",12,"~:tag","~$cljs.core/ISet","^6","Elements that don't have a meaningful <tag></tag> form."],"~$unescapable-content",["^ ","^5",["^ ","^7","hickory/utils.cljc","^8",17,"^9",6,"^:",17,"^;",25],"^J","~$hickory.utils/unescapable-content","^7","hickory/utils.cljc","^;",25,"^9",1,"^8",17,"^:",17,"^25","^26","^6","Elements whose content should never have html-escape codes."],"~$html-escape",["^ ","~:protocol-inline",null,"^5",["^ ","^7","hickory/utils.cljc","^8",25,"^9",7,"^:",25,"^;",18,"~:arglists",["^[",["~$quote",["^[",[["~$s"]]]]]],"^J","~$hickory.utils/html-escape","^7","hickory/utils.cljc","^;",18,"~:method-params",["^[",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^9",1,"~:variadic?",false,"^8",25,"~:ret-tag","~$any","^:",25,"~:max-fixed-arity",1,"~:fn-var",true,"^2;",["^[",["^2<",["^[",[["~$s"]]]]]],"~$starts-with",["^ ","^2:",null,"^5",["^ ","^7","hickory/utils.cljc","^8",30,"^9",7,"^:",30,"^;",18,"^2;",["^[",["^2<",["^[",[["~$s","~$prefix"]]]]]],"^J","~$hickory.utils/starts-with","^7","hickory/utils.cljc","^;",18,"^2>",["^[",[["~$s","^2G"]]],"^2?",null,"^2@",["^[",[null,null]],"^9",1,"^2A",false,"^8",30,"^2B","~$js","^:",30,"^2D",2,"^2E",true,"^2;",["^[",["^2<",["^[",[["~$s","^2G"]]]]]],"~$lower-case-keyword",["^ ","^2:",null,"^5",["^ ","^7","hickory/utils.cljc","^8",35,"^9",7,"^:",35,"^;",25,"^2;",["^[",["^2<",["^[",[["~$s"]]]]],"^6","Converts its string argument into a lowercase keyword."],"^J","~$hickory.utils/lower-case-keyword","^7","hickory/utils.cljc","^;",25,"^2>",["^[",[["~$s"]]],"^2?",null,"^2@",["^[",[null,null]],"^9",1,"^2A",false,"^8",35,"^2B",["^I",["~$cljs.core/Keyword","~$clj-nil"]],"^:",35,"^2D",1,"^2E",true,"^2;",["^[",["^2<",["^[",[["~$s"]]]]],"^6","Converts its string argument into a lowercase keyword."],"~$render-doctype",["^ ","^2:",null,"^5",["^ ","^7","hickory/utils.cljc","^8",40,"^9",7,"^:",40,"^;",21,"^2;",["^[",["^2<",["^[",[["~$name","~$publicid","~$systemid"]]]]],"^6","Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings."],"^J","~$hickory.utils/render-doctype","^7","hickory/utils.cljc","^;",21,"^2>",["^[",[["^2O","^2P","^2Q"]]],"^2?",null,"^2@",["^[",[null,null]],"^9",1,"^2A",false,"^8",40,"^2B","^Q","^:",40,"^2D",3,"^2E",true,"^2;",["^[",["^2<",["^[",[["^2O","^2P","^2Q"]]]]],"^6","Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings."]],"^Y",["^ ","^T","^T"],"~:cljs.analyzer/constants",["^ ","^V",["^I",["~:hr","^5","~:script","~:wbr","~:command","^1:","~:param","~:style","~:link","~:col","~:area","~:br","~:input","~:base","~:embed","~:keygen","~:img","~:track"]],"~:order",["^2T","^5","^2V","^2W","^1:","^2X","^2Z","^2[","^30","^31","^32","^33","^34","^35","^36","^37","^2U","^2Y"]],"^12",["^ ","^W",["^I",[]]],"^13",["^ "],"^14",["^U","^T","^P","^R"]],"^M","^K","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1B",[["^3;","~:static-fns"],true,["^3;","~:elide-asserts"],false,["^3;","~:optimize-constants"],null,["^3;","^19"],null,["^3;","~:external-config"],null,["^3;","~:tooling-config"],null,["^3;","~:emit-constants"],null,["^3;","~:load-tests"],null,["^3;","~:infer-externs"],"~:auto",["^3;","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3;","~:fn-invoke-direct"],null,["^3;","~:source-map"],"/dev/null"]]]