["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/emptyFunction.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$emptyFunction=function(global,require,module,exports){function makeEmptyFunction(arg){return function(){return arg}}global=function(){};global.thatReturns=makeEmptyFunction;global.thatReturnsFalse=makeEmptyFunction(!1);global.thatReturnsTrue=makeEmptyFunction(!0);global.thatReturnsNull=makeEmptyFunction(null);global.thatReturnsThis=function(){return this};global.thatReturnsArgument=function(arg){return arg};module.exports=global}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$emptyFunction\"] = function(global,require,module,exports) {\n\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["thatReturnsArgument","thatReturnsFalse","thatReturnsNull","thatReturns","thatReturnsThis","thatReturnsTrue"]],"~:compiled-at",1560634480716,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$emptyFunction.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvGC,QAASA,kBAAiB,CAACC,GAAD,CAAM,CAC9B,MAAO,SAAS,EAAG,CACjB,MAAOA,IADU,CADW,CAW5BC,MAAAA,CAAgBA,QAAsB,EAAG,EAE7CA,OAAAC,YAAA,CAA4BH,iBAC5BE,OAAAE,iBAAA,CAAiCJ,iBAAA,CAAkB,CAAA,CAAlB,CACjCE,OAAAG,gBAAA,CAAgCL,iBAAA,CAAkB,CAAA,CAAlB,CAChCE,OAAAI,gBAAA,CAAgCN,iBAAA,CAAkB,IAAlB,CAChCE,OAAAK,gBAAA,CAAgCC,QAAS,EAAG,CAC1C,MAAO,KADmC,CAG5CN,OAAAO,oBAAA,CAAoCC,QAAS,CAACT,GAAD,CAAM,CACjD,MAAOA,IAD0C,CAInDH,OAAAC,QAAA,CAAiBG,MApCsF;\",\n\"sources\":[\"node_modules/fbjs/lib/emptyFunction.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$emptyFunction\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n */\\n\\nfunction makeEmptyFunction(arg) {\\n  return function () {\\n    return arg;\\n  };\\n}\\n\\n/**\\n * This function accepts and discards inputs; it has no side effects. This is\\n * primarily useful idiomatically for overridable function endpoints which\\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\\n */\\nvar emptyFunction = function emptyFunction() {};\\n\\nemptyFunction.thatReturns = makeEmptyFunction;\\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\\nemptyFunction.thatReturnsThis = function () {\\n  return this;\\n};\\nemptyFunction.thatReturnsArgument = function (arg) {\\n  return arg;\\n};\\n\\nmodule.exports = emptyFunction;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"makeEmptyFunction\",\"arg\",\"emptyFunction\",\"thatReturns\",\"thatReturnsFalse\",\"thatReturnsTrue\",\"thatReturnsNull\",\"thatReturnsThis\",\"emptyFunction.thatReturnsThis\",\"thatReturnsArgument\",\"emptyFunction.thatReturnsArgument\"]\n}\n"]