["^ ","~:foreign-libs",[],"~:externs",[],"~:resources",[["^ ","~:cache-key",[1547383501000],"~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Data structures that are used in various places of the library.","~:file","cats/data.cljc","~:line",26,"~:column",5,"~:end-line",26,"~:end-column",14],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cats.data","~:imports",null,"~:requires",["^ ","~$cats.protocols","^E","~$p","^E","~$cats.context","^F","~$ctx","^F","~$cats.util","^H","~$util","^H","~$cljs.core","^J","~$goog","^K"],"~:seen",["^@",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^J","^J"],"~:cljc",true,"~:flags",["^ ","^M",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^K","^J","^E","^F","^H"]],"~:ns","^B","~:output-name","cats.data.js","~:resource-id",["~:shadow.build.classpath/resource","cats/data.cljc"],"~:resource-name","cats/data.cljc","~:type","~:cljs","~:last-modified",1547383501000,"^D",["^@",["^F","^J","^K","^E","^H"]],"~:pom-info",["^ ","~:group-id","~$funcool","~:artifact-id","~$cats","~:version","2.0.0","^A","cats","~:description","Category Theory abstractions for Clojure","~:url","https://github.com/funcool/cats","~:id","~$funcool/cats","~:coordinate",["^19","2.0.0"]],"~:macro-requires",["^@",["^J"]],"^17",["~#url","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/data.cljc"],"~:provides",["^@",["^B"]],"~:from-jar",true,"^S",["^K","^J","^E","^F","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","The Identity Monad.","^9","cats/monad/identity.cljc","^:",26,"^;",5,"^<",26,"^=",24],"^>",null,"^?",["^@",["~$identity"]],"^A","~$cats.monad.identity","^C",null,"^D",["^ ","^E","^E","~$p","^E","^F","^F","^G","^F","^H","^H","^I","^H","^J","^J","^K","^K"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E","^F","^H"]],"^T","^1@","^U","cats.monad.identity.js","^V",["^W","cats/monad/identity.cljc"],"^X","cats/monad/identity.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/monad/identity.cljc"],"^1=",["^@",["^1@"]],"^1>",true,"^S",["^K","^J","^E","^F","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","A collection of utils that used around the library.","^9","cats/util.cljc","^:",26,"^;",5,"^<",26,"^=",14],"^>",null,"^?",["^@",[]],"^A","^H","^C",null,"^D",["^ ","^E","^E","^J","^J","^K","^K"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E"]],"^T","^H","^U","cats.util.js","^V",["^W","cats/util.cljc"],"^X","cats/util.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^J","^K","^E"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/util.cljc"],"^1=",["^@",["^H"]],"^1>",true,"^S",["^K","^J","^E"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","A promise monad that uses promesa library.","^9","cats/labs/promise.cljc","^:",1,"^;",5,"^<",1,"^=",22],"^>",null,"^?",["^@",[]],"^A","~$cats.labs.promise","^C",null,"^D",["^ ","~$mc","^F","~$p","~$promesa.core","~$mp","^E","^1C","^1C","^F","^F","^J","^J","^K","^K","~$promesa.impl.proto","^1E","^E","^E","~$pp","^1E","~$m","~$cats.core","^1G","^1G"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^1G","^F","^E","^1C","^1E"]],"^T","^1A","^U","cats.labs.promise.js","^V",["^W","cats/labs/promise.cljc"],"^X","cats/labs/promise.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^1C","^F","^J","^K","^1E","^E","^1G"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/labs/promise.cljc"],"^1=",["^@",["^1A"]],"^1>",true,"^S",["^K","^J","^1G","^F","^E","^1C","^1E"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^9","cats/labs/channel.cljc","^:",26,"^;",5,"^<",26,"^=",22],"^>",["^ ","~$go","~$cljs.core.async.macros","~$go-loop","^1I"],"^?",["^@",[]],"^A","~$cats.labs.channel","^C",null,"^D",["^ ","^G","^F","~$impl","~$cljs.core.async.impl.protocols","~$p","^E","~$a","~$cljs.core.async","^F","^F","^J","^J","^K","^K","^1N","^1N","^1M","^1M","^E","^E","~$m","^1G","^I","^H","^1G","^1G","^H","^H"],"^L",["^@",["^M","^O"]],"^N",null,"^O",["^ ","^1I","^1I","^J","^J"],"^P",true,"^Q",["^ ","^O",["^@",[]],"^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^1N","^1M","^F","^1G","^E","^H"]],"^T","^1K","^U","cats.labs.channel.js","^V",["^W","cats/labs/channel.cljc"],"^X","cats/labs/channel.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^1N","^1M","^E","^1G","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^1I","^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/labs/channel.cljc"],"^1=",["^@",["^1K"]],"^1>",true,"^S",["^K","^J","^1N","^1M","^F","^1G","^E","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","A cats context management.","^9","cats/context.cljc","^:",26,"^;",5,"^<",26,"^=",17],"^>",null,"^?",["^@",[]],"^A","^F","^C",null,"^D",["^ ","^E","^E","~$p","^E","^J","^J","^K","^K"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E"]],"^T","^F","^U","cats.context.js","^V",["^W","cats/context.cljc"],"^X","cats/context.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^J","^K","^E"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/context.cljc"],"^1=",["^@",["^F"]],"^1>",true,"^S",["^K","^J","^E"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","Clojure(Script) built-in types extensions.","^9","cats/builtin.cljc","^:",26,"^;",5,"^<",26,"^=",17],"^>",null,"^?",["^@",[]],"^A","~$cats.builtin","^C",null,"^D",["^ ","^G","^F","~$p","^E","^F","^F","^J","^J","^K","^K","^E","^E","~$maybe","~$cats.monad.maybe","~$clojure.set","^1R","~$m","^1G","^I","^H","^1G","^1G","^1Q","^1Q","^H","^H","~$s","^1R"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^1R","^1Q","^E","^F","^1G","^H"]],"^T","^1O","^U","cats.builtin.js","^V",["^W","cats/builtin.cljc"],"^X","cats/builtin.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^1R","^1G","^1Q","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/builtin.cljc"],"^1=",["^@",["^1O"]],"^1>",true,"^S",["^K","^J","^1R","^1Q","^E","^F","^1G","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","Category Theory abstractions for Clojure","^9","cats/core.cljc","^:",26,"^;",5,"^<",26,"^=",14],"^>",["^ ","~$mlet","^1G","~$alet","^1G"],"^?",["^@",["~$when","~$unless","~$filter","~$sequence"]],"^A","^1G","^C",null,"^D",["^ ","^E","^E","~$p","^E","^1R","^1R","^F","^F","^G","^F","^J","^J","^K","^K"],"^L",["^@",["^M","^O"]],"^N",null,"^O",["^ ","^1G","^1G","^F","^F","^G","^F","^J","^J"],"^P",true,"^Q",["^ ","^O",["^@",[]],"^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E","^1R","^F"]],"^T","^1G","^U","cats.core.js","^V",["^W","cats/core.cljc"],"^X","cats/core.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^1R"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^F","^J","^1G"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/core.cljc"],"^1=",["^@",["^1G"]],"^1>",true,"^S",["^K","^J","^E","^1R","^F"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","The Either monad implementation and helper functions\n  for working with either related types.\n\n  Also commonly known as Error monad.\n\n      (require '[cats.monad.either :as either])\n\n      (either/right 1)\n      ;; => #<Right [1]>\n\n      (either/left 1)\n      ;; => #<Left [1]>\n  ","^9","cats/monad/either.cljc","^:",26,"^;",5,"^<",26,"^=",22],"^>",null,"^?",["^@",[]],"^A","~$cats.monad.either","^C",null,"^D",["^ ","^E","^E","~$p","^E","^F","^F","^G","^F","^H","^H","^I","^H","^J","^J","^K","^K"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E","^F","^H"]],"^T","^1Y","^U","cats.monad.either.js","^V",["^W","cats/monad/either.cljc"],"^X","cats/monad/either.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/monad/either.cljc"],"^1=",["^@",["^1Y"]],"^1>",true,"^S",["^K","^J","^E","^F","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^9","cats/labs/test.cljc","^:",26,"^;",5,"^<",26,"^=",19],"^>",null,"^?",["^@",[]],"^A","~$cats.labs.test","^C",null,"^D",["^ ","^G","^F","~$p","^E","^F","^F","^J","^J","~$clojure.test.check.generators","^1[","^K","^K","~$gen","^1[","^E","^E","~$m","^1G","^1G","^1G","~$clojure.test.check.properties","^21","~$prop","^21"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^F","^F","^G","^F","^21","^21","^22","^21","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^F","^1G","^E","^1[","^21"]],"^T","^1Z","^U","cats.labs.test.js","^V",["^W","cats/labs/test.cljc"],"^X","cats/labs/test.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^1[","^K","^E","^1G","^21"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^F","^J","^21"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/labs/test.cljc"],"^1=",["^@",["^1Z"]],"^1>",true,"^S",["^K","^J","^F","^1G","^E","^1[","^21"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","The Maybe monad implementation and helpers functions\n  for working with maybe related types.\n\n      (require '[cats.monad.maybe :as maybe])\n\n      (maybe/just 1)\n      ;; => #<Just [1]>\n  ","^9","cats/monad/maybe.cljc","^:",26,"^;",5,"^<",26,"^=",21],"^>",null,"^?",["^@",[]],"^A","^1Q","^C",null,"^D",["^ ","^E","^E","~$p","^E","^F","^F","^G","^F","^H","^H","^I","^H","^J","^J","^K","^K"],"^L",["^@",["^M"]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E","^F","^H"]],"^T","^1Q","^U","cats.monad.maybe.js","^V",["^W","cats/monad/maybe.cljc"],"^X","cats/monad/maybe.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/monad/maybe.cljc"],"^1=",["^@",["^1Q"]],"^1>",true,"^S",["^K","^J","^E","^F","^H"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","The Exception monad.\n\n  Also known as Try monad, popularized by Scala.\n\n  It represents a computation that may either result\n  in an exception or return a successfully computed\n  value. Is very similar to Either monad, but is\n  semantically different.\n\n  It consists in two types: Success and Failure. The\n  Success type is a simple wrapper like Right of Either\n  monad. But the Failure type is slightly different\n  from Left, because it is forced to wrap an instance\n  of Throwable (or Error in cljs).\n\n  The most common use case of this monad is for wrap\n  third party libraries that uses standard Exception\n  based error handling. In normal circumstances you\n  should use Either instead.\n\n  The types defined for Exception monad (Success and\n  Failure) also implementes the clojure IDeref interface\n  which facilitates libraries developing using monadic\n  composition without forcing a user of that library\n  to use or understand monads.\n\n  That is because when you will dereference the\n  failure instance, it will reraise the containing\n  exception.","^9","cats/monad/exception.cljc","^:",26,"^;",5,"^<",26,"^=",25],"^>",["^ ","~$try-on","~$cats.monad.exception"],"^?",["^@",[]],"^A","^24","^C",null,"^D",["^ ","^E","^E","~$p","^E","^H","^H","^I","^H","^F","^F","^G","^F","^J","^J","^K","^K"],"^L",["^@",["^M","^O"]],"^N",null,"^O",["^ ","^F","^F","^G","^F","^24","^24","^J","^J"],"^P",true,"^Q",["^ ","^M",["^@",[]],"^O",["^@",[]]],"^R",["^ "],"^S",["^K","^J","^E","^H","^F"]],"^T","^24","^U","cats.monad.exception.js","^V",["^W","cats/monad/exception.cljc"],"^X","cats/monad/exception.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^F","^J","^K","^E","^H"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^24","^F","^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/monad/exception.cljc"],"^1=",["^@",["^24"]],"^1>",true,"^S",["^K","^J","^E","^H","^F"]],["^ ","^3",[1547383501000],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","A collection of protocols upon which the cats abstractions are built.\n\n  NOTE: Functions of this namespace are not intended to be used directly.\n  It is considered internal api.","^9","cats/protocols.cljc","^:",26,"^;",5,"^<",26,"^=",19],"^>",null,"^?",["^@",[]],"^A","^E","^C",null,"^D",["^ ","^J","^J","^K","^K"],"^L",["^@",[]],"^N",null,"^O",["^ ","^J","^J"],"^P",true,"^Q",["^ "],"^R",["^ "],"^S",["^K","^J"]],"^T","^E","^U","cats.protocols.js","^V",["^W","cats/protocols.cljc"],"^X","cats/protocols.cljc","^Y","^Z","^[",1547383501000,"^D",["^@",["^J","^K"]],"^10",["^ ","^11","^12","^13","^14","^15","2.0.0","^A","cats","^16","Category Theory abstractions for Clojure","^17","https://github.com/funcool/cats","^18","^19","^1:",["^19","2.0.0"]],"^1;",["^@",["^J"]],"^17",["^1<","jar:file:/Users/jude/.m2/repository/funcool/cats/2.0.0/cats-2.0.0.jar!/cats/protocols.cljc"],"^1=",["^@",["^E"]],"^1>",true,"^S",["^K","^J"]]],"~:data-readers",null,"~:shadow.build.classpath/CACHE-TIMESTAMP",1560546091000]