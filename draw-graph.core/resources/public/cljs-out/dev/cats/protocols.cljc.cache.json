["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cats.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$Monad",["^ ","~:meta",["^ ","~:protocol-symbol",true,"~:file","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","~:end-column",19,"~:column",14,"~:line",90,"~:protocol-info",["^ ","~:methods",["^ ","~$-mreturn",[["~$m","~$v"]],"~$-mbind",[["~$m","~$mv","~$f"]]]],"~:end-line",90,"~:doc","The Monad abstraction.","~:jsdoc",["~#list",["@interface"]]],"^>",true,"^5","~$cats.protocols/Monad","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",19,"^A",1,"^B",90,"^C",["^ ","^D",["^ ","^E",[["~$m","~$v"]],"^F",[["~$m","^G","~$f"]]]],"~:info",null,"^H",90,"~:tag","~$any","~:impls",["^4",[]],"^I","The Monad abstraction.","^J",["^K",["@interface"]]],"~$Functor",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",14,"^B",61,"^C",["^ ","^D",["^ ","~$-fmap",[["~$ftor","~$f","~$fv"]]]],"^H",61,"^I","A data type that can be mapped over without altering its context.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Functor","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",1,"^B",61,"^C",["^ ","^D",["^ ","^R",[["^S","~$f","^T"]]]],"^M",null,"^H",61,"^N","^O","^P",["^4",[]],"^I","A data type that can be mapped over without altering its context.","^J",["^K",["@interface"]]],"~$-mempty",["^ ","~:protocol-inline",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",54,"^A",4,"^H",54,"^@",11,"~:protocol","~$cats.protocols/Monoid","^I","The identity element for the given monoid.","~:arglists",["^K",["~$quote",["^K",[["~$s"]]]]]],"^X","^Y","^5","~$cats.protocols/-mempty","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",11,"~:method-params",["^K",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^A",1,"~:variadic?",false,"^B",52,"~:ret-tag","^O","^H",54,"~:max-fixed-arity",1,"~:fn-var",true,"^Z",["^K",["^[",["^K",[["~$s"]]]]],"^I","The identity element for the given monoid."],"~$-fapply",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",71,"^A",4,"^H",71,"^@",11,"^X","~$cats.protocols/Applicative","^I","Applies the function(s) inside af's context to the value(s)\n     inside av's context while preserving the context.","^Z",["^K",["^[",["^K",[["~$app","~$af","~$av"]]]]]],"^X","^19","^5","~$cats.protocols/-fapply","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",11,"^11",["^K",[["^1:","^1;","^1<"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",69,"^15","^O","^H",71,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["^1:","^1;","^1<"]]]]],"^I","Applies the function(s) inside af's context to the value(s)\n     inside av's context while preserving the context."],"~$Applicative",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",25,"^A",14,"^B",69,"^C",["^ ","^D",["^ ","^18",[["^1:","^1;","^1<"]],"~$-pure",[["^1:","~$v"]]]],"^H",69,"^I","The Applicative abstraction.","^J",["^K",["@interface"]]],"^>",true,"^5","^19","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",25,"^A",1,"^B",69,"^C",["^ ","^D",["^ ","^18",[["^1:","^1;","^1<"]],"^1?",[["^1:","~$v"]]]],"^M",null,"^H",69,"^N","^O","^P",["^4",[]],"^I","The Applicative abstraction.","^J",["^K",["@interface"]]],"~$-foldl",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",80,"^A",4,"^H",80,"^@",10,"^X","~$cats.protocols/Foldable","^I","Left-associative fold of a structure.","^Z",["^K",["^[",["^K",[["~$fctx","~$f","~$z","~$xs"]]]]]],"^X","^1A","^5","~$cats.protocols/-foldl","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["^1B","~$f","~$z","^1C"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",78,"^15","^O","^H",80,"^16",4,"^17",true,"^Z",["^K",["^[",["^K",[["^1B","~$f","~$z","^1C"]]]]],"^I","Left-associative fold of a structure."],"~$Bifunctor",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",14,"^B",65,"^C",["^ ","^D",["^ ","~$-bimap",[["~$btor","~$f","~$g","~$bv"]]]],"^H",65,"^I","A 'Functor' of two arguments.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Bifunctor","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",1,"^B",65,"^C",["^ ","^D",["^ ","^1F",[["^1G","~$f","~$g","^1H"]]]],"^M",null,"^H",65,"^N","^O","^P",["^4",[]],"^I","A 'Functor' of two arguments.","^J",["^K",["@interface"]]],"^F",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",93,"^A",4,"^H",93,"^@",10,"^X","^L","^I",null,"^Z",["^K",["^[",["^K",[["~$m","^G","~$f"]]]]]],"^X","^L","^5","~$cats.protocols/-mbind","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["~$m","^G","~$f"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",90,"^15","^O","^H",93,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["~$m","^G","~$f"]]]]],"^I",null],"~$Printable",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",14,"^B",43,"^C",["^ ","^D",["^ ","~$-repr",[["~$_"]]]],"^H",43,"^I","An abstraction to make a type printable in a platform\n  independent manner.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Printable","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",1,"^B",43,"^C",["^ ","^D",["^ ","^1L",[["~$_"]]]],"^M",null,"^H",43,"^N","^O","^P",["^4",[]],"^I","An abstraction to make a type printable in a platform\n  independent manner.","^J",["^K",["@interface"]]],"~$Contextual",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",24,"^A",14,"^B",35,"^C",["^ ","^D",["^ ","~$-get-context",[["~$_"]]]],"^H",35,"^I","Abstraction that establishes a concrete type as a member of a context.\n\n  A great example is the Maybe monad type Just. It implements\n  this abstraction to establish that Just is part of\n  the Maybe monad.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Contextual","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",24,"^A",1,"^B",35,"^C",["^ ","^D",["^ ","^1O",[["~$_"]]]],"^M",null,"^H",35,"^N","^O","^P",["^4",[]],"^I","Abstraction that establishes a concrete type as a member of a context.\n\n  A great example is the Maybe monad type Just. It implements\n  this abstraction to establish that Just is part of\n  the Maybe monad.","^J",["^K",["@interface"]]],"~$-traverse",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",86,"^A",4,"^H",86,"^@",13,"^X","~$cats.protocols/Traversable","^I","Map each element to an Applicative, evaluate the applicatives from left\n     to right and collect the results.","^Z",["^K",["^[",["^K",[["~$tctx","~$f","~$tv"]]]]]],"^X","^1R","^5","~$cats.protocols/-traverse","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",13,"^11",["^K",[["^1S","~$f","^1T"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",83,"^15","^O","^H",86,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["^1S","~$f","^1T"]]]]],"^I","Map each element to an Applicative, evaluate the applicatives from left\n     to right and collect the results."],"~$-foldr",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",81,"^A",4,"^H",81,"^@",10,"^X","^1A","^I","Right-associative fold of a structure.","^Z",["^K",["^[",["^K",[["^1B","~$f","~$z","^1C"]]]]]],"^X","^1A","^5","~$cats.protocols/-foldr","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["^1B","~$f","~$z","^1C"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",78,"^15","^O","^H",81,"^16",4,"^17",true,"^Z",["^K",["^[",["^K",[["^1B","~$f","~$z","^1C"]]]]],"^I","Right-associative fold of a structure."],"~$-extract",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",59,"^A",4,"^H",59,"^@",12,"^X","~$cats.protocols/Extract","^I","Extract the value from monad context.","^Z",["^K",["^[",["^K",[["^G"]]]]]],"^X","^1Y","^5","~$cats.protocols/-extract","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",12,"^11",["^K",[["^G"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",56,"^15","^O","^H",59,"^16",1,"^17",true,"^Z",["^K",["^[",["^K",[["^G"]]]]],"^I","Extract the value from monad context."],"~$MonadPlus",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",14,"^B",100,"^C",["^ ","^D",["^ ","~$-mplus",[["~$m","^G","~$mv'"]]]],"^H",100,"^I","A complement abstraction for Monad that\n  supports the notion of addition.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/MonadPlus","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",1,"^B",100,"^C",["^ ","^D",["^ ","^20",[["~$m","^G","^21"]]]],"^M",null,"^H",100,"^N","^O","^P",["^4",[]],"^I","A complement abstraction for Monad that\n  supports the notion of addition.","^J",["^K",["@interface"]]],"^1L",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",46,"^A",4,"^H",46,"^@",9,"^X","^1M","^I","Get the repl ready representation of the object.","^Z",["^K",["^[",["^K",[["~$_"]]]]]],"^X","^1M","^5","~$cats.protocols/-repr","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",9,"^11",["^K",[["~$_"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",43,"^15","^O","^H",46,"^16",1,"^17",true,"^Z",["^K",["^[",["^K",[["~$_"]]]]],"^I","Get the repl ready representation of the object."],"~$-mzero",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",98,"^A",4,"^H",98,"^@",10,"^X","~$cats.protocols/MonadZero","^I","The identity element for the given monadzero.","^Z",["^K",["^[",["^K",[["~$m"]]]]]],"^X","^25","^5","~$cats.protocols/-mzero","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["~$m"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",95,"^15","^O","^H",98,"^16",1,"^17",true,"^Z",["^K",["^[",["^K",[["~$m"]]]]],"^I","The identity element for the given monadzero."],"^E",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",92,"^A",4,"^H",92,"^@",12,"^X","^L","^I",null,"^Z",["^K",["^[",["^K",[["~$m","~$v"]]]]]],"^X","^L","^5","~$cats.protocols/-mreturn","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",12,"^11",["^K",[["~$m","~$v"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",90,"^15","^O","^H",92,"^16",2,"^17",true,"^Z",["^K",["^[",["^K",[["~$m","~$v"]]]]],"^I",null],"^1?",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",74,"^A",4,"^H",74,"^@",9,"^X","^19","^I","Takes any context or monadic value `app` and any value `v`, and puts\n     the value `v` in the most minimal context (normally `mempty`) of same type of `app`","^Z",["^K",["^[",["^K",[["^1:","~$v"]]]]]],"^X","^19","^5","~$cats.protocols/-pure","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",9,"^11",["^K",[["^1:","~$v"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",69,"^15","^O","^H",74,"^16",2,"^17",true,"^Z",["^K",["^[",["^K",[["^1:","~$v"]]]]],"^I","Takes any context or monadic value `app` and any value `v`, and puts\n     the value `v` in the most minimal context (normally `mempty`) of same type of `app`"],"^R",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",63,"^A",4,"^H",63,"^@",9,"^X","^U","^I","Applies function f to the value(s) inside the context of the functor fv.","^Z",["^K",["^[",["^K",[["^S","~$f","^T"]]]]]],"^X","^U","^5","~$cats.protocols/-fmap","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",9,"^11",["^K",[["^S","~$f","^T"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",61,"^15","^O","^H",63,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["^S","~$f","^T"]]]]],"^I","Applies function f to the value(s) inside the context of the functor fv."],"~$MonadZero",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",14,"^B",95,"^C",["^ ","^D",["^ ","^24",[["~$m"]]]],"^H",95,"^I","A complement abstraction for monad that\n  supports the notion of an identity element.","^J",["^K",["@interface"]]],"^>",true,"^5","^25","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",1,"^B",95,"^C",["^ ","^D",["^ ","^24",[["~$m"]]]],"^M",null,"^H",95,"^N","^O","^P",["^4",[]],"^I","A complement abstraction for monad that\n  supports the notion of an identity element.","^J",["^K",["@interface"]]],"~$Semigroup",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",14,"^B",48,"^C",["^ ","^D",["^ ","~$-mappend",[["~$s","~$sv","~$sv'"]]]],"^H",48,"^I","A structure with an associative binary operation.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Semigroup","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",23,"^A",1,"^B",48,"^C",["^ ","^D",["^ ","^2<",[["~$s","^2=","^2>"]]]],"^M",null,"^H",48,"^N","^O","^P",["^4",[]],"^I","A structure with an associative binary operation.","^J",["^K",["@interface"]]],"~$Traversable",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",25,"^A",14,"^B",83,"^C",["^ ","^D",["^ ","^1Q",[["^1S","~$f","^1T"]]]],"^H",83,"^I","Abstraction of data structures that can be traversed from left to right\n  performing an action on every element.","^J",["^K",["@interface"]]],"^>",true,"^5","^1R","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",25,"^A",1,"^B",83,"^C",["^ ","^D",["^ ","^1Q",[["^1S","~$f","^1T"]]]],"^M",null,"^H",83,"^N","^O","^P",["^4",[]],"^I","Abstraction of data structures that can be traversed from left to right\n  performing an action on every element.","^J",["^K",["@interface"]]],"~$Monoid",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",20,"^A",14,"^B",52,"^C",["^ ","^D",["^ ","^V",[["~$s"]]]],"^H",52,"^I","A Semigroup which has an identity element with respect to an associative binary operation.","^J",["^K",["@interface"]]],"^>",true,"^5","^Y","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",20,"^A",1,"^B",52,"^C",["^ ","^D",["^ ","^V",[["~$s"]]]],"^M",null,"^H",52,"^N","^O","^P",["^4",[]],"^I","A Semigroup which has an identity element with respect to an associative binary operation.","^J",["^K",["@interface"]]],"~$Context",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",14,"^B",32,"^C",["^ ","^D",["^ "]],"^H",32,"^I","A marker protocol for identifying the valid context types.","^J",["^K",["@interface"]]],"^>",true,"^5","~$cats.protocols/Context","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",1,"^B",32,"^C",["^ ","^D",["^ "]],"^M",null,"^H",32,"^N","^O","^P",["^4",[]],"^I","A marker protocol for identifying the valid context types.","^J",["^K",["@interface"]]],"~$Extract",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",14,"^B",56,"^C",["^ ","^D",["^ ","^1X",[["^G"]]]],"^H",56,"^I","A type class to extract the\n  value from a monad context.","^J",["^K",["@interface"]]],"^>",true,"^5","^1Y","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",21,"^A",1,"^B",56,"^C",["^ ","^D",["^ ","^1X",[["^G"]]]],"^M",null,"^H",56,"^N","^O","^P",["^4",[]],"^I","A type class to extract the\n  value from a monad context.","^J",["^K",["@interface"]]],"~$Foldable",["^ ","^=",["^ ","^>",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^@",22,"^A",14,"^B",78,"^C",["^ ","^D",["^ ","^1@",[["^1B","~$f","~$z","^1C"]],"^1V",[["^1B","~$f","~$z","^1C"]]]],"^H",78,"^I","Abstraction of data structures that can be folded to a summary value.","^J",["^K",["@interface"]]],"^>",true,"^5","^1A","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",22,"^A",1,"^B",78,"^C",["^ ","^D",["^ ","^1@",[["^1B","~$f","~$z","^1C"]],"^1V",[["^1B","~$f","~$z","^1C"]]]],"^M",null,"^H",78,"^N","^O","^P",["^4",[]],"^I","Abstraction of data structures that can be folded to a summary value.","^J",["^K",["@interface"]]],"^2<",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",50,"^A",4,"^H",50,"^@",12,"^X","^2?","^I","An associative addition operation.","^Z",["^K",["^[",["^K",[["~$s","^2=","^2>"]]]]]],"^X","^2?","^5","~$cats.protocols/-mappend","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",12,"^11",["^K",[["~$s","^2=","^2>"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",48,"^15","^O","^H",50,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["~$s","^2=","^2>"]]]]],"^I","An associative addition operation."],"^1F",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",67,"^A",4,"^H",67,"^@",10,"^X","^1I","^I","Map over both arguments at the same time.","^Z",["^K",["^[",["^K",[["^1G","~$f","~$g","^1H"]]]]]],"^X","^1I","^5","~$cats.protocols/-bimap","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["^1G","~$f","~$g","^1H"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",65,"^15","^O","^H",67,"^16",4,"^17",true,"^Z",["^K",["^[",["^K",[["^1G","~$f","~$g","^1H"]]]]],"^I","Map over both arguments at the same time."],"^20",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",103,"^A",4,"^H",103,"^@",10,"^X","^22","^I","An associative addition operation.","^Z",["^K",["^[",["^K",[["~$m","^G","^21"]]]]]],"^X","^22","^5","~$cats.protocols/-mplus","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",10,"^11",["^K",[["~$m","^G","^21"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",100,"^15","^O","^H",103,"^16",3,"^17",true,"^Z",["^K",["^[",["^K",[["~$m","^G","^21"]]]]],"^I","An associative addition operation."],"^1O",["^ ","^W",null,"^=",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/protocols.cljc","^B",41,"^A",4,"^H",41,"^@",16,"^X","^1P","^I","Get the context associated with the type.","^Z",["^K",["^[",["^K",[["~$_"]]]]]],"^X","^1P","^5","~$cats.protocols/-get-context","^?","resources/public/cljs-out/dev/cats/protocols.cljc","^@",16,"^11",["^K",[["~$_"]]],"^12",null,"^13",["^K",[null,null]],"^A",1,"^14",false,"^B",35,"^15","^O","^H",41,"^16",1,"^17",true,"^Z",["^K",["^[",["^K",[["~$_"]]]]],"^I","Get the context associated with the type."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^I","A collection of protocols upon which the cats abstractions are built.\n\n  NOTE: Functions of this namespace are not intended to be used directly.\n  It is considered internal api."]