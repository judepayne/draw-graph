["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cats.context","~:imports",null,"~:requires",["^ ","~$p","~$cats.protocols","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$*context*",["^ ","~:meta",["^ ","~:file","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/context.cljc","~:line",30,"~:column",16,"~:end-line",30,"~:end-column",25,"~:dynamic",true],"^7","~$cats.context/*context*","^A","resources/public/cljs-out/dev/cats/context.cljc","^E",25,"^C",1,"^F",true,"^B",30,"^D",30,"~:tag","~$clj-nil"],"~$throw-illegal-argument",["^ ","~:no-doc",true,"~:protocol-inline",null,"^@",["^ ","^A","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/context.cljc","^B",32,"^C",7,"^D",32,"^E",29,"~:arglists",["~#list",["~$quote",["^N",[["~$text"]]]]],"^K",true,"~:internal",true],"^7","~$cats.context/throw-illegal-argument","^A","resources/public/cljs-out/dev/cats/context.cljc","^E",29,"~:method-params",["^N",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^C",1,"^Q",true,"~:variadic?",false,"^B",32,"~:ret-tag","~$ignore","^D",32,"~:max-fixed-arity",1,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P"]]]]]],"~$context?",["^ ","^L",null,"^@",["^ ","^A","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/context.cljc","^B",38,"^C",7,"^D",38,"^E",15,"^M",["^N",["^O",["^N",[["~$v"]]]]],"~:doc","Returnt `true` if the provided value satisfies\n  the Context protocol."],"^7","~$cats.context/context?","^A","resources/public/cljs-out/dev/cats/context.cljc","^E",15,"^S",["^N",[["~$v"]]],"^T",null,"^U",["^N",[null,null]],"^C",1,"^V",false,"^B",38,"^W","~$boolean","^D",38,"^Y",1,"^Z",true,"^M",["^N",["^O",["^N",[["~$v"]]]]],"^10","Returnt `true` if the provided value satisfies\n  the Context protocol."],"~$infer",["^ ","^K",true,"^L",null,"^@",["^ ","^K",true,"^A","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/context.cljc","^E",12,"~:top-fn",["^ ","^V",false,"~:fixed-arity",1,"^Y",1,"^S",["^N",[[],["~$v"]]],"^M",["^N",[[],["~$v"]]],"^U",["^N",[null,null]]],"^C",7,"^B",62,"^D",62,"^M",["^N",["^O",["^N",[[],["~$v"]]]]],"^10","Given an optional value infer its context. If context is already set, it\n  is returned as is without any inference operation."],"^7","~$cats.context/infer","^A","resources/public/cljs-out/dev/cats/context.cljc","^E",12,"^14",["^ ","^V",false,"^15",1,"^Y",1,"^S",["^N",[[],["~$v"]]],"^M",["^N",[[],["~$v"]]],"^U",["^N",[null,null]]],"^S",["^N",[[],["~$v"]]],"^T",null,"^15",1,"^U",["^N",[null,null]],"^C",1,"^V",false,"~:methods",[["^ ","^15",0,"^V",false,"^H","^I"],["^ ","^15",1,"^V",false,"^H",["^6",["~$any","^I"]]]],"^B",62,"^D",62,"^Y",1,"^Z",true,"^M",["^N",[[],["~$v"]]],"^10","Given an optional value infer its context. If context is already set, it\n  is returned as is without any inference operation."],"~$get-current",["^ ","^L",null,"^@",["^ ","^A","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/cats/context.cljc","^E",18,"^14",["^ ","^V",true,"^15",0,"^Y",0,"^S",[["^N",["~$args"]]],"^M",["^N",[["~$&","^1:"]]],"^U",["^N",[null]]],"^C",7,"^B",83,"~:deprecated",true,"^D",83,"^M",["^N",["^O",["^N",[["~$&","^1:"]]]]],"^10","Deprecated alias to `infer`."],"^7","~$cats.context/get-current","^A","resources/public/cljs-out/dev/cats/context.cljc","^E",18,"^14",["^ ","^V",true,"^15",0,"^Y",0,"^S",[["^N",["^1:"]]],"^M",["^N",[["~$&","^1:"]]],"^U",["^N",[null]]],"^S",[["^N",["^1:"]]],"^T",null,"^15",0,"^U",["^N",[null]],"^C",1,"^V",true,"^17",[["^ ","^15",0,"^V",true,"^H","^18"]],"^B",83,"^1;",true,"^W","^18","^D",83,"^Y",0,"^Z",true,"^M",["^N",[["~$&","^1:"]]],"^10","Deprecated alias to `infer`."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:else"]],"~:order",["^1A"]],"^10","A cats context management."]