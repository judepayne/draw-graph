["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$lib-draw-graph.anneal","~:imports",null,"~:requires",["^ ","~$lib-draw-graph.geometry","^;","~$util","~$lib-draw-graph.util","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$overlaps?","^;","~$bigger?","^;","~$inside?","^;","~$area","^;"],"~:defs",["^ ","~$annealing",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","~:line",18,"~:column",7,"~:end-line",18,"~:end-column",16,"~:arglists",["~#list",["~$quote",["^N",[["~$initial","~$max-iter","~$min-cost","~$constraints","~$neighbor-fn","~$cost-fn","~$p-fn","~$temp-fn","~$&",["^ ","~:keys",["~$dims","~$terminate-early?","~$x-retard","~$y-retard","~$max-move"],"~:or",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","~$max-move-default"]]]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",8,"~:max-fixed-arity",8,"~:method-params",[["^N",["^P","^Q","^R","^S","^T","^U","^V","^W",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]],"^M",["^N",[["^P","^Q","^R","^S","^T","^U","^V","^W","~$&",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]],"~:arglists-meta",["^N",[null]]]],"^7","~$lib-draw-graph.anneal/annealing","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",16,"^14",["^ ","^15",true,"^16",8,"^17",8,"^18",[["^N",["^P","^Q","^R","^S","^T","^U","^V","^W",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]],"^M",["^N",[["^P","^Q","^R","^S","^T","^U","^V","^W","~$&",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]],"^19",["^N",[null]]],"^18",[["^N",["^P","^Q","^R","^S","^T","^U","^V","^W",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]],"~:protocol-impl",null,"^16",8,"^19",["^N",[null]],"^J",1,"^15",true,"~:methods",[["^ ","^16",8,"^15",true]],"^I",18,"~:ret-tag","~$any","^K",18,"^17",8,"~:fn-var",true,"^M",["^N",[["^P","^Q","^R","^S","^T","^U","^V","^W","~$&",["^ ","^X",["^Y","^Z","^[","^10","^11"],"^12",["^ ","^Y",["~:x","~:y","~:w","~:h"],"^Z",false,"^[",null,"^10",null,"^11","^13"]]]]]],"^V",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",159,"^J",7,"^K",159,"^L",11,"^M",["^N",["^O",["^N",[["~$c0","~$c1","~$t"]]]]],"~:doc","the probability of a move function, using Boltzmann"],"^7","~$lib-draw-graph.anneal/p-fn","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",11,"^18",["^N",[["^1@","^1A","~$t"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",159,"^1=",["^6",["^1>","~$number"]],"^K",159,"^17",3,"^1?",true,"^M",["^N",["^O",["^N",[["^1@","^1A","~$t"]]]]],"^1B","the probability of a move function, using Boltzmann"],"^13",["^ ","^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",13,"^J",14,"^K",13,"^L",30,"~:const",true],"^7","~$lib-draw-graph.anneal/max-move-default","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",30,"~:const-expr",["^ ","~:op","^1E","~:val",14,"~:env",["^ ","~:context","~:expr"],"~:form",14,"~:tag","^1D"],"^J",1,"^1E",true,"^I",13,"^K",13,"^1N","^1D"],"~$vary-rect",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",71,"^J",8,"^K",71,"^L",17,"~:private",true,"^M",["^N",["^O",["^N",[["~$rect","^Y","^[","^10","^11"]]]]],"^1B","When a rectangle/ polygon is defined with a point, width and height\n  (as opposed to two points), when varying the x or y of the point, it\n  is necessary to adjust the width or height as well to be consistent\n  with a rectangle/ polygon specified as two x,y points."],"^1P",true,"^7","~$lib-draw-graph.anneal/vary-rect","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",17,"^18",["^N",[["^1Q","^Y","^[","^10","^11"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",71,"^K",71,"^17",5,"^1?",true,"^M",["^N",["^O",["^N",[["^1Q","^Y","^[","^10","^11"]]]]],"^1B","When a rectangle/ polygon is defined with a point, width and height\n  (as opposed to two points), when varying the x or y of the point, it\n  is necessary to adjust the width or height as well to be consistent\n  with a rectangle/ polygon specified as two x,y points."],"^U",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",134,"^J",7,"^K",134,"^L",14,"^M",["^N",["^O",["^N",[["^S","~$state"],["^S","^1S","~$next-state","~$k"]]]]],"^1B","Calculates cost, which is total bounded area minus sum of current areas.\n  For the initial call to calculate the system's cost, requires only constraints and state.\n  Subsequent calls require the state, next-state and k, the key of the entry that has\n  changed between them.","^14",["^ ","^15",false,"^16",4,"^17",4,"^18",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^M",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^19",["^N",[null,null]]]],"^7","~$lib-draw-graph.anneal/cost-fn","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",14,"^14",["^ ","^15",false,"^16",4,"^17",4,"^18",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^M",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^19",["^N",[null,null]]],"^18",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^1;",null,"^16",4,"^19",["^N",[null,null]],"^J",1,"^15",false,"^1<",[["^ ","^16",2,"^15",false,"^1N","^1D"],["^ ","^16",4,"^15",false,"^1N","^1D"]],"^I",134,"^K",134,"^17",4,"^1?",true,"^M",["^N",[["^S","^1S"],["^S","^1S","^1T","~$k"]]],"^1B","Calculates cost, which is total bounded area minus sum of current areas.\n  For the initial call to calculate the system's cost, requires only constraints and state.\n  Subsequent calls require the state, next-state and k, the key of the entry that has\n  changed between them."],"^W",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",153,"^J",7,"^K",153,"^L",14,"^M",["^N",["^O",["^N",[["~$r"]]]]],"^1B","the temperature. r should be between 0 and 1"],"^7","~$lib-draw-graph.anneal/temp-fn","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",14,"^18",["^N",[["~$r"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",153,"^1=","^1D","^K",153,"^17",1,"^1?",true,"^M",["^N",["^O",["^N",[["~$r"]]]]],"^1B","the temperature. r should be between 0 and 1"],"~$random-move",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",59,"^J",7,"^K",59,"^L",18,"^M",["^N",["^O",["^N",[["^11"]]]]]],"^7","~$lib-draw-graph.anneal/random-move","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",18,"^18",["^N",[["^11"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",59,"^1=","^1D","^K",59,"^17",1,"^1?",true,"^M",["^N",["^O",["^N",[["^11"]]]]]],"^T",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",104,"^J",7,"^K",104,"^L",18,"^M",["^N",["^O",["^N",[["^1S","^Y","^[","^10","^11"]]]]],"^1B","Varies a random item from state and returns the new state\n  after checking that the new state passes constraints."],"^7","~$lib-draw-graph.anneal/neighbor-fn","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",18,"^18",["^N",[["^1S","^Y","^[","^10","^11"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",104,"^1=","~$cljs.core/IVector","^K",104,"^17",5,"^1?",true,"^M",["^N",["^O",["^N",[["^1S","^Y","^[","^10","^11"]]]]],"^1B","Varies a random item from state and returns the new state\n  after checking that the new state passes constraints."],"~$PEN",["^ ","^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",14,"^J",14,"^K",14,"^L",17,"^1E",true],"^7","~$lib-draw-graph.anneal/PEN","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",17,"^1G",["^ ","^1H","^1E","^1I",1000000,"^1J",["^ ","^1K","^1L"],"^1M",1000000,"^1N","^1D"],"^J",1,"^1E",true,"^I",14,"^K",14,"^1N","^1D"],"~$passes-constraints?",["^ ","^F",null,"^G",["^ ","^H","/Users/jude/Dropbox/Projects/aws/draw-graph/draw-graph.core/resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^I",113,"^J",8,"^K",113,"^L",27,"^1P",true,"^M",["^N",["^O",["^N",[["^S","^1S","^1T","~$varied"]]]]],"^1B","Checks that the new (proposed) state item satisfies constraints."],"^1P",true,"^7","~$lib-draw-graph.anneal/passes-constraints?","^H","resources/public/cljs-out/dev/lib_draw_graph/anneal.cljc","^L",27,"^18",["^N",[["^S","^1S","^1T","^22"]]],"^1;",null,"^19",["^N",[null,null]],"^J",1,"^15",false,"^I",113,"^1=",["^6",[null,"^1>"]],"^K",113,"^17",4,"^1?",true,"^M",["^N",["^O",["^N",[["^S","^1S","^1T","^22"]]]]],"^1B","Checks that the new (proposed) state item satisfies constraints."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:y","~:max-move","~:y-retard","~:w","~:terminate-early?","~:boundary","~:h","~:dims","~:x","~:x-retard","~:collision"]],"~:order",["^2<","~:x","~:y","~:w","~:h","^2:","^2=","^29","^28","^2>","^2;"]],"^1B","Simulated annealing for cluster layout."]