{"version":3,"sources":["lib_draw_graph/util.cljc"],"mappings":";;AAOA;;;AAAA,AAAMA,AAEHC;AAFH,AAIW,AAAAC,AAAWD;;AAGtB,AAAA;;;AAAA,AAAAE,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAEDI;AAFL,AAGE,AAAI,AAACC,AAAOC,AAAKF;AACf,AAACG,AAAMC,AAAWR,AAAWI;;AAC7B,AAACK,AAAKL;;;;AALV,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAQA,AAAA;;;AAAA,AAAAP,AAAMgB;AAAN,AAAA,AAAAf,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAe,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAZ;;;AAAA,AAAA,AAAA,AAAA,AAAMY,AAEFQ,AAAEC,AAAGC,AAAIC;AAFb,AAGK,AAAMC,AAAM,AAAKC,AAAGH,AAAEC;AAAV,AACE,AAACG,AACA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAWI;AAAX,AACE,AAACC,AAAMH,AAAG,AAACrB,AAAMa,AAAES,AAAER,AAAMS;AAF9B,AAICP;;AACTS,AAAG;AAAQd,AAAEC,AAAGC,AAAEC;AAAf,AACE,AAAAY,AAAed;AAAfe,AAAA,AAAA/B,AAAA8B;AAAAE,AAAA,AAAAtB,AAAAqB;AAAAA,AAAA,AAAApB,AAAAoB;AAAAC,AAAON;AAAPK,AAAWf;AAAX,AACE,AAAIA;AACF,AAACY,AAAMb,AAAEW,AAAE,AAACG,AAAG,AAACI,AAAIlB,AAAEW,AAAGV,AAAGC,AAAEC;;AAC9B,AAACU,AAAMb,AAAEW,AAAE,AAACP,AAAM,AAACc,AAAIlB,AAAEW,AAAGT,AAAEC;;;;AAV7C,AAWE,AAACW,AAAGd,AAAEC,AAAGC,AAAEC;;;AAdlB,AAAA,AAAA,AAAMX;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAM,AAAA;AAAA,AAAA,AAAAA,AAAAL,AAAAG,AAAAC,AAAAL;;;AAAA","names":["lib-draw-graph.util/err","error-string","js/Error","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","lib-draw-graph.util/deep-merge","seq34185","self__4718__auto__","cljs.core/seq","maps","cljs.core/every?","cljs.core/map?","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core/merge-with","cljs.core/last","lib-draw-graph.util/update-keys-below","seq34211","G__34212","cljs.core/first","cljs.core/next","G__34213","G__34214","self__4717__auto__","m","ks","f","args","alter","m1","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__34233","vec__34234","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","m0","k","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","up","vec__34243","seq__34244","first__34245","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns ^{:doc \"Common utilities.\"\n      :author \"Jude Payne\"}\n  lib-draw-graph.util\n  (:require\n        #?(:clj [clojure.data.json        :as json])))\n\n\n(defn err\n  \"Creates an exception object with error-string.\"\n  [error-string]\n  #?(:clj (Exception. ^String error-string)\n     :cljs (js/Error. error-string)))\n\n\n(defn deep-merge\n  \"Like merge, but merges maps recursively.\"\n  [& maps]\n  (if (every? map? maps)\n    (apply merge-with deep-merge maps)\n    (last maps)))\n\n\n(defn update-keys-below\n  \"Updates the keys immediately below the level specified in ks.\"\n  ([m ks f & args]\n     (let [alter (fn [m1 f args]\n                   (reduce\n                    (fn [m0 [k v]]\n                      (assoc m0 (apply f k args) v))\n                    {}\n                    m1))\n           up (fn up [m ks f args]\n                (let [[k & ks] ks]\n                  (if ks\n                    (assoc m k (up (get m k) ks f args))\n                    (assoc m k (alter (get m k) f args)))))]\n       (up m ks f args))))\n"]}