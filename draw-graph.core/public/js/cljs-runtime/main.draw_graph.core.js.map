{"version":3,"sources":["main/draw_graph/core.cljs"],"mappings":";;;;;;;;;AAcA,AAAA,AAEA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAG4B,AAAA,AAACC;AAH7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAIyB,AAAA,AAACA;AAJ1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAKyB,AAAA,AAACA;AAL1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMQC;;AAOR,AAAKC,AAAc,AAACC,AAAKC;AAEzB,AAAA,AAAMH;AAAN,AAAA,AAAA,AAAAI,AACIH;;AAKJ,AAAAI,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AACE,AAACO,AAAOd,AAAcE;;AADxB,AAAA,AAAAS,AAAAN;AAAA,AAAAO,AAAAP;AAAA,AACE,AAACS,AAAOd,AAAcE;;AADxB;;;;AAAA,AAAA,AAAAW,AAAA,AAAAT;;AAAA,AAGA,AAAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAU,AAAAV;AAAAU,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAP,AAAA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAAN,AAAAC,AAAAK,AAAAA;AAAA,AACE,AAACD,AAAOd,AAAciB;;AADxB,AAAA,AAAAN,AAAAN;AAAA,AAAAW,AAAAX;AAAA,AACE,AAACS,AAAOd,AAAciB;;AADxB;;;;AAAA,AAAA,AAAAJ,AAAA,AAAAT;;AAAA,AAGA,AAAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAa,AAAAb;AAAAa,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAV,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAAT,AAAAC,AAAAQ,AAAAA;AAAA,AACE,AAACJ,AAAOd,AAAcoB;;AADxB,AAAA,AAAAT,AAAAN;AAAA,AAAAc,AAAAd;AAAA,AACE,AAACS,AAAOd,AAAcoB;;AADxB;;;;AAAA,AAAA,AAAAP,AAAA,AAAAT;;AAAA,AAIA,AAAA,AAAMiB;AAAN,AACE,AAAA,AAACC;;AAGH,AAAA,AAAMC,AAAOC;AAAb,AACE,AAAAC,AAAA,AAA2B5B;AAA3B6B,AAAyCF;AAAzC,AAAA,AAAAC,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAEH,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAc,AAACR;AAAf,AAAA,AAAAQ;AAAA,AAAA,AAAAA,AAAWL;AAAX,AACE,AAACD,AAAMC;;AADT;;;AAKF,AAAA,AAAMM;AAAN,AACI,AAAA,AAAA,AAACC,AAEC,AAAKC;AAAL,AACE,AAACC,AAAoBD;AAHzB,AAKE,AAAKA;AAAL,AACE,AAACE,AAAuBF;;;AAC5B,AAACG;;AACD,AAACP;;AAGL,AAACE;AAID,AAAA,AAAmBM;AAAnB,AACE,AAACR","names":["main.draw-graph.core/current-page","accountant.core.navigate_BANG_.cljs$core$IFn$_invoke$arity$1","main.draw-graph.core/page","main.draw-graph.core/selected-page","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","main.draw-graph.home/home-page","cljs.core/deref","action__36037__auto__","params__36038__auto__","cljs.core/map?","map__52526","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core/vector?","vec__52528","secretary.core/add-route!","cljs.core/reset!","map__52531","vec__52534","main.draw-graph.about/about-page","map__52537","vec__52539","main.draw-graph.help/help-page","main.draw-graph.core/get-app-element","goog.dom/getElement","main.draw-graph.core/mount","el","G__52543","G__52544","reagent.core/render-component","main.draw-graph.core/mount-app-element","temp__5720__auto__","main.draw-graph.core/init!","accountant.core/configure-navigation!","path","secretary.core/dispatch!","secretary.core/locate-route","accountant.core/dispatch-current!","main.draw-graph.core/on-reload"],"sourcesContent":["(ns ^:figwheel-hooks main.draw-graph.core\n  (:require\n   [goog.dom :as gdom]\n   [reagent.core :as reagent :refer [atom]]\n   [main.draw-graph.about :refer [about-page]]\n   [main.draw-graph.home :refer [home-page]]\n   [main.draw-graph.help :refer [help-page]]\n   [secretary.core :as secretary :include-macros true]\n   [accountant.core :as accountant]))\n\n\n;; -------------------------\n;; Current page\n\n(declare page)\n\n(defn current-page []\n  [:div.core\n       [:header\n        [:p [:a {:on-click #(accountant/navigate! \"/\")} \"Home\"] \" | \"\n         [:a {:on-click #(accountant/navigate! \"/help\")} \"help\"] \" | \"\n         [:a {:on-click #(accountant/navigate! \"/about\")} \"about\"]]]\n       [page]\n       [:footer\n        [:p\n         [:span.site \"draw-graph\"] \" is a free utility by \"\n         [:a {:href \"https://github.com/judepayne\" :tabIndex \"0\"}\n          \"Jude Payne\"] \".\"]]])\n\n(def selected-page (atom home-page))\n\n(defn page []\n  [@selected-page])\n\n;; -------------------------\n;; Routes\n\n(secretary/defroute \"/\" []\n  (reset! selected-page home-page))\n\n(secretary/defroute \"/about\" []\n  (reset! selected-page about-page))\n\n(secretary/defroute \"/help\" []\n  (reset! selected-page help-page))\n\n\n(defn get-app-element []\n  (gdom/getElement \"app\"))\n\n\n(defn mount [el]\n  (reagent/render-component [current-page] el))\n\n(defn mount-app-element []\n  (when-let [el (get-app-element)]\n    (mount el)))\n\n;; conditionally start your application based on the presence of an \"app\" element\n;; this is particularly helpful for testing this ns without launching the app\n(defn init! []\n    (accountant/configure-navigation!\n     {:nav-handler\n      (fn [path]\n        (secretary/dispatch! path))\n      :path-exists?\n      (fn [path]\n        (secretary/locate-route path))})\n    (accountant/dispatch-current!)\n    (mount-app-element))\n\n\n(init!)\n\n\n;; specify reload hook with ^;after-load metadata\n(defn ^:after-load on-reload []\n  (mount-app-element)\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n"]}