{
"version":3,
"file":"goog.style.style.js",
"lineCount":1161,
"mappings":"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",
"sources":["goog/style/style.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for element styles.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author eae@google.com (Emil A Eklund)\n * @see ../demos/inline_block_quirks.html\n * @see ../demos/inline_block_standards.html\n * @see ../demos/style_viewport.html\n */\n\ngoog.provide('goog.style');\n\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.vendor');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.math.Box');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Rect');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\n\ngoog.forwardDeclare('goog.events.Event');\n\n\n/**\n * Sets a style value on an element.\n *\n * This function is not indended to patch issues in the browser's style\n * handling, but to allow easy programmatic access to setting dash-separated\n * style properties.  An example is setting a batch of properties from a data\n * object without overwriting old styles.  When possible, use native APIs:\n * elem.style.propertyKey = 'value' or (if obliterating old styles is fine)\n * elem.style.cssText = 'property1: value1; property2: value2'.\n *\n * @param {Element} element The element to change.\n * @param {string|Object} style If a string, a style name. If an object, a hash\n *     of style names to style values.\n * @param {string|number|boolean=} opt_value If style was a string, then this\n *     should be the value.\n */\ngoog.style.setStyle = function(element, style, opt_value) {\n  if (goog.isString(style)) {\n    goog.style.setStyle_(element, opt_value, style);\n  } else {\n    for (var key in style) {\n      goog.style.setStyle_(element, style[key], key);\n    }\n  }\n};\n\n\n/**\n * Sets a style value on an element, with parameters swapped to work with\n * `goog.object.forEach()`. Prepends a vendor-specific prefix when\n * necessary.\n * @param {Element} element The element to change.\n * @param {string|number|boolean|undefined} value Style value.\n * @param {string} style Style name.\n * @private\n */\ngoog.style.setStyle_ = function(element, value, style) {\n  var propertyName = goog.style.getVendorJsStyleName_(element, style);\n\n  if (propertyName) {\n    // TODO(johnlenz): coerce to string?\n    element.style[propertyName] = /** @type {?} */ (value);\n  }\n};\n\n\n/**\n * Style name cache that stores previous property name lookups.\n *\n * This is used by setStyle to speed up property lookups, entries look like:\n *   { StyleName: ActualPropertyName }\n *\n * @private {!Object<string, string>}\n */\ngoog.style.styleNameCache_ = {};\n\n\n/**\n * Returns the style property name in camel-case. If it does not exist and a\n * vendor-specific version of the property does exist, then return the vendor-\n * specific property name instead.\n * @param {Element} element The element to change.\n * @param {string} style Style name.\n * @return {string} Vendor-specific style.\n * @private\n */\ngoog.style.getVendorJsStyleName_ = function(element, style) {\n  var propertyName = goog.style.styleNameCache_[style];\n  if (!propertyName) {\n    var camelStyle = goog.string.toCamelCase(style);\n    propertyName = camelStyle;\n\n    if (element.style[camelStyle] === undefined) {\n      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() +\n          goog.string.toTitleCase(camelStyle);\n\n      if (element.style[prefixedStyle] !== undefined) {\n        propertyName = prefixedStyle;\n      }\n    }\n    goog.style.styleNameCache_[style] = propertyName;\n  }\n\n  return propertyName;\n};\n\n\n/**\n * Returns the style property name in CSS notation. If it does not exist and a\n * vendor-specific version of the property does exist, then return the vendor-\n * specific property name instead.\n * @param {Element} element The element to change.\n * @param {string} style Style name.\n * @return {string} Vendor-specific style.\n * @private\n */\ngoog.style.getVendorStyleName_ = function(element, style) {\n  var camelStyle = goog.string.toCamelCase(style);\n\n  if (element.style[camelStyle] === undefined) {\n    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() +\n        goog.string.toTitleCase(camelStyle);\n\n    if (element.style[prefixedStyle] !== undefined) {\n      return goog.dom.vendor.getVendorPrefix() + '-' + style;\n    }\n  }\n\n  return style;\n};\n\n\n/**\n * Retrieves an explicitly-set style value of a node. This returns '' if there\n * isn't a style attribute on the element or if this style property has not been\n * explicitly set in script.\n *\n * @param {Element} element Element to get style of.\n * @param {string} property Property to get, css-style (if you have a camel-case\n * property, use element.style[style]).\n * @return {string} Style value.\n */\ngoog.style.getStyle = function(element, property) {\n  // element.style is '' for well-known properties which are unset.\n  // For for browser specific styles as 'filter' is undefined\n  // so we need to return '' explicitly to make it consistent across\n  // browsers.\n  var styleValue = element.style[goog.string.toCamelCase(property)];\n\n  // Using typeof here because of a bug in Safari 5.1, where this value\n  // was undefined, but === undefined returned false.\n  if (typeof(styleValue) !== 'undefined') {\n    return styleValue;\n  }\n\n  return element.style[goog.style.getVendorJsStyleName_(element, property)] ||\n      '';\n};\n\n\n/**\n * Retrieves a computed style value of a node. It returns empty string if the\n * value cannot be computed (which will be the case in Internet Explorer) or\n * \"none\" if the property requested is an SVG one and it has not been\n * explicitly set (firefox and webkit).\n *\n * @param {Element} element Element to get style of.\n * @param {string} property Property to get (camel-case).\n * @return {string} Style value.\n */\ngoog.style.getComputedStyle = function(element, property) {\n  var doc = goog.dom.getOwnerDocument(element);\n  if (doc.defaultView && doc.defaultView.getComputedStyle) {\n    var styles = doc.defaultView.getComputedStyle(element, null);\n    if (styles) {\n      // element.style[..] is undefined for browser specific styles\n      // as 'filter'.\n      return styles[property] || styles.getPropertyValue(property) || '';\n    }\n  }\n\n  return '';\n};\n\n\n/**\n * Gets the cascaded style value of a node, or null if the value cannot be\n * computed (only Internet Explorer can do this).\n *\n * @param {Element} element Element to get style of.\n * @param {string} style Property to get (camel-case).\n * @return {string} Style value.\n */\ngoog.style.getCascadedStyle = function(element, style) {\n  // TODO(nicksantos): This should be documented to return null. #fixTypes\n  return /** @type {string} */ (\n      element.currentStyle ? element.currentStyle[style] : null);\n};\n\n\n/**\n * Cross-browser pseudo get computed style. It returns the computed style where\n * available. If not available it tries the cascaded style value (IE\n * currentStyle) and in worst case the inline style value.  It shouldn't be\n * called directly, see http://wiki/Main/ComputedStyleVsCascadedStyle for\n * discussion.\n *\n * @param {Element} element Element to get style of.\n * @param {string} style Property to get (must be camelCase, not css-style.).\n * @return {string} Style value.\n * @private\n */\ngoog.style.getStyle_ = function(element, style) {\n  return goog.style.getComputedStyle(element, style) ||\n      goog.style.getCascadedStyle(element, style) ||\n      (element.style && element.style[style]);\n};\n\n\n/**\n * Retrieves the computed value of the box-sizing CSS attribute.\n * Browser support: http://caniuse.com/css3-boxsizing.\n * @param {!Element} element The element whose box-sizing to get.\n * @return {?string} 'content-box', 'border-box' or 'padding-box'. null if\n *     box-sizing is not supported (IE7 and below).\n */\ngoog.style.getComputedBoxSizing = function(element) {\n  return goog.style.getStyle_(element, 'boxSizing') ||\n      goog.style.getStyle_(element, 'MozBoxSizing') ||\n      goog.style.getStyle_(element, 'WebkitBoxSizing') || null;\n};\n\n\n/**\n * Retrieves the computed value of the position CSS attribute.\n * @param {Element} element The element to get the position of.\n * @return {string} Position value.\n */\ngoog.style.getComputedPosition = function(element) {\n  return goog.style.getStyle_(element, 'position');\n};\n\n\n/**\n * Retrieves the computed background color string for a given element. The\n * string returned is suitable for assigning to another element's\n * background-color, but is not guaranteed to be in any particular string\n * format. Accessing the color in a numeric form may not be possible in all\n * browsers or with all input.\n *\n * If the background color for the element is defined as a hexadecimal value,\n * the resulting string can be parsed by goog.color.parse in all supported\n * browsers.\n *\n * Whether named colors like \"red\" or \"lightblue\" get translated into a\n * format which can be parsed is browser dependent. Calling this function on\n * transparent elements will return \"transparent\" in most browsers or\n * \"rgba(0, 0, 0, 0)\" in WebKit.\n * @param {Element} element The element to get the background color of.\n * @return {string} The computed string value of the background color.\n */\ngoog.style.getBackgroundColor = function(element) {\n  return goog.style.getStyle_(element, 'backgroundColor');\n};\n\n\n/**\n * Retrieves the computed value of the overflow-x CSS attribute.\n * @param {Element} element The element to get the overflow-x of.\n * @return {string} The computed string value of the overflow-x attribute.\n */\ngoog.style.getComputedOverflowX = function(element) {\n  return goog.style.getStyle_(element, 'overflowX');\n};\n\n\n/**\n * Retrieves the computed value of the overflow-y CSS attribute.\n * @param {Element} element The element to get the overflow-y of.\n * @return {string} The computed string value of the overflow-y attribute.\n */\ngoog.style.getComputedOverflowY = function(element) {\n  return goog.style.getStyle_(element, 'overflowY');\n};\n\n\n/**\n * Retrieves the computed value of the z-index CSS attribute.\n * @param {Element} element The element to get the z-index of.\n * @return {string|number} The computed value of the z-index attribute.\n */\ngoog.style.getComputedZIndex = function(element) {\n  return goog.style.getStyle_(element, 'zIndex');\n};\n\n\n/**\n * Retrieves the computed value of the text-align CSS attribute.\n * @param {Element} element The element to get the text-align of.\n * @return {string} The computed string value of the text-align attribute.\n */\ngoog.style.getComputedTextAlign = function(element) {\n  return goog.style.getStyle_(element, 'textAlign');\n};\n\n\n/**\n * Retrieves the computed value of the cursor CSS attribute.\n * @param {Element} element The element to get the cursor of.\n * @return {string} The computed string value of the cursor attribute.\n */\ngoog.style.getComputedCursor = function(element) {\n  return goog.style.getStyle_(element, 'cursor');\n};\n\n\n/**\n * Retrieves the computed value of the CSS transform attribute.\n * @param {Element} element The element to get the transform of.\n * @return {string} The computed string representation of the transform matrix.\n */\ngoog.style.getComputedTransform = function(element) {\n  var property = goog.style.getVendorStyleName_(element, 'transform');\n  return goog.style.getStyle_(element, property) ||\n      goog.style.getStyle_(element, 'transform');\n};\n\n\n/**\n * Sets the top/left values of an element.  If no unit is specified in the\n * argument then it will add px. The second argument is required if the first\n * argument is a string or number and is ignored if the first argument\n * is a coordinate.\n * @param {Element} el Element to move.\n * @param {string|number|goog.math.Coordinate} arg1 Left position or coordinate.\n * @param {string|number=} opt_arg2 Top position.\n */\ngoog.style.setPosition = function(el, arg1, opt_arg2) {\n  var x, y;\n\n  if (arg1 instanceof goog.math.Coordinate) {\n    x = arg1.x;\n    y = arg1.y;\n  } else {\n    x = arg1;\n    y = opt_arg2;\n  }\n\n  el.style.left = goog.style.getPixelStyleValue_(\n      /** @type {number|string} */ (x), false);\n  el.style.top = goog.style.getPixelStyleValue_(\n      /** @type {number|string} */ (y), false);\n};\n\n\n/**\n * Gets the offsetLeft and offsetTop properties of an element and returns them\n * in a Coordinate object\n * @param {Element} element Element.\n * @return {!goog.math.Coordinate} The position.\n */\ngoog.style.getPosition = function(element) {\n  return new goog.math.Coordinate(\n      /** @type {!HTMLElement} */ (element).offsetLeft,\n      /** @type {!HTMLElement} */ (element).offsetTop);\n};\n\n\n/**\n * Returns the viewport element for a particular document\n * @param {Node=} opt_node DOM node (Document is OK) to get the viewport element\n *     of.\n * @return {Element} document.documentElement or document.body.\n */\ngoog.style.getClientViewportElement = function(opt_node) {\n  var doc;\n  if (opt_node) {\n    doc = goog.dom.getOwnerDocument(opt_node);\n  } else {\n    doc = goog.dom.getDocument();\n  }\n\n  // In old IE versions the document.body represented the viewport\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) &&\n      !goog.dom.getDomHelper(doc).isCss1CompatMode()) {\n    return doc.body;\n  }\n  return doc.documentElement;\n};\n\n\n/**\n * Calculates the viewport coordinates relative to the page/document\n * containing the node. The viewport may be the browser viewport for\n * non-iframe document, or the iframe container for iframe'd document.\n * @param {!Document} doc The document to use as the reference point.\n * @return {!goog.math.Coordinate} The page offset of the viewport.\n */\ngoog.style.getViewportPageOffset = function(doc) {\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;\n  var scrollTop = body.scrollTop || documentElement.scrollTop;\n  return new goog.math.Coordinate(scrollLeft, scrollTop);\n};\n\n\n/**\n * Gets the client rectangle of the DOM element.\n *\n * getBoundingClientRect is part of a new CSS object model draft (with a\n * long-time presence in IE), replacing the error-prone parent offset\n * computation and the now-deprecated Gecko getBoxObjectFor.\n *\n * This utility patches common browser bugs in getBoundingClientRect. It\n * will fail if getBoundingClientRect is unsupported.\n *\n * If the element is not in the DOM, the result is undefined, and an error may\n * be thrown depending on user agent.\n *\n * @param {!Element} el The element whose bounding rectangle is being queried.\n * @return {Object} A native bounding rectangle with numerical left, top,\n *     right, and bottom.  Reported by Firefox to be of object type ClientRect.\n * @private\n */\ngoog.style.getBoundingClientRect_ = function(el) {\n  var rect;\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (e) {\n    // In IE < 9, calling getBoundingClientRect on an orphan element raises an\n    // \"Unspecified Error\". All other browsers return zeros.\n    return {'left': 0, 'top': 0, 'right': 0, 'bottom': 0};\n  }\n\n  // Patch the result in IE only, so that this function can be inlined if\n  // compiled for non-IE.\n  if (goog.userAgent.IE && el.ownerDocument.body) {\n    // In IE, most of the time, 2 extra pixels are added to the top and left\n    // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n    // IE6 standards mode, this border can be overridden by setting the\n    // document element's border to zero -- thus, we cannot rely on the\n    // offset always being 2 pixels.\n\n    // In quirks mode, the offset can be determined by querying the body's\n    // clientLeft/clientTop, but in standards mode, it is found by querying\n    // the document element's clientLeft/clientTop.  Since we already called\n    // getBoundingClientRect we have already forced a reflow, so it is not\n    // too expensive just to query them all.\n\n    // See: http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx\n    var doc = el.ownerDocument;\n    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;\n    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;\n  }\n  return rect;\n};\n\n\n/**\n * Returns the first parent that could affect the position of a given element.\n * @param {Element} element The element to get the offset parent for.\n * @return {Element} The first offset parent or null if one cannot be found.\n */\ngoog.style.getOffsetParent = function(element) {\n  // element.offsetParent does the right thing in IE7 and below.  In other\n  // browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {\n    goog.asserts.assert(element && 'offsetParent' in element);\n    return element.offsetParent;\n  }\n\n  var doc = goog.dom.getOwnerDocument(element);\n  var positionStyle = goog.style.getStyle_(element, 'position');\n  var skipStatic = positionStyle == 'fixed' || positionStyle == 'absolute';\n  for (var parent = element.parentNode; parent && parent != doc;\n       parent = parent.parentNode) {\n    // Skip shadowDOM roots.\n    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host) {\n      // Cast because the assignment is not type safe, and without a cast we\n      // start typing parent loosely and get bad disambiguation.\n      parent = /** @type {!Element} */ (parent.host);\n    }\n    positionStyle =\n        goog.style.getStyle_(/** @type {!Element} */ (parent), 'position');\n    skipStatic = skipStatic && positionStyle == 'static' &&\n        parent != doc.documentElement && parent != doc.body;\n    if (!skipStatic &&\n        (parent.scrollWidth > parent.clientWidth ||\n         parent.scrollHeight > parent.clientHeight ||\n         positionStyle == 'fixed' || positionStyle == 'absolute' ||\n         positionStyle == 'relative')) {\n      return /** @type {!Element} */ (parent);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Calculates and returns the visible rectangle for a given element. Returns a\n * box describing the visible portion of the nearest scrollable offset ancestor.\n * Coordinates are given relative to the document.\n *\n * @param {Element} element Element to get the visible rect for.\n * @return {goog.math.Box} Bounding elementBox describing the visible rect or\n *     null if scrollable ancestor isn't inside the visible viewport.\n */\ngoog.style.getVisibleRectForElement = function(element) {\n  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);\n  var dom = goog.dom.getDomHelper(element);\n  var body = dom.getDocument().body;\n  var documentElement = dom.getDocument().documentElement;\n  var scrollEl = dom.getDocumentScrollElement();\n\n  // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n  for (var el = element; el = goog.style.getOffsetParent(el);) {\n    // clientWidth is zero for inline block elements in IE.\n    // on WEBKIT, body element can have clientHeight = 0 and scrollHeight > 0\n    if ((!goog.userAgent.IE || el.clientWidth != 0) &&\n        (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) &&\n        // body may have overflow set on it, yet we still get the entire\n        // viewport. In some browsers, el.offsetParent may be\n        // document.documentElement, so check for that too.\n        (el != body && el != documentElement &&\n         goog.style.getStyle_(el, 'overflow') != 'visible')) {\n      var pos = goog.style.getPageOffset(el);\n      var client = goog.style.getClientLeftTop(el);\n      pos.x += client.x;\n      pos.y += client.y;\n\n      visibleRect.top = Math.max(visibleRect.top, pos.y);\n      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);\n      visibleRect.bottom =\n          Math.min(visibleRect.bottom, pos.y + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.x);\n    }\n  }\n\n  // Clip by window's viewport.\n  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;\n  visibleRect.left = Math.max(visibleRect.left, scrollX);\n  visibleRect.top = Math.max(visibleRect.top, scrollY);\n  var winSize = dom.getViewportSize();\n  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);\n  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);\n  return visibleRect.top >= 0 && visibleRect.left >= 0 &&\n          visibleRect.bottom > visibleRect.top &&\n          visibleRect.right > visibleRect.left ?\n      visibleRect :\n      null;\n};\n\n\n/**\n * Calculate the scroll position of `container` with the minimum amount so\n * that the content and the borders of the given `element` become visible.\n * If the element is bigger than the container, its top left corner will be\n * aligned as close to the container's top left corner as possible.\n *\n * @param {Element} element The element to make visible.\n * @param {Element=} opt_container The container to scroll. If not set, then the\n *     document scroll element will be used.\n * @param {boolean=} opt_center Whether to center the element in the container.\n *     Defaults to false.\n * @return {!goog.math.Coordinate} The new scroll position of the container,\n *     in form of goog.math.Coordinate(scrollLeft, scrollTop).\n */\ngoog.style.getContainerOffsetToScrollInto = function(\n    element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement();\n  // Absolute position of the element's border's top left corner.\n  var elementPos = goog.style.getPageOffset(element);\n  // Absolute position of the container's border's top left corner.\n  var containerPos = goog.style.getPageOffset(container);\n  var containerBorder = goog.style.getBorderBox(container);\n  if (container == goog.dom.getDocumentScrollElement()) {\n    // The element position is calculated based on the page offset, and the\n    // document scroll element holds the scroll position within the page. We can\n    // use the scroll position to calculate the relative position from the\n    // element.\n    var relX = elementPos.x - container.scrollLeft;\n    var relY = elementPos.y - container.scrollTop;\n    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10)) {\n      // In older versions of IE getPageOffset(element) does not include the\n      // container border so it has to be added to accommodate.\n      relX += containerBorder.left;\n      relY += containerBorder.top;\n    }\n  } else {\n    // Relative pos. of the element's border box to the container's content box.\n    var relX = elementPos.x - containerPos.x - containerBorder.left;\n    var relY = elementPos.y - containerPos.y - containerBorder.top;\n  }\n  // How much the element can move in the container, i.e. the difference between\n  // the element's bottom-right-most and top-left-most position where it's\n  // fully visible.\n  var elementSize = goog.style.getSizeWithDisplay_(element);\n  var spaceX = container.clientWidth - elementSize.width;\n  var spaceY = container.clientHeight - elementSize.height;\n  var scrollLeft = container.scrollLeft;\n  var scrollTop = container.scrollTop;\n  if (opt_center) {\n    // All browsers round non-integer scroll positions down.\n    scrollLeft += relX - spaceX / 2;\n    scrollTop += relY - spaceY / 2;\n  } else {\n    // This formula was designed to give the correct scroll values in the\n    // following cases:\n    // - element is higher than container (spaceY < 0) => scroll down by relY\n    // - element is not higher that container (spaceY >= 0):\n    //   - it is above container (relY < 0) => scroll up by abs(relY)\n    //   - it is below container (relY > spaceY) => scroll down by relY - spaceY\n    //   - it is in the container => don't scroll\n    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));\n    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));\n  }\n  return new goog.math.Coordinate(scrollLeft, scrollTop);\n};\n\n\n/**\n * Changes the scroll position of `container` with the minimum amount so\n * that the content and the borders of the given `element` become visible.\n * If the element is bigger than the container, its top left corner will be\n * aligned as close to the container's top left corner as possible.\n *\n * @param {Element} element The element to make visible.\n * @param {Element=} opt_container The container to scroll. If not set, then the\n *     document scroll element will be used.\n * @param {boolean=} opt_center Whether to center the element in the container.\n *     Defaults to false.\n */\ngoog.style.scrollIntoContainerView = function(\n    element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement();\n  var offset =\n      goog.style.getContainerOffsetToScrollInto(element, container, opt_center);\n  container.scrollLeft = offset.x;\n  container.scrollTop = offset.y;\n};\n\n\n/**\n * Returns clientLeft (width of the left border and, if the directionality is\n * right to left, the vertical scrollbar) and clientTop as a coordinate object.\n *\n * @param {Element} el Element to get clientLeft for.\n * @return {!goog.math.Coordinate} Client left and top.\n */\ngoog.style.getClientLeftTop = function(el) {\n  return new goog.math.Coordinate(el.clientLeft, el.clientTop);\n};\n\n\n/**\n * Returns a Coordinate object relative to the top-left of the HTML document.\n * Implemented as a single function to save having to do two recursive loops in\n * opera and safari just to get both coordinates.  If you just want one value do\n * use goog.style.getPageOffsetLeft() and goog.style.getPageOffsetTop(), but\n * note if you call both those methods the tree will be analysed twice.\n *\n * @param {Element} el Element to get the page offset for.\n * @return {!goog.math.Coordinate} The page offset.\n */\ngoog.style.getPageOffset = function(el) {\n  var doc = goog.dom.getOwnerDocument(el);\n  // TODO(gboyer): Update the jsdoc in a way that doesn't break the universe.\n  goog.asserts.assertObject(el, 'Parameter is required');\n\n  // NOTE(arv): If element is hidden (display none or disconnected or any the\n  // ancestors are hidden) we get (0,0) by default but we still do the\n  // accumulation of scroll position.\n\n  // TODO(arv): Should we check if the node is disconnected and in that case\n  //            return (0,0)?\n\n  var pos = new goog.math.Coordinate(0, 0);\n  var viewportElement = goog.style.getClientViewportElement(doc);\n  if (el == viewportElement) {\n    // viewport is always at 0,0 as that defined the coordinate system for this\n    // function - this avoids special case checks in the code below\n    return pos;\n  }\n\n  var box = goog.style.getBoundingClientRect_(el);\n  // Must add the scroll coordinates in to get the absolute page offset\n  // of element since getBoundingClientRect returns relative coordinates to\n  // the viewport.\n  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();\n  pos.x = box.left + scrollCoord.x;\n  pos.y = box.top + scrollCoord.y;\n\n  return pos;\n};\n\n\n/**\n * Returns the left coordinate of an element relative to the HTML document\n * @param {Element} el Elements.\n * @return {number} The left coordinate.\n */\ngoog.style.getPageOffsetLeft = function(el) {\n  return goog.style.getPageOffset(el).x;\n};\n\n\n/**\n * Returns the top coordinate of an element relative to the HTML document\n * @param {Element} el Elements.\n * @return {number} The top coordinate.\n */\ngoog.style.getPageOffsetTop = function(el) {\n  return goog.style.getPageOffset(el).y;\n};\n\n\n/**\n * Returns a Coordinate object relative to the top-left of an HTML document\n * in an ancestor frame of this element. Used for measuring the position of\n * an element inside a frame relative to a containing frame.\n *\n * @param {Element} el Element to get the page offset for.\n * @param {Window} relativeWin The window to measure relative to. If relativeWin\n *     is not in the ancestor frame chain of the element, we measure relative to\n *     the top-most window.\n * @return {!goog.math.Coordinate} The page offset.\n */\ngoog.style.getFramedPageOffset = function(el, relativeWin) {\n  var position = new goog.math.Coordinate(0, 0);\n\n  // Iterate up the ancestor frame chain, keeping track of the current window\n  // and the current element in that window.\n  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));\n\n  // MS Edge throws when accessing \"parent\" if el's containing iframe has been\n  // deleted.\n  if (!goog.reflect.canAccessProperty(currentWin, 'parent')) {\n    return position;\n  }\n\n  var currentEl = el;\n  do {\n    // if we're at the top window, we want to get the page offset.\n    // if we're at an inner frame, we only want to get the window position\n    // so that we can determine the actual page offset in the context of\n    // the outer window.\n    var offset = currentWin == relativeWin ?\n        goog.style.getPageOffset(currentEl) :\n        goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));\n\n    position.x += offset.x;\n    position.y += offset.y;\n  } while (currentWin && currentWin != relativeWin &&\n           currentWin != currentWin.parent &&\n           (currentEl = currentWin.frameElement) &&\n           (currentWin = currentWin.parent));\n\n  return position;\n};\n\n\n/**\n * Translates the specified rect relative to origBase page, for newBase page.\n * If origBase and newBase are the same, this function does nothing.\n *\n * @param {goog.math.Rect} rect The source rectangle relative to origBase page,\n *     and it will have the translated result.\n * @param {goog.dom.DomHelper} origBase The DomHelper for the input rectangle.\n * @param {goog.dom.DomHelper} newBase The DomHelper for the resultant\n *     coordinate.  This must be a DOM for an ancestor frame of origBase\n *     or the same as origBase.\n */\ngoog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {\n  if (origBase.getDocument() != newBase.getDocument()) {\n    var body = origBase.getDocument().body;\n    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());\n\n    // Adjust Body's margin.\n    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));\n\n    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) &&\n        !origBase.isCss1CompatMode()) {\n      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());\n    }\n\n    rect.left += pos.x;\n    rect.top += pos.y;\n  }\n};\n\n\n/**\n * Returns the position of an element relative to another element in the\n * document.  A relative to B\n * @param {Element|Event|goog.events.Event} a Element or mouse event whose\n *     position we're calculating.\n * @param {Element|Event|goog.events.Event} b Element or mouse event position\n *     is relative to.\n * @return {!goog.math.Coordinate} The relative position.\n */\ngoog.style.getRelativePosition = function(a, b) {\n  var ap = goog.style.getClientPosition(a);\n  var bp = goog.style.getClientPosition(b);\n  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);\n};\n\n\n/**\n * Returns the position of the event or the element's border box relative to\n * the client viewport.\n * @param {!Element} el Element whose position to get.\n * @return {!goog.math.Coordinate} The position.\n * @private\n */\ngoog.style.getClientPositionForElement_ = function(el) {\n  var box = goog.style.getBoundingClientRect_(el);\n  return new goog.math.Coordinate(box.left, box.top);\n};\n\n\n/**\n * Returns the position of the event or the element's border box relative to\n * the client viewport. If an event is passed, and if this event is a \"touch\"\n * event, then the position of the first changedTouches will be returned.\n * @param {Element|Event|goog.events.Event} el Element or a mouse / touch event.\n * @return {!goog.math.Coordinate} The position.\n */\ngoog.style.getClientPosition = function(el) {\n  goog.asserts.assert(el);\n  if (el.nodeType == goog.dom.NodeType.ELEMENT) {\n    return goog.style.getClientPositionForElement_(\n        /** @type {!Element} */ (el));\n  } else {\n    var targetEvent = el.changedTouches ? el.changedTouches[0] : el;\n    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);\n  }\n};\n\n\n/**\n * Moves an element to the given coordinates relative to the client viewport.\n * @param {Element} el Absolutely positioned element to set page offset for.\n *     It must be in the document.\n * @param {number|goog.math.Coordinate} x Left position of the element's margin\n *     box or a coordinate object.\n * @param {number=} opt_y Top position of the element's margin box.\n */\ngoog.style.setPageOffset = function(el, x, opt_y) {\n  // Get current pageoffset\n  var cur = goog.style.getPageOffset(el);\n\n  if (x instanceof goog.math.Coordinate) {\n    opt_y = x.y;\n    x = x.x;\n  }\n\n  // NOTE(arv): We cannot allow strings for x and y. We could but that would\n  // require us to manually transform between different units\n\n  // Work out deltas\n  var dx = goog.asserts.assertNumber(x) - cur.x;\n  var dy = Number(opt_y) - cur.y;\n\n  // Set position to current left/top + delta\n  goog.style.setPosition(\n      el, /** @type {!HTMLElement} */ (el).offsetLeft + dx,\n      /** @type {!HTMLElement} */ (el).offsetTop + dy);\n};\n\n\n/**\n * Sets the width/height values of an element.  If an argument is numeric,\n * or a goog.math.Size is passed, it is assumed to be pixels and will add\n * 'px' after converting it to an integer in string form. (This just sets the\n * CSS width and height properties so it might set content-box or border-box\n * size depending on the box model the browser is using.)\n *\n * @param {Element} element Element to set the size of.\n * @param {string|number|goog.math.Size} w Width of the element, or a\n *     size object.\n * @param {string|number=} opt_h Height of the element. Required if w is not a\n *     size object.\n */\ngoog.style.setSize = function(element, w, opt_h) {\n  var h;\n  if (w instanceof goog.math.Size) {\n    h = w.height;\n    w = w.width;\n  } else {\n    if (opt_h == undefined) {\n      throw new Error('missing height argument');\n    }\n    h = opt_h;\n  }\n\n  goog.style.setWidth(element, /** @type {string|number} */ (w));\n  goog.style.setHeight(element, h);\n};\n\n\n/**\n * Helper function to create a string to be set into a pixel-value style\n * property of an element. Can round to the nearest integer value.\n *\n * @param {string|number} value The style value to be used. If a number,\n *     'px' will be appended, otherwise the value will be applied directly.\n * @param {boolean} round Whether to round the nearest integer (if property\n *     is a number).\n * @return {string} The string value for the property.\n * @private\n */\ngoog.style.getPixelStyleValue_ = function(value, round) {\n  if (typeof value == 'number') {\n    value = (round ? Math.round(value) : value) + 'px';\n  }\n\n  return value;\n};\n\n\n/**\n * Set the height of an element.  Sets the element's style property.\n * @param {Element} element Element to set the height of.\n * @param {string|number} height The height value to set.  If a number, 'px'\n *     will be appended, otherwise the value will be applied directly.\n */\ngoog.style.setHeight = function(element, height) {\n  element.style.height = goog.style.getPixelStyleValue_(height, true);\n};\n\n\n/**\n * Set the width of an element.  Sets the element's style property.\n * @param {Element} element Element to set the width of.\n * @param {string|number} width The width value to set.  If a number, 'px'\n *     will be appended, otherwise the value will be applied directly.\n */\ngoog.style.setWidth = function(element, width) {\n  element.style.width = goog.style.getPixelStyleValue_(width, true);\n};\n\n\n/**\n * Gets the height and width of an element, even if its display is none.\n *\n * Specifically, this returns the height and width of the border box,\n * irrespective of the box model in effect.\n *\n * Note that this function does not take CSS transforms into account. Please see\n * `goog.style.getTransformedSize`.\n * @param {Element} element Element to get size of.\n * @return {!goog.math.Size} Object with width/height properties.\n */\ngoog.style.getSize = function(element) {\n  return goog.style.evaluateWithTemporaryDisplay_(\n      goog.style.getSizeWithDisplay_, /** @type {!Element} */ (element));\n};\n\n\n/**\n * Call `fn` on `element` such that `element`'s dimensions are\n * accurate when it's passed to `fn`.\n * @param {function(!Element): T} fn Function to call with `element` as\n *     an argument after temporarily changing `element`'s display such\n *     that its dimensions are accurate.\n * @param {!Element} element Element (which may have display none) to use as\n *     argument to `fn`.\n * @return {T} Value returned by calling `fn` with `element`.\n * @template T\n * @private\n */\ngoog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {\n  if (goog.style.getStyle_(element, 'display') != 'none') {\n    return fn(element);\n  }\n\n  var style = element.style;\n  var originalDisplay = style.display;\n  var originalVisibility = style.visibility;\n  var originalPosition = style.position;\n\n  style.visibility = 'hidden';\n  style.position = 'absolute';\n  style.display = 'inline';\n\n  var retVal = fn(element);\n\n  style.display = originalDisplay;\n  style.position = originalPosition;\n  style.visibility = originalVisibility;\n\n  return retVal;\n};\n\n\n/**\n * Gets the height and width of an element when the display is not none.\n * @param {Element} element Element to get size of.\n * @return {!goog.math.Size} Object with width/height properties.\n * @private\n */\ngoog.style.getSizeWithDisplay_ = function(element) {\n  var offsetWidth = /** @type {!HTMLElement} */ (element).offsetWidth;\n  var offsetHeight = /** @type {!HTMLElement} */ (element).offsetHeight;\n  var webkitOffsetsZero =\n      goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;\n  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) &&\n      element.getBoundingClientRect) {\n    // Fall back to calling getBoundingClientRect when offsetWidth or\n    // offsetHeight are not defined, or when they are zero in WebKit browsers.\n    // This makes sure that we return for the correct size for SVG elements, but\n    // will still return 0 on Webkit prior to 534.8, see\n    // http://trac.webkit.org/changeset/67252.\n    var clientRect = goog.style.getBoundingClientRect_(element);\n    return new goog.math.Size(\n        clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n  }\n  return new goog.math.Size(offsetWidth, offsetHeight);\n};\n\n\n/**\n * Gets the height and width of an element, post transform, even if its display\n * is none.\n *\n * This is like `goog.style.getSize`, except:\n * <ol>\n * <li>Takes webkitTransforms such as rotate and scale into account.\n * <li>Will return null if `element` doesn't respond to\n *     `getBoundingClientRect`.\n * <li>Currently doesn't make sense on non-WebKit browsers which don't support\n *    webkitTransforms.\n * </ol>\n * @param {!Element} element Element to get size of.\n * @return {goog.math.Size} Object with width/height properties.\n */\ngoog.style.getTransformedSize = function(element) {\n  if (!element.getBoundingClientRect) {\n    return null;\n  }\n\n  var clientRect = goog.style.evaluateWithTemporaryDisplay_(\n      goog.style.getBoundingClientRect_, element);\n  return new goog.math.Size(\n      clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n};\n\n\n/**\n * Returns a bounding rectangle for a given element in page space.\n * @param {Element} element Element to get bounds of. Must not be display none.\n * @return {!goog.math.Rect} Bounding rectangle for the element.\n */\ngoog.style.getBounds = function(element) {\n  var o = goog.style.getPageOffset(element);\n  var s = goog.style.getSize(element);\n  return new goog.math.Rect(o.x, o.y, s.width, s.height);\n};\n\n\n/**\n * Converts a CSS selector in the form style-property to styleProperty.\n * @param {*} selector CSS Selector.\n * @return {string} Camel case selector.\n * @deprecated Use goog.string.toCamelCase instead.\n */\ngoog.style.toCamelCase = function(selector) {\n  return goog.string.toCamelCase(String(selector));\n};\n\n\n/**\n * Converts a CSS selector in the form styleProperty to style-property.\n * @param {string} selector Camel case selector.\n * @return {string} Selector cased.\n * @deprecated Use goog.string.toSelectorCase instead.\n */\ngoog.style.toSelectorCase = function(selector) {\n  return goog.string.toSelectorCase(selector);\n};\n\n\n/**\n * Gets the opacity of a node (x-browser). This gets the inline style opacity\n * of the node, and does not take into account the cascaded or the computed\n * style for this node.\n * @param {Element} el Element whose opacity has to be found.\n * @return {number|string} Opacity between 0 and 1 or an empty string {@code ''}\n *     if the opacity is not set.\n */\ngoog.style.getOpacity = function(el) {\n  goog.asserts.assert(el);\n  var style = el.style;\n  var result = '';\n  if ('opacity' in style) {\n    result = style.opacity;\n  } else if ('MozOpacity' in style) {\n    result = style.MozOpacity;\n  } else if ('filter' in style) {\n    var match = style.filter.match(/alpha\\(opacity=([\\d.]+)\\)/);\n    if (match) {\n      result = String(match[1] / 100);\n    }\n  }\n  return result == '' ? result : Number(result);\n};\n\n\n/**\n * Sets the opacity of a node (x-browser).\n * @param {Element} el Elements whose opacity has to be set.\n * @param {number|string} alpha Opacity between 0 and 1 or an empty string\n *     {@code ''} to clear the opacity.\n */\ngoog.style.setOpacity = function(el, alpha) {\n  goog.asserts.assert(el);\n  var style = el.style;\n  if ('opacity' in style) {\n    style.opacity = alpha;\n  } else if ('MozOpacity' in style) {\n    style.MozOpacity = alpha;\n  } else if ('filter' in style) {\n    // TODO(arv): Overwriting the filter might have undesired side effects.\n    if (alpha === '') {\n      style.filter = '';\n    } else {\n      style.filter = 'alpha(opacity=' + (Number(alpha) * 100) + ')';\n    }\n  }\n};\n\n\n/**\n * Sets the background of an element to a transparent image in a browser-\n * independent manner.\n *\n * This function does not support repeating backgrounds or alternate background\n * positions to match the behavior of Internet Explorer. It also does not\n * support sizingMethods other than crop since they cannot be replicated in\n * browsers other than Internet Explorer.\n *\n * @param {Element} el The element to set background on.\n * @param {string} src The image source URL.\n */\ngoog.style.setTransparentBackgroundImage = function(el, src) {\n  var style = el.style;\n  // It is safe to use the style.filter in IE only. In Safari 'filter' is in\n  // style object but access to style.filter causes it to throw an exception.\n  // Note: IE8 supports images with an alpha channel.\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    // See TODO in setOpacity.\n    style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(' +\n        'src=\"' + src + '\", sizingMethod=\"crop\")';\n  } else {\n    // Set style properties individually instead of using background shorthand\n    // to prevent overwriting a pre-existing background color.\n    style.backgroundImage = 'url(' + src + ')';\n    style.backgroundPosition = 'top left';\n    style.backgroundRepeat = 'no-repeat';\n  }\n};\n\n\n/**\n * Clears the background image of an element in a browser independent manner.\n * @param {Element} el The element to clear background image for.\n */\ngoog.style.clearTransparentBackgroundImage = function(el) {\n  var style = el.style;\n  if ('filter' in style) {\n    // See TODO in setOpacity.\n    style.filter = '';\n  } else {\n    // Set style properties individually instead of using background shorthand\n    // to prevent overwriting a pre-existing background color.\n    style.backgroundImage = 'none';\n  }\n};\n\n\n/**\n * Shows or hides an element from the page. Hiding the element is done by\n * setting the display property to \"none\", removing the element from the\n * rendering hierarchy so it takes up no space. To show the element, the default\n * inherited display property is restored (defined either in stylesheets or by\n * the browser's default style rules.)\n *\n * Caveat 1: if the inherited display property for the element is set to \"none\"\n * by the stylesheets, that is the property that will be restored by a call to\n * showElement(), effectively toggling the display between \"none\" and \"none\".\n *\n * Caveat 2: if the element display style is set inline (by setting either\n * element.style.display or a style attribute in the HTML), a call to\n * showElement will clear that setting and defer to the inherited style in the\n * stylesheet.\n * @param {Element} el Element to show or hide.\n * @param {*} display True to render the element in its default style,\n *     false to disable rendering the element.\n * @deprecated Use goog.style.setElementShown instead.\n */\ngoog.style.showElement = function(el, display) {\n  goog.style.setElementShown(el, display);\n};\n\n\n/**\n * Shows or hides an element from the page. Hiding the element is done by\n * setting the display property to \"none\", removing the element from the\n * rendering hierarchy so it takes up no space. To show the element, the default\n * inherited display property is restored (defined either in stylesheets or by\n * the browser's default style rules).\n *\n * Caveat 1: if the inherited display property for the element is set to \"none\"\n * by the stylesheets, that is the property that will be restored by a call to\n * setElementShown(), effectively toggling the display between \"none\" and\n * \"none\".\n *\n * Caveat 2: if the element display style is set inline (by setting either\n * element.style.display or a style attribute in the HTML), a call to\n * setElementShown will clear that setting and defer to the inherited style in\n * the stylesheet.\n * @param {Element} el Element to show or hide.\n * @param {*} isShown True to render the element in its default style,\n *     false to disable rendering the element.\n */\ngoog.style.setElementShown = function(el, isShown) {\n  el.style.display = isShown ? '' : 'none';\n};\n\n\n/**\n * Test whether the given element has been shown or hidden via a call to\n * {@link #setElementShown}.\n *\n * Note this is strictly a companion method for a call\n * to {@link #setElementShown} and the same caveats apply; in particular, this\n * method does not guarantee that the return value will be consistent with\n * whether or not the element is actually visible.\n *\n * @param {Element} el The element to test.\n * @return {boolean} Whether the element has been shown.\n * @see #setElementShown\n */\ngoog.style.isElementShown = function(el) {\n  return el.style.display != 'none';\n};\n\n\n/**\n * Installs the style sheet into the window that contains opt_node.  If\n * opt_node is null, the main window is used.\n * @param {!goog.html.SafeStyleSheet} safeStyleSheet The style sheet to install.\n * @param {?Node=} opt_node Node whose parent document should have the\n *     styles installed.\n * @return {!HTMLStyleElement|!StyleSheet} In IE<11, a StyleSheet object with no\n *     owning &lt;style&gt; tag (this is how IE creates style sheets).  In every\n *     other browser, a &lt;style&gt; element with an attached style.  This\n *     doesn't return a StyleSheet object so that setSafeStyleSheet can replace\n *     it (otherwise, if you pass a StyleSheet to setSafeStyleSheet, it will\n *     make a new StyleSheet and leave the original StyleSheet orphaned).\n */\ngoog.style.installSafeStyleSheet = function(safeStyleSheet, opt_node) {\n  var dh = goog.dom.getDomHelper(opt_node);\n\n  // IE < 11 requires createStyleSheet. Note that doc.createStyleSheet will be\n  // undefined as of IE 11.\n  var doc = dh.getDocument();\n  if (goog.userAgent.IE && doc.createStyleSheet) {\n    /** @type {(!HTMLStyleElement|!StyleSheet)} */\n    var styleSheet = doc.createStyleSheet();\n    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);\n    return styleSheet;\n  } else {\n    var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];\n\n    // In opera documents are not guaranteed to have a head element, thus we\n    // have to make sure one exists before using it.\n    if (!head) {\n      var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];\n      head = dh.createDom(goog.dom.TagName.HEAD);\n      body.parentNode.insertBefore(head, body);\n    }\n    var el = dh.createDom(goog.dom.TagName.STYLE);\n    // NOTE(user): Setting styles after the style element has been appended\n    // to the head results in a nasty Webkit bug in certain scenarios. Please\n    // refer to https://bugs.webkit.org/show_bug.cgi?id=26307 for additional\n    // details.\n    goog.style.setSafeStyleSheet(el, safeStyleSheet);\n    dh.appendChild(head, el);\n    return el;\n  }\n};\n\n\n/**\n * Removes the styles added by {@link #installStyles}.\n * @param {Element|StyleSheet} styleSheet The value returned by\n *     {@link #installStyles}.\n */\ngoog.style.uninstallStyles = function(styleSheet) {\n  var node = styleSheet.ownerNode || styleSheet.owningElement ||\n      /** @type {Element} */ (styleSheet);\n  goog.dom.removeNode(node);\n};\n\n\n/**\n * Sets the content of a style element.  The style element can be any valid\n * style element.  This element will have its content completely replaced by\n * the safeStyleSheet.\n * @param {!Element|!StyleSheet} element A stylesheet element as returned by\n *     installStyles.\n * @param {!goog.html.SafeStyleSheet} safeStyleSheet The new content of the\n *     stylesheet.\n */\ngoog.style.setSafeStyleSheet = function(element, safeStyleSheet) {\n  var stylesString = goog.html.SafeStyleSheet.unwrap(safeStyleSheet);\n  if (goog.userAgent.IE && goog.isDef(element.cssText)) {\n    // Adding the selectors individually caused the browser to hang if the\n    // selector was invalid or there were CSS comments.  Setting the cssText of\n    // the style node works fine and ignores CSS that IE doesn't understand.\n    // However IE >= 11 doesn't support cssText any more, so we make sure that\n    // cssText is a defined property and otherwise fall back to innerHTML.\n    element.cssText = stylesString;\n  } else {\n    // Setting textContent doesn't work in Safari, see b/29340337.\n    element.innerHTML = stylesString;\n  }\n};\n\n\n/**\n * Sets 'white-space: pre-wrap' for a node (x-browser).\n *\n * There are as many ways of specifying pre-wrap as there are browsers.\n *\n * CSS3/IE8: white-space: pre-wrap;\n * Mozilla:  white-space: -moz-pre-wrap;\n * Opera:    white-space: -o-pre-wrap;\n * IE6/7:    white-space: pre; word-wrap: break-word;\n *\n * @param {Element} el Element to enable pre-wrap for.\n */\ngoog.style.setPreWrap = function(el) {\n  var style = el.style;\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    style.whiteSpace = 'pre';\n    style.wordWrap = 'break-word';\n  } else if (goog.userAgent.GECKO) {\n    style.whiteSpace = '-moz-pre-wrap';\n  } else {\n    style.whiteSpace = 'pre-wrap';\n  }\n};\n\n\n/**\n * Sets 'display: inline-block' for an element (cross-browser).\n * @param {Element} el Element to which the inline-block display style is to be\n *    applied.\n * @see ../demos/inline_block_quirks.html\n * @see ../demos/inline_block_standards.html\n */\ngoog.style.setInlineBlock = function(el) {\n  var style = el.style;\n  // Without position:relative, weirdness ensues.  Just accept it and move on.\n  style.position = 'relative';\n\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    // IE8 supports inline-block so fall through to the else\n    // Zoom:1 forces hasLayout, display:inline gives inline behavior.\n    style.zoom = '1';\n    style.display = 'inline';\n  } else {\n    // Opera, Webkit, and Safari seem to do OK with the standard inline-block\n    // style.\n    style.display = 'inline-block';\n  }\n};\n\n\n/**\n * Returns true if the element is using right to left (rtl) direction.\n * @param {Element} el  The element to test.\n * @return {boolean} True for right to left, false for left to right.\n */\ngoog.style.isRightToLeft = function(el) {\n  return 'rtl' == goog.style.getStyle_(el, 'direction');\n};\n\n\n/**\n * The CSS style property corresponding to an element being\n * unselectable on the current browser platform (null if none).\n * Opera and IE instead use a DOM attribute 'unselectable'. MS Edge uses\n * the Webkit prefix.\n * @type {?string}\n * @private\n */\ngoog.style.unselectableStyle_ = goog.userAgent.GECKO ?\n    'MozUserSelect' :\n    goog.userAgent.WEBKIT || goog.userAgent.EDGE ? 'WebkitUserSelect' : null;\n\n\n/**\n * Returns true if the element is set to be unselectable, false otherwise.\n * Note that on some platforms (e.g. Mozilla), even if an element isn't set\n * to be unselectable, it will behave as such if any of its ancestors is\n * unselectable.\n * @param {Element} el  Element to check.\n * @return {boolean}  Whether the element is set to be unselectable.\n */\ngoog.style.isUnselectable = function(el) {\n  if (goog.style.unselectableStyle_) {\n    return el.style[goog.style.unselectableStyle_].toLowerCase() == 'none';\n  } else if (goog.userAgent.IE || goog.userAgent.OPERA) {\n    return el.getAttribute('unselectable') == 'on';\n  }\n  return false;\n};\n\n\n/**\n * Makes the element and its descendants selectable or unselectable.  Note\n * that on some platforms (e.g. Mozilla), even if an element isn't set to\n * be unselectable, it will behave as such if any of its ancestors is\n * unselectable.\n * @param {Element} el  The element to alter.\n * @param {boolean} unselectable  Whether the element and its descendants\n *     should be made unselectable.\n * @param {boolean=} opt_noRecurse  Whether to only alter the element's own\n *     selectable state, and leave its descendants alone; defaults to false.\n */\ngoog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {\n  // TODO(attila): Do we need all of TR_DomUtil.makeUnselectable() in Closure?\n  var descendants = !opt_noRecurse ? el.getElementsByTagName('*') : null;\n  var name = goog.style.unselectableStyle_;\n  if (name) {\n    // Add/remove the appropriate CSS style to/from the element and its\n    // descendants.\n    var value = unselectable ? 'none' : '';\n    // MathML elements do not have a style property. Verify before setting.\n    if (el.style) {\n      el.style[name] = value;\n    }\n    if (descendants) {\n      for (var i = 0, descendant; descendant = descendants[i]; i++) {\n        if (descendant.style) {\n          descendant.style[name] = value;\n        }\n      }\n    }\n  } else if (goog.userAgent.IE || goog.userAgent.OPERA) {\n    // Toggle the 'unselectable' attribute on the element and its descendants.\n    var value = unselectable ? 'on' : '';\n    el.setAttribute('unselectable', value);\n    if (descendants) {\n      for (var i = 0, descendant; descendant = descendants[i]; i++) {\n        descendant.setAttribute('unselectable', value);\n      }\n    }\n  }\n};\n\n\n/**\n * Gets the border box size for an element.\n * @param {Element} element  The element to get the size for.\n * @return {!goog.math.Size} The border box size.\n */\ngoog.style.getBorderBoxSize = function(element) {\n  return new goog.math.Size(\n      /** @type {!HTMLElement} */ (element).offsetWidth,\n      /** @type {!HTMLElement} */ (element).offsetHeight);\n};\n\n\n/**\n * Sets the border box size of an element. This is potentially expensive in IE\n * if the document is CSS1Compat mode\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size.\n */\ngoog.style.setBorderBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('10') &&\n      (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher('8'))) {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      var paddingBox = goog.style.getPaddingBox(element);\n      var borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width - borderBox.left - paddingBox.left -\n          paddingBox.right - borderBox.right;\n      style.pixelHeight = size.height - borderBox.top - paddingBox.top -\n          paddingBox.bottom - borderBox.bottom;\n    } else {\n      style.pixelWidth = size.width;\n      style.pixelHeight = size.height;\n    }\n  } else {\n    goog.style.setBoxSizingSize_(element, size, 'border-box');\n  }\n};\n\n\n/**\n * Gets the content box size for an element.  This is potentially expensive in\n * all browsers.\n * @param {Element} element  The element to get the size for.\n * @return {!goog.math.Size} The content box size.\n */\ngoog.style.getContentBoxSize = function(element) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;\n  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() &&\n      ieCurrentStyle.width != 'auto' && ieCurrentStyle.height != 'auto' &&\n      !ieCurrentStyle.boxSizing) {\n    // If IE in CSS1Compat mode than just use the width and height.\n    // If we have a boxSizing then fall back on measuring the borders etc.\n    var width = goog.style.getIePixelValue_(\n        element, /** @type {string} */ (ieCurrentStyle.width), 'width',\n        'pixelWidth');\n    var height = goog.style.getIePixelValue_(\n        element, /** @type {string} */ (ieCurrentStyle.height), 'height',\n        'pixelHeight');\n    return new goog.math.Size(width, height);\n  } else {\n    var borderBoxSize = goog.style.getBorderBoxSize(element);\n    var paddingBox = goog.style.getPaddingBox(element);\n    var borderBox = goog.style.getBorderBox(element);\n    return new goog.math.Size(\n        borderBoxSize.width - borderBox.left - paddingBox.left -\n            paddingBox.right - borderBox.right,\n        borderBoxSize.height - borderBox.top - paddingBox.top -\n            paddingBox.bottom - borderBox.bottom);\n  }\n};\n\n\n/**\n * Sets the content box size of an element. This is potentially expensive in IE\n * if the document is BackCompat mode.\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size.\n */\ngoog.style.setContentBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('10') &&\n      (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher('8'))) {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      style.pixelWidth = size.width;\n      style.pixelHeight = size.height;\n    } else {\n      var paddingBox = goog.style.getPaddingBox(element);\n      var borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width + borderBox.left + paddingBox.left +\n          paddingBox.right + borderBox.right;\n      style.pixelHeight = size.height + borderBox.top + paddingBox.top +\n          paddingBox.bottom + borderBox.bottom;\n    }\n  } else {\n    goog.style.setBoxSizingSize_(element, size, 'content-box');\n  }\n};\n\n\n/**\n * Helper function that sets the box sizing as well as the width and height\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size to set.\n * @param {string} boxSizing  The box-sizing value.\n * @private\n */\ngoog.style.setBoxSizingSize_ = function(element, size, boxSizing) {\n  var style = element.style;\n  if (goog.userAgent.GECKO) {\n    style.MozBoxSizing = boxSizing;\n  } else if (goog.userAgent.WEBKIT) {\n    style.WebkitBoxSizing = boxSizing;\n  } else {\n    // Includes IE8 and Opera 9.50+\n    style.boxSizing = boxSizing;\n  }\n\n  // Setting this to a negative value will throw an exception on IE\n  // (and doesn't do anything different than setting it to 0).\n  style.width = Math.max(size.width, 0) + 'px';\n  style.height = Math.max(size.height, 0) + 'px';\n};\n\n\n/**\n * IE specific function that converts a non pixel unit to pixels.\n * @param {Element} element  The element to convert the value for.\n * @param {string} value  The current value as a string. The value must not be\n *     ''.\n * @param {string} name  The CSS property name to use for the converstion. This\n *     should be 'left', 'top', 'width' or 'height'.\n * @param {string} pixelName  The CSS pixel property name to use to get the\n *     value in pixels.\n * @return {number} The value in pixels.\n * @private\n */\ngoog.style.getIePixelValue_ = function(element, value, name, pixelName) {\n  // Try if we already have a pixel value. IE does not do half pixels so we\n  // only check if it matches a number followed by 'px'.\n  if (/^\\d+px?$/.test(value)) {\n    return parseInt(value, 10);\n  } else {\n    var oldStyleValue = element.style[name];\n    var oldRuntimeValue = element.runtimeStyle[name];\n    // set runtime style to prevent changes\n    element.runtimeStyle[name] = element.currentStyle[name];\n    element.style[name] = value;\n    var pixelValue = element.style[pixelName];\n    // restore\n    element.style[name] = oldStyleValue;\n    element.runtimeStyle[name] = oldRuntimeValue;\n    return +pixelValue;\n  }\n};\n\n\n/**\n * Helper function for getting the pixel padding or margin for IE.\n * @param {Element} element  The element to get the padding for.\n * @param {string} propName  The property name.\n * @return {number} The pixel padding.\n * @private\n */\ngoog.style.getIePixelDistance_ = function(element, propName) {\n  var value = goog.style.getCascadedStyle(element, propName);\n  return value ?\n      goog.style.getIePixelValue_(element, value, 'left', 'pixelLeft') :\n      0;\n};\n\n\n/**\n * Gets the computed paddings or margins (on all sides) in pixels.\n * @param {Element} element  The element to get the padding for.\n * @param {string} stylePrefix  Pass 'padding' to retrieve the padding box,\n *     or 'margin' to retrieve the margin box.\n * @return {!goog.math.Box} The computed paddings or margins.\n * @private\n */\ngoog.style.getBox_ = function(element, stylePrefix) {\n  if (goog.userAgent.IE) {\n    var left = goog.style.getIePixelDistance_(element, stylePrefix + 'Left');\n    var right = goog.style.getIePixelDistance_(element, stylePrefix + 'Right');\n    var top = goog.style.getIePixelDistance_(element, stylePrefix + 'Top');\n    var bottom =\n        goog.style.getIePixelDistance_(element, stylePrefix + 'Bottom');\n    return new goog.math.Box(top, right, bottom, left);\n  } else {\n    // On non-IE browsers, getComputedStyle is always non-null.\n    var left = goog.style.getComputedStyle(element, stylePrefix + 'Left');\n    var right = goog.style.getComputedStyle(element, stylePrefix + 'Right');\n    var top = goog.style.getComputedStyle(element, stylePrefix + 'Top');\n    var bottom = goog.style.getComputedStyle(element, stylePrefix + 'Bottom');\n\n    // NOTE(arv): Gecko can return floating point numbers for the computed\n    // style values.\n    return new goog.math.Box(\n        parseFloat(top), parseFloat(right), parseFloat(bottom),\n        parseFloat(left));\n  }\n};\n\n\n/**\n * Gets the computed paddings (on all sides) in pixels.\n * @param {Element} element  The element to get the padding for.\n * @return {!goog.math.Box} The computed paddings.\n */\ngoog.style.getPaddingBox = function(element) {\n  return goog.style.getBox_(element, 'padding');\n};\n\n\n/**\n * Gets the computed margins (on all sides) in pixels.\n * @param {Element} element  The element to get the margins for.\n * @return {!goog.math.Box} The computed margins.\n */\ngoog.style.getMarginBox = function(element) {\n  return goog.style.getBox_(element, 'margin');\n};\n\n\n/**\n * A map used to map the border width keywords to a pixel width.\n * @type {!Object}\n * @private\n */\ngoog.style.ieBorderWidthKeywords_ = {\n  'thin': 2,\n  'medium': 4,\n  'thick': 6\n};\n\n\n/**\n * Helper function for IE to get the pixel border.\n * @param {Element} element  The element to get the pixel border for.\n * @param {string} prop  The part of the property name.\n * @return {number} The value in pixels.\n * @private\n */\ngoog.style.getIePixelBorder_ = function(element, prop) {\n  if (goog.style.getCascadedStyle(element, prop + 'Style') == 'none') {\n    return 0;\n  }\n  var width = goog.style.getCascadedStyle(element, prop + 'Width');\n  if (width in goog.style.ieBorderWidthKeywords_) {\n    return goog.style.ieBorderWidthKeywords_[width];\n  }\n  return goog.style.getIePixelValue_(element, width, 'left', 'pixelLeft');\n};\n\n\n/**\n * Gets the computed border widths (on all sides) in pixels\n * @param {Element} element  The element to get the border widths for.\n * @return {!goog.math.Box} The computed border widths.\n */\ngoog.style.getBorderBox = function(element) {\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    var left = goog.style.getIePixelBorder_(element, 'borderLeft');\n    var right = goog.style.getIePixelBorder_(element, 'borderRight');\n    var top = goog.style.getIePixelBorder_(element, 'borderTop');\n    var bottom = goog.style.getIePixelBorder_(element, 'borderBottom');\n    return new goog.math.Box(top, right, bottom, left);\n  } else {\n    // On non-IE browsers, getComputedStyle is always non-null.\n    var left = goog.style.getComputedStyle(element, 'borderLeftWidth');\n    var right = goog.style.getComputedStyle(element, 'borderRightWidth');\n    var top = goog.style.getComputedStyle(element, 'borderTopWidth');\n    var bottom = goog.style.getComputedStyle(element, 'borderBottomWidth');\n\n    return new goog.math.Box(\n        parseFloat(top), parseFloat(right), parseFloat(bottom),\n        parseFloat(left));\n  }\n};\n\n\n/**\n * Returns the font face applied to a given node. Opera and IE should return\n * the font actually displayed. Firefox returns the author's most-preferred\n * font (whether the browser is capable of displaying it or not.)\n * @param {Element} el  The element whose font family is returned.\n * @return {string} The font family applied to el.\n */\ngoog.style.getFontFamily = function(el) {\n  var doc = goog.dom.getOwnerDocument(el);\n  var font = '';\n  // The moveToElementText method from the TextRange only works if the element\n  // is attached to the owner document.\n  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {\n    var range = doc.body.createTextRange();\n    range.moveToElementText(el);\n\n    try {\n      font = range.queryCommandValue('FontName');\n    } catch (e) {\n      // This is a workaround for a awkward exception.\n      // On some IE, there is an exception coming from it.\n      // The error description from this exception is:\n      // This window has already been registered as a drop target\n      // This is bogus description, likely due to a bug in ie.\n      font = '';\n    }\n  }\n  if (!font) {\n    // Note if for some reason IE can't derive FontName with a TextRange, we\n    // fallback to using currentStyle\n    font = goog.style.getStyle_(el, 'fontFamily');\n  }\n\n  // Firefox returns the applied font-family string (author's list of\n  // preferred fonts.) We want to return the most-preferred font, in lieu of\n  // the *actually* applied font.\n  var fontsArray = font.split(',');\n  if (fontsArray.length > 1) font = fontsArray[0];\n\n  // Sanitize for x-browser consistency:\n  // Strip quotes because browsers aren't consistent with how they're\n  // applied; Opera always encloses, Firefox sometimes, and IE never.\n  return goog.string.stripQuotes(font, '\"\\'');\n};\n\n\n/**\n * Regular expression used for getLengthUnits.\n * @type {RegExp}\n * @private\n */\ngoog.style.lengthUnitRegex_ = /[^\\d]+$/;\n\n\n/**\n * Returns the units used for a CSS length measurement.\n * @param {string} value  A CSS length quantity.\n * @return {?string} The units of measurement.\n */\ngoog.style.getLengthUnits = function(value) {\n  var units = value.match(goog.style.lengthUnitRegex_);\n  return units && units[0] || null;\n};\n\n\n/**\n * Map of absolute CSS length units\n * @type {!Object}\n * @private\n */\ngoog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {\n  'cm': 1,\n  'in': 1,\n  'mm': 1,\n  'pc': 1,\n  'pt': 1\n};\n\n\n/**\n * Map of relative CSS length units that can be accurately converted to px\n * font-size values using getIePixelValue_. Only units that are defined in\n * relation to a font size are convertible (%, small, etc. are not).\n * @type {!Object}\n * @private\n */\ngoog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {\n  'em': 1,\n  'ex': 1\n};\n\n\n/**\n * Returns the font size, in pixels, of text in an element.\n * @param {Element} el  The element whose font size is returned.\n * @return {number} The font size (in pixels).\n */\ngoog.style.getFontSize = function(el) {\n  var fontSize = goog.style.getStyle_(el, 'fontSize');\n  var sizeUnits = goog.style.getLengthUnits(fontSize);\n  if (fontSize && 'px' == sizeUnits) {\n    // NOTE(user): This could be parseFloat instead, but IE doesn't return\n    // decimal fractions in getStyle_ and Firefox reports the fractions, but\n    // ignores them when rendering. Interestingly enough, when we force the\n    // issue and size something to e.g., 50% of 25px, the browsers round in\n    // opposite directions with Firefox reporting 12px and IE 13px. I punt.\n    return parseInt(fontSize, 10);\n  }\n\n  // In IE, we can convert absolute length units to a px value using\n  // goog.style.getIePixelValue_. Units defined in relation to a font size\n  // (em, ex) are applied relative to the element's parentNode and can also\n  // be converted.\n  if (goog.userAgent.IE) {\n    if (String(sizeUnits) in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {\n      return goog.style.getIePixelValue_(el, fontSize, 'left', 'pixelLeft');\n    } else if (\n        el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT &&\n        String(sizeUnits) in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {\n      // Check the parent size - if it is the same it means the relative size\n      // value is inherited and we therefore don't want to count it twice.  If\n      // it is different, this element either has explicit style or has a CSS\n      // rule applying to it.\n      var parentElement = /** @type {!Element} */ (el.parentNode);\n      var parentSize = goog.style.getStyle_(parentElement, 'fontSize');\n      return goog.style.getIePixelValue_(\n          parentElement, fontSize == parentSize ? '1em' : fontSize, 'left',\n          'pixelLeft');\n    }\n  }\n\n  // Sometimes we can't cleanly find the font size (some units relative to a\n  // node's parent's font size are difficult: %, smaller et al), so we create\n  // an invisible, absolutely-positioned span sized to be the height of an 'M'\n  // rendered in its parent's (i.e., our target element's) font size. This is\n  // the definition of CSS's font size attribute.\n  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {\n    'style': 'visibility:hidden;position:absolute;' +\n        'line-height:0;padding:0;margin:0;border:0;height:1em;'\n  });\n  goog.dom.appendChild(el, sizeElement);\n  fontSize = sizeElement.offsetHeight;\n  goog.dom.removeNode(sizeElement);\n\n  return fontSize;\n};\n\n\n/**\n * Parses a style attribute value.  Converts CSS property names to camel case.\n * @param {string} value The style attribute value.\n * @return {!Object} Map of CSS properties to string values.\n */\ngoog.style.parseStyleAttribute = function(value) {\n  var result = {};\n  goog.array.forEach(value.split(/\\s*;\\s*/), function(pair) {\n    var keyValue = pair.match(/\\s*([\\w-]+)\\s*\\:(.+)/);\n    if (keyValue) {\n      var styleName = keyValue[1];\n      var styleValue = goog.string.trim(keyValue[2]);\n      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;\n    }\n  });\n  return result;\n};\n\n\n/**\n * Reverse of parseStyleAttribute; that is, takes a style object and returns the\n * corresponding attribute value.  Converts camel case property names to proper\n * CSS selector names.\n * @param {Object} obj Map of CSS properties to values.\n * @return {string} The style attribute value.\n */\ngoog.style.toStyleAttribute = function(obj) {\n  var buffer = [];\n  goog.object.forEach(obj, function(value, key) {\n    buffer.push(goog.string.toSelectorCase(key), ':', value, ';');\n  });\n  return buffer.join('');\n};\n\n\n/**\n * Sets CSS float property on an element.\n * @param {Element} el The element to set float property on.\n * @param {string} value The value of float CSS property to set on this element.\n */\ngoog.style.setFloat = function(el, value) {\n  el.style[goog.userAgent.IE ? 'styleFloat' : 'cssFloat'] = value;\n};\n\n\n/**\n * Gets value of explicitly-set float CSS property on an element.\n * @param {Element} el The element to get float property of.\n * @return {string} The value of explicitly-set float CSS property on this\n *     element.\n */\ngoog.style.getFloat = function(el) {\n  return el.style[goog.userAgent.IE ? 'styleFloat' : 'cssFloat'] || '';\n};\n\n\n/**\n * Returns the scroll bar width (represents the width of both horizontal\n * and vertical scroll).\n *\n * @param {string=} opt_className An optional class name (or names) to apply\n *     to the invisible div created to measure the scrollbar. This is necessary\n *     if some scrollbars are styled differently than others.\n * @return {number} The scroll bar width in px.\n */\ngoog.style.getScrollbarWidth = function(opt_className) {\n  // Add two hidden divs.  The child div is larger than the parent and\n  // forces scrollbars to appear on it.\n  // Using overflow:scroll does not work consistently with scrollbars that\n  // are styled with ::-webkit-scrollbar.\n  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  if (opt_className) {\n    outerDiv.className = opt_className;\n  }\n  outerDiv.style.cssText = 'overflow:auto;' +\n      'position:absolute;top:0;width:100px;height:100px';\n  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  goog.style.setSize(innerDiv, '200px', '200px');\n  outerDiv.appendChild(innerDiv);\n  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);\n  var width = outerDiv.offsetWidth - outerDiv.clientWidth;\n  goog.dom.removeNode(outerDiv);\n  return width;\n};\n\n\n/**\n * Regular expression to extract x and y translation components from a CSS\n * transform Matrix representation.\n *\n * @type {!RegExp}\n * @const\n * @private\n */\ngoog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp(\n    'matrix\\\\([0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, ' +\n    '[0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, ' +\n    '([0-9\\\\.\\\\-]+)p?x?, ([0-9\\\\.\\\\-]+)p?x?\\\\)');\n\n\n/**\n * Returns the x,y translation component of any CSS transforms applied to the\n * element, in pixels.\n *\n * @param {!Element} element The element to get the translation of.\n * @return {!goog.math.Coordinate} The CSS translation of the element in px.\n */\ngoog.style.getCssTranslation = function(element) {\n  var transform = goog.style.getComputedTransform(element);\n  if (!transform) {\n    return new goog.math.Coordinate(0, 0);\n  }\n  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);\n  if (!matches) {\n    return new goog.math.Coordinate(0, 0);\n  }\n  return new goog.math.Coordinate(\n      parseFloat(matches[1]), parseFloat(matches[2]));\n};\n"],
"names":["goog","provide","require","forwardDeclare","style","setStyle","goog.style.setStyle","element","opt_value","isString","setStyle_","key","goog.style.setStyle_","value","propertyName","getVendorJsStyleName_","styleNameCache_","goog.style.getVendorJsStyleName_","camelStyle","string","toCamelCase","undefined","prefixedStyle","dom","vendor","getVendorJsPrefix","toTitleCase","getVendorStyleName_","goog.style.getVendorStyleName_","getVendorPrefix","getStyle","goog.style.getStyle","property","styleValue","getComputedStyle","goog.style.getComputedStyle","doc","getOwnerDocument","defaultView","styles","getPropertyValue","getCascadedStyle","goog.style.getCascadedStyle","currentStyle","getStyle_","goog.style.getStyle_","getComputedBoxSizing","goog.style.getComputedBoxSizing","getComputedPosition","goog.style.getComputedPosition","getBackgroundColor","goog.style.getBackgroundColor","getComputedOverflowX","goog.style.getComputedOverflowX","getComputedOverflowY","goog.style.getComputedOverflowY","getComputedZIndex","goog.style.getComputedZIndex","getComputedTextAlign","goog.style.getComputedTextAlign","getComputedCursor","goog.style.getComputedCursor","getComputedTransform","goog.style.getComputedTransform","setPosition","goog.style.setPosition","el","arg1","opt_arg2","x","y","math","Coordinate","left","getPixelStyleValue_","top","getPosition","goog.style.getPosition","offsetLeft","offsetTop","getClientViewportElement","goog.style.getClientViewportElement","opt_node","getDocument","userAgent","IE","isDocumentModeOrHigher","getDomHelper","isCss1CompatMode","body","documentElement","getViewportPageOffset","goog.style.getViewportPageOffset","scrollLeft","scrollTop","getBoundingClientRect_","goog.style.getBoundingClientRect_","rect","getBoundingClientRect","e","ownerDocument","clientLeft","clientTop","getOffsetParent","goog.style.getOffsetParent","asserts","assert","offsetParent","positionStyle","skipStatic","parent","parentNode","nodeType","NodeType","DOCUMENT_FRAGMENT","host","scrollWidth","clientWidth","scrollHeight","clientHeight","getVisibleRectForElement","goog.style.getVisibleRectForElement","visibleRect","Box","Infinity","scrollEl","getDocumentScrollElement","WEBKIT","pos","getPageOffset","client","getClientLeftTop","Math","max","right","min","bottom","scrollX","scrollY","winSize","getViewportSize","width","height","getContainerOffsetToScrollInto","goog.style.getContainerOffsetToScrollInto","opt_container","opt_center","container","elementPos","containerPos","containerBorder","getBorderBox","relX","relY","elementSize","getSizeWithDisplay_","spaceX","spaceY","scrollIntoContainerView","goog.style.scrollIntoContainerView","offset","goog.style.getClientLeftTop","goog.style.getPageOffset","assertObject","viewportElement","box","scrollCoord","getDocumentScroll","getPageOffsetLeft","goog.style.getPageOffsetLeft","getPageOffsetTop","goog.style.getPageOffsetTop","getFramedPageOffset","goog.style.getFramedPageOffset","relativeWin","position","currentWin","getWindow","reflect","canAccessProperty","currentEl","getClientPositionForElement_","frameElement","translateRectForAnotherFrame","goog.style.translateRectForAnotherFrame","origBase","newBase","difference","getRelativePosition","goog.style.getRelativePosition","a","b","ap","getClientPosition","bp","goog.style.getClientPositionForElement_","goog.style.getClientPosition","ELEMENT","targetEvent","changedTouches","clientX","clientY","setPageOffset","goog.style.setPageOffset","opt_y","cur","dx","assertNumber","dy","Number","setSize","goog.style.setSize","w","opt_h","h","Size","Error","setWidth","setHeight","goog.style.getPixelStyleValue_","round","goog.style.setHeight","goog.style.setWidth","getSize","goog.style.getSize","evaluateWithTemporaryDisplay_","goog.style.evaluateWithTemporaryDisplay_","fn","originalDisplay","display","originalVisibility","visibility","originalPosition","retVal","goog.style.getSizeWithDisplay_","offsetWidth","offsetHeight","webkitOffsetsZero","isDef","clientRect","getTransformedSize","goog.style.getTransformedSize","getBounds","goog.style.getBounds","o","s","Rect","goog.style.toCamelCase","selector","String","toSelectorCase","goog.style.toSelectorCase","getOpacity","goog.style.getOpacity","result","opacity","MozOpacity","match","filter","setOpacity","goog.style.setOpacity","alpha","setTransparentBackgroundImage","goog.style.setTransparentBackgroundImage","src","isVersionOrHigher","backgroundImage","backgroundPosition","backgroundRepeat","clearTransparentBackgroundImage","goog.style.clearTransparentBackgroundImage","showElement","goog.style.showElement","setElementShown","goog.style.setElementShown","isShown","isElementShown","goog.style.isElementShown","installSafeStyleSheet","goog.style.installSafeStyleSheet","safeStyleSheet","dh","createStyleSheet","styleSheet","setSafeStyleSheet","head","getElementsByTagNameAndClass","TagName","HEAD","BODY","createDom","insertBefore","STYLE","appendChild","uninstallStyles","goog.style.uninstallStyles","node","ownerNode","owningElement","removeNode","goog.style.setSafeStyleSheet","stylesString","html","SafeStyleSheet","unwrap","cssText","innerHTML","setPreWrap","goog.style.setPreWrap","whiteSpace","wordWrap","GECKO","setInlineBlock","goog.style.setInlineBlock","zoom","isRightToLeft","goog.style.isRightToLeft","unselectableStyle_","EDGE","isUnselectable","goog.style.isUnselectable","toLowerCase","OPERA","getAttribute","setUnselectable","goog.style.setUnselectable","unselectable","opt_noRecurse","descendants","getElementsByTagName","name","i","descendant","setAttribute","getBorderBoxSize","goog.style.getBorderBoxSize","setBorderBoxSize","goog.style.setBorderBoxSize","size","paddingBox","getPaddingBox","borderBox","pixelWidth","pixelHeight","setBoxSizingSize_","getContentBoxSize","goog.style.getContentBoxSize","ieCurrentStyle","boxSizing","getIePixelValue_","borderBoxSize","setContentBoxSize","goog.style.setContentBoxSize","goog.style.setBoxSizingSize_","MozBoxSizing","WebkitBoxSizing","goog.style.getIePixelValue_","pixelName","test","parseInt","oldStyleValue","oldRuntimeValue","runtimeStyle","pixelValue","getIePixelDistance_","goog.style.getIePixelDistance_","propName","getBox_","goog.style.getBox_","stylePrefix","parseFloat","goog.style.getPaddingBox","getMarginBox","goog.style.getMarginBox","ieBorderWidthKeywords_","getIePixelBorder_","goog.style.getIePixelBorder_","prop","goog.style.getBorderBox","getFontFamily","goog.style.getFontFamily","font","createTextRange","contains","range","moveToElementText","queryCommandValue","fontsArray","split","length","stripQuotes","lengthUnitRegex_","getLengthUnits","goog.style.getLengthUnits","units","ABSOLUTE_CSS_LENGTH_UNITS_","CONVERTIBLE_RELATIVE_CSS_UNITS_","getFontSize","goog.style.getFontSize","fontSize","sizeUnits","parentElement","parentSize","sizeElement","SPAN","parseStyleAttribute","goog.style.parseStyleAttribute","array","forEach","pair","keyValue","styleName","trim","toStyleAttribute","goog.style.toStyleAttribute","obj","buffer","object","push","join","setFloat","goog.style.setFloat","getFloat","goog.style.getFloat","getScrollbarWidth","goog.style.getScrollbarWidth","opt_className","outerDiv","createElement","DIV","className","innerDiv","MATRIX_TRANSLATION_REGEX_","RegExp","getCssTranslation","goog.style.getCssTranslation","transform","matches"]
}
