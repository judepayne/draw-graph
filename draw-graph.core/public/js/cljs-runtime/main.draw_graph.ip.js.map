{"version":3,"sources":["main/draw_graph/ip.cljs"],"mappings":";;;;;;AAQA,AAAA,AAAMA,AAAUC;AAAhB,AACE,AAAAC,AACkB,AAACU,AAAQ,AAAA,AAAA,AAACC,AAAoBZ,AAC1B,AAAKa;AAAL,AAAQ,AAAAC,AAAA;AAAAC,AAAC,AAACC,AAAQH;AAAV,AAAA,AAAAE,AAAAA,AAAAD,AAAAC,AAAAD;AAF9B,AAAAZ;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAiBM;AAAjB,AAAAF,AAAAJ,AAAA,AAAwBO;AAAxB,AAAA,AAAAF,AAAA,AAGQE;;;AAIV,AAAA,AAAKO;AAGL,AAAA,AAAMC,AAAgBC;AAAtB,AACE,AAACC,AAAM,AAAA,AAACC,AAAqBF;;AAG/B,AAAA,AAAMG,AAAQC,AAAQC;AAAtB,AACO,AAACzB,AAASkB,AACV,AAACQ,AAAMC,AACP,AAAA,AAACD,AACD,AAACA,AAAMP,AACP,AAACO,AAAMF,AACP,AAACI,AAAQH","names":["main.draw-graph.ip/rest-get","url","promesa.core/bind","p__52142","map__52143","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","promesa.core/promise","status","body","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2","kvlt.core/request!","e","G__52138","fexpr__52137","cljs.core/ex-data","main.draw-graph.ip/ip-api-url","main.draw-graph.ip/extract-region","s","cljs.core/first","clojure.string.split.cljs$core$IFn$_invoke$arity$2","main.draw-graph.ip/region","handler","error-fn","promesa.core/map","main.draw-graph.utils/json->clj","promesa.core.error.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns main.draw-graph.ip\n  (:require\n   [kvlt.core                :as kvlt]\n   [promesa.core             :as p]\n   [promesa.async-cljs :refer-macros [async]]\n   [main.draw-graph.utils         :as utils]))\n\n\n(defn rest-get [url]\n  (p/alet [{:keys [status body]}\n           (p/await (p/catch (kvlt/request! {:url url})\n                        (fn [e] ((ex-data e) :type))))]\n          body))\n\n\n;; remember this blocks/ bans if more than 100 requests per min from the same ip\n(def ip-api-url \"http://ip-api.com/json/\")\n\n\n(defn extract-region [s]\n  (first (clojure.string/split s #\"/\")))\n\n\n(defn region [handler error-fn]\n  (->> (rest-get ip-api-url)\n       (p/map utils/json->clj)\n       (p/map :timezone)\n       (p/map extract-region)\n       (p/map handler)\n       (p/error error-fn)))\n\n"]}