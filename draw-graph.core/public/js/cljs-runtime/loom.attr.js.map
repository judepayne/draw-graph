{"version":3,"sources":["loom/attr.cljc"],"mappings":"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","names":["var_args","G__49251","loom.attr/add-attr","js/Error","x__4433__auto__","m__4434__auto__","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","G__49253","loom.attr/remove-attr","G__49257","loom.attr/attr","G__49265","loom.attr/attrs","loom.attr/AttrGraph","g","node-or-edge","k","v","n1","n2","loom.graph/has-node?","cljs.core/assoc-in","loom.attr.add_attr.cljs$core$IFn$_invoke$arity$5","loom.graph/src","loom.graph/dest","loom.graph/directed?","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","cljs.core/dissoc","loom.attr.remove_attr.cljs$core$IFn$_invoke$arity$4","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","loom.attr.attr.cljs$core$IFn$_invoke$arity$4","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","loom.attr.attrs.cljs$core$IFn$_invoke$arity$3","attributes","cljs.core/seq","cljs.core/PROTOCOL_SENTINEL","loom.graph/BasicEditableGraph","loom.graph/BasicEditableDigraph","loom.graph/BasicEditableWeightedGraph","loom.graph/BasicEditableWeightedDigraph","loom.graph/FlyGraph","loom.graph/FlyDigraph","loom.graph/WeightedFlyGraph","loom.graph/WeightedFlyDigraph","loom.attr/attr?","cljs.core/native-satisfies?","loom.attr/add-attr-to-nodes","nodes","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","n","loom.attr.add_attr.cljs$core$IFn$_invoke$arity$4","loom.attr/add-attr-to-edges","edges","p__49339","vec__49340","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","loom.attr/add-attr-to-all","loom.graph/nodes","loom.graph/edges","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","loom.attr/add-attrs-to-all","seq49343","G__49344","cljs.core/first","cljs.core/next","self__4717__auto__","kvs","p__49347","vec__49352","cljs.core.partition.cljs$core$IFn$_invoke$arity$3","G__49358","loom.attr/hilite","node","loom.attr/hilite-path","path","p__49364","vec__49365","loom.attr.hilite.cljs$core$IFn$_invoke$arity$2","loom.attr.hilite.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns ^{:doc \"Graph attribute protocol and implementations for records from\nloom.graph. Common uses for attributes include labels and styling (color,\nthickness, etc).\"\n      :author \"Justin Kramer\"}\n  loom.attr\n  (:require [loom.graph :refer [directed? nodes edges src dest has-node?]\n             :as graph]\n            #?@(:clj [[loom.cljs :refer (def-protocol-impls)]]))\n  #?@(:cljs [(:require-macros [loom.cljs :refer [def-protocol-impls extend]])]))\n\n(defprotocol AttrGraph\n  (add-attr [g node-or-edge k v] [g n1 n2 k v] \"Add an attribute to node or edge\")\n  (remove-attr [g node-or-edge k] [g n1 n2 k] \"Remove an attribute from a node or edge\")\n  (attr [g node-or-edge k] [g n1 n2 k] \"Return the attribute on a node or edge\")\n  (attrs [g node-or-edge] [g n1 n2] \"Return all attributes on a node or edge\"))\n\n(def-protocol-impls default-attr-graph-impl\n  {:add-attr (fn\n               ([g node-or-edge k v]\n                 (if (has-node? g node-or-edge)\n                   (assoc-in g [:attrs node-or-edge k] v)\n                   (add-attr g (src node-or-edge) (dest node-or-edge) k v)))\n               ([g n1 n2 k v]\n                  (let [g (assoc-in g [:attrs n1 ::edge-attrs n2 k] v)\n                        g (if (directed? g) g\n                              (assoc-in g [:attrs n2 ::edge-attrs n1 k] v))]\n                    g)))\n   :remove-attr (fn\n                  ([g node-or-edge k]\n                    (if (has-node? g node-or-edge)\n                      (update-in g [:attrs node-or-edge] dissoc k)\n                      (remove-attr g (src node-or-edge) (dest node-or-edge) k)))\n                  ([g n1 n2 k]\n                     (update-in g [:attrs n1 ::edge-attrs n2] dissoc k)))\n   :attr (fn\n           ([g node-or-edge k]\n             (if (has-node? g node-or-edge)\n               (get-in g [:attrs node-or-edge k])\n               (attr g (src node-or-edge) (dest node-or-edge) k)))\n           ([g n1 n2 k]\n              (get-in g [:attrs n1 ::edge-attrs n2 k])))\n   :attrs (fn\n            ([g node-or-edge]\n              (if (has-node? g node-or-edge)\n                (dissoc (get-in g [:attrs node-or-edge]) ::edge-attrs)\n                (attrs g (src node-or-edge) (dest node-or-edge))))\n            ([g n1 n2]\n               (let [attributes (get-in g [:attrs n1 ::edge-attrs n2])]\n                 (when (seq attributes) attributes))))})\n\n(extend loom.graph.BasicEditableGraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.BasicEditableDigraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.BasicEditableWeightedGraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.BasicEditableWeightedDigraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.FlyGraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.FlyDigraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.WeightedFlyGraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(extend loom.graph.WeightedFlyDigraph\n  AttrGraph\n  default-attr-graph-impl)\n\n(defn attr?\n  \"Returns true if g satisfies AttrGraph\"\n  [g]\n  (satisfies? AttrGraph g))\n\n(defn add-attr-to-nodes\n  \"Adds an attribute to the given nodes\"\n  [g k v nodes]\n  (reduce\n   (fn [g n]\n     (add-attr g n k v))\n   g nodes))\n\n(defn add-attr-to-edges\n  \"Adds an attribute to the given edges\"\n  [g k v edges]\n  (reduce\n   (fn [g [n1 n2]]\n     (add-attr g n1 n2 k v))\n   g edges))\n\n(defn add-attr-to-all\n  \"Adds an attribute to all nodes and edges\"\n  [g k v]\n  (-> g\n      (add-attr-to-nodes k v (nodes g))\n      (add-attr-to-edges k v (edges g))))\n\n(defn add-attrs-to-all\n  \"Adds attributes to all nodes and edges\"\n  [g & kvs]\n  (reduce\n   (fn [g [k v]]\n     (-> g\n         (add-attr-to-nodes k v (nodes g))\n         (add-attr-to-edges k v (edges g))))\n   g (partition 2 1 kvs)))\n\n\n(defn hilite\n  \"Adds a red :color attribute to a node or edge\"\n  ([g node]\n     (-> g\n         (add-attr node :color :red)\n         (add-attr node :fontcolor :red)\n         (add-attr node :fillcolor \"#ffeeee\")\n         (add-attr node :style \"filled,bold\")))\n  ([g n1 n2]\n     (-> g\n         (add-attr n1 n2 :color :red)\n         (add-attr n1 n2 :fontcolor :red)\n         (add-attr n1 n2 :style :bold))))\n\n(defn hilite-path\n  \"Hilites nodes and edges along a path\"\n  [g path]\n  (reduce\n   (fn [g [n1 n2]]\n     (-> g\n         (hilite n1)\n         (hilite n2)\n         (hilite n1 n2)))\n   g (partition 2 1 path)))\n\n"]}