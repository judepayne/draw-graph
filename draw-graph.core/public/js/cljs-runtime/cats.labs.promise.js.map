{"version":3,"sources":["cats/labs/promise.cljc"],"mappings":";;;;;;;AAUA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAAA,AAAsBC;;AAAtB,AAAA,AAAA,AAAsBA,AAEpB,AAAeC;AAAf,AAAA,AAAA,AAAeA;AAAf,AAAkBC;;;AAFpB,AAAA,AAAA,AAAAH,AAAsBC;;AAAtB,AAAA,AAAA,AAAsBA,AAKpB,AAAWG;AAAX,AAAA,AAAA,AAAWA;AAAX,AACE,AAACC,AAAYD;;AAEjB,AAAcD,AACZ;AAAA,AAAA,AAAAG,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAA,AAGUQ,AAAGC,AAAEC;;AAHf,AAAA,AAAA,AAGUF;AAHV,AAII,AAACG,AAAQD,AAAGD;;;AAJhB,AAAA,AAAA,AAAAT,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAA,AAOWR,AAAEoB,AAAIC,AAAKH;;AAPtB,AAAA,AAAA,AAOWlB;AAPX,AAQQkB,AACA,AAACC,AAAQE,AACT,AAACC,AAAUF;;;AAVnB,AAAA,AAAA,AAAAZ,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAA,AAaaR,AAAEuB;;AAbf,AAAA,AAAA,AAaavB;AAbb,AAcI,AAACwB,AAAYD;;;AAdjB,AAAA,AAAA,AAAAf,AAAA,AAgBWQ,AAAGE,AAAGD;;AAhBjB,AAAA,AAAA,AAgBWD;AAhBX,AAiBI,AAACS,AAASP,AAAGD;;;AAjBjB,AAAA,AAAA,AAAAT,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAA,AAoBUR,AAAEuB;;AApBZ,AAAA,AAAA,AAoBUvB;AApBV,AAqBI,AAACwB,AAAYD;;;AArBjB,AAAA,AAAA,AAAAf,AAAA,AAuBYR,AAAE0B,AAAGC;;AAvBjB,AAAA,AAAA,AAuBY3B;AAvBZ,AAwBI,AAACmB,AAAQ,AAAA,AAACS,AAAOF,AAAGC,AACX,AAAAE;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAMb;AAAN,AAAAc,AAAAD,AAAA,AAAA,AAAQP;AAAR,AACE,AAACN,AAAAA,AAAAA,AAAEM,AAAAA;;;;AA1BlB,AAAA,AAAA,AAAAf,AAAAV;;AAAA,AAAA,AAAA,AAAAU,AAAA,AA6BaR,AAAEkB,AAAGc;;AA7BlB,AAAA,AAAA,AA6BahC;AA7Bb,AA8BI,AAACmB,AAAQ,AAAA,AAACc,AAAYf,AAAGc,AAChB,AAAAE;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAH,AAAAI,AAAA,AAAA,AAAMC;AAAN,AAAAL,AAAAI,AAAA,AAAA,AAAUE;AAAV,AACE,AAAMC,AAAI,AAACC,AAAgBH;AAA3B,AACE,AAACI,AAAYF,AAAIF,AAAIC;;;;AAjCtC,AAAA,AAAA7B,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAG,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAG,AAAA,AAAAL;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;;AAmCF;;;AAAkBiC,AAEhBxC","names":["cljs.core/PROTOCOL_SENTINEL","promesa.core/Promise","_","cats.labs.promise/context","it","promesa.impl.proto/-extract","js/cats","js/cats.labs","js/cats.labs.promise","js/cats.labs.promise.t_cats$labs$promise30258","cats.labs.promise/t_cats$labs$promise30258","_30260","meta30259","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","cats.labs.promise/->t_cats$labs$promise30258","mn","f","mv","promesa.impl.proto/-map","err","succ","promesa.impl.proto/-catch","v","promesa.impl.proto/-promise","promesa.impl.proto/-bind","pf","pv","promesa.core/all","p__30269","vec__30271","cljs.core.nth","mv'","cats.core/sequence","p__30275","vec__30277","mvv","mvv'","ctx","cats.protocols/-get-context","cats.protocols/-mappend","cats.labs.promise/promise-context"],"sourcesContent":["(ns cats.labs.promise\n  \"A promise monad that uses promesa library.\"\n  (:require [cats.core :as m]\n            [cats.context :as mc]\n            [cats.protocols :as mp]\n            [promesa.core :as p]\n            [promesa.impl.proto :as pp])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture)))\n\n(declare context)\n\n(extend-type #?(:cljs p/Promise :clj CompletableFuture)\n  mp/Contextual\n  (-get-context [_] context)\n\n  mp/Extract\n  (-extract [it]\n    (pp/-extract it)))\n\n(def ^:no-doc context\n  (reify\n    mp/Context\n    mp/Functor\n    (-fmap [mn f mv]\n      (pp/-map mv f))\n\n    mp/Bifunctor\n    (-bimap [_ err succ mv]\n      (-> mv\n          (pp/-map succ)\n          (pp/-catch err)))\n\n    mp/Monad\n    (-mreturn [_ v]\n      (pp/-promise v))\n\n    (-mbind [mn mv f]\n      (pp/-bind mv f))\n\n    mp/Applicative\n    (-pure [_ v]\n      (pp/-promise v))\n\n    (-fapply [_ pf pv]\n      (pp/-map (p/all [pf pv])\n               (fn [[f v]]\n                 (f v))))\n\n    mp/Semigroup\n    (-mappend [_ mv mv']\n      (pp/-map (m/sequence [mv mv'])\n               (fn [[mvv mvv']]\n                 (let [ctx (mp/-get-context mvv)]\n                   (mp/-mappend ctx mvv mvv')))))))\n\n(def ^:deprecated promise-context\n  \"Deprecated alias for `context`.\"\n  context)\n"]}