shadow$provide.module$node_modules$svg_pan_zoom$src$shadow_viewport=function(global,require,module,exports){var SvgUtils=require("module$node_modules$svg_pan_zoom$src$svg_utilities"),Utils=require("module$node_modules$svg_pan_zoom$src$utilities"),ShadowViewport=function(viewport,options){this.init(viewport,options)};ShadowViewport.prototype.init=function(viewport,options){this.viewport=viewport;this.options=options;this.originalState={zoom:1,x:0,y:0};this.activeState={zoom:1,x:0,y:0};this.updateCTMCached=
Utils.proxy(this.updateCTM,this);this.requestAnimationFrame=Utils.createRequestAnimationFrame(this.options.refreshRate);this.viewBox={x:0,y:0,width:0,height:0};this.cacheViewBox();viewport=this.processCTM();this.setCTM(viewport);this.updateCTM()};ShadowViewport.prototype.cacheViewBox=function(){var svgViewBox=this.options.svg.getAttribute("viewBox");svgViewBox?(svgViewBox=svgViewBox.split(/[\s,]/).filter(function(v){return v}).map(parseFloat),this.viewBox.x=svgViewBox[0],this.viewBox.y=svgViewBox[1],
this.viewBox.width=svgViewBox[2],this.viewBox.height=svgViewBox[3],svgViewBox=Math.min(this.options.width/this.viewBox.width,this.options.height/this.viewBox.height),this.activeState.zoom=svgViewBox,this.activeState.x=(this.options.width-this.viewBox.width*svgViewBox)/2,this.activeState.y=(this.options.height-this.viewBox.height*svgViewBox)/2,this.updateCTMOnNextFrame(),this.options.svg.removeAttribute("viewBox")):this.simpleViewBoxCache()};ShadowViewport.prototype.simpleViewBoxCache=function(){var bBox=
this.viewport.getBBox();this.viewBox.x=bBox.x;this.viewBox.y=bBox.y;this.viewBox.width=bBox.width;this.viewBox.height=bBox.height};ShadowViewport.prototype.getViewBox=function(){return Utils.extend({},this.viewBox)};ShadowViewport.prototype.processCTM=function(){var newCTM=this.getCTM();if(this.options.fit||this.options.contain){var newScale=this.options.fit?Math.min(this.options.width/this.viewBox.width,this.options.height/this.viewBox.height):Math.max(this.options.width/this.viewBox.width,this.options.height/
this.viewBox.height);newCTM.a=newScale;newCTM.d=newScale;newCTM.e=-this.viewBox.x*newScale;newCTM.f=-this.viewBox.y*newScale}this.options.center&&(newScale=.5*(this.options.height-(this.viewBox.height+2*this.viewBox.y)*newCTM.a),newCTM.e=.5*(this.options.width-(this.viewBox.width+2*this.viewBox.x)*newCTM.a),newCTM.f=newScale);this.originalState.zoom=newCTM.a;this.originalState.x=newCTM.e;this.originalState.y=newCTM.f;return newCTM};ShadowViewport.prototype.getOriginalState=function(){return Utils.extend({},
this.originalState)};ShadowViewport.prototype.getState=function(){return Utils.extend({},this.activeState)};ShadowViewport.prototype.getZoom=function(){return this.activeState.zoom};ShadowViewport.prototype.getRelativeZoom=function(){return this.activeState.zoom/this.originalState.zoom};ShadowViewport.prototype.computeRelativeZoom=function(scale){return scale/this.originalState.zoom};ShadowViewport.prototype.getPan=function(){return{x:this.activeState.x,y:this.activeState.y}};ShadowViewport.prototype.getCTM=
function(){var safeCTM=this.options.svg.createSVGMatrix();safeCTM.a=this.activeState.zoom;safeCTM.b=0;safeCTM.c=0;safeCTM.d=this.activeState.zoom;safeCTM.e=this.activeState.x;safeCTM.f=this.activeState.y;return safeCTM};ShadowViewport.prototype.setCTM=function(newCTM){var willZoom=this.isZoomDifferent(newCTM),willPan=this.isPanDifferent(newCTM);if(willZoom||willPan){willZoom&&(!1===this.options.beforeZoom(this.getRelativeZoom(),this.computeRelativeZoom(newCTM.a))?(newCTM.a=newCTM.d=this.activeState.zoom,
willZoom=!1):(this.updateCache(newCTM),this.options.onZoom(this.getRelativeZoom())));if(willPan){var preventPan=this.options.beforePan(this.getPan(),{x:newCTM.e,y:newCTM.f}),preventPanX=!1,preventPanY=!1;!1===preventPan?(newCTM.e=this.getPan().x,newCTM.f=this.getPan().y,preventPanX=preventPanY=!0):Utils.isObject(preventPan)&&(!1===preventPan.x?(newCTM.e=this.getPan().x,preventPanX=!0):Utils.isNumber(preventPan.x)&&(newCTM.e=preventPan.x),!1===preventPan.y?(newCTM.f=this.getPan().y,preventPanY=!0):
Utils.isNumber(preventPan.y)&&(newCTM.f=preventPan.y));preventPanX&&preventPanY||!this.isPanDifferent(newCTM)?willPan=!1:(this.updateCache(newCTM),this.options.onPan(this.getPan()))}(willZoom||willPan)&&this.updateCTMOnNextFrame()}};ShadowViewport.prototype.isZoomDifferent=function(newCTM){return this.activeState.zoom!==newCTM.a};ShadowViewport.prototype.isPanDifferent=function(newCTM){return this.activeState.x!==newCTM.e||this.activeState.y!==newCTM.f};ShadowViewport.prototype.updateCache=function(newCTM){this.activeState.zoom=
newCTM.a;this.activeState.x=newCTM.e;this.activeState.y=newCTM.f};ShadowViewport.prototype.pendingUpdate=!1;ShadowViewport.prototype.updateCTMOnNextFrame=function(){this.pendingUpdate||(this.pendingUpdate=!0,this.requestAnimationFrame.call(window,this.updateCTMCached))};ShadowViewport.prototype.updateCTM=function(){var ctm=this.getCTM();SvgUtils.setCTM(this.viewport,ctm,this.defs);this.pendingUpdate=!1;if(this.options.onUpdatedCTM)this.options.onUpdatedCTM(ctm)};module.exports=function(viewport,options){return new ShadowViewport(viewport,
options)}}
//# sourceMappingURL=module$node_modules$svg_pan_zoom$src$shadow_viewport.js.map
