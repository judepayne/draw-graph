{"version":3,"sources":["clojure/data/xml/js/name.cljs"],"mappings":";;;;AAIA,AAAKA,AACH,AAACC,AAAQ,AAAA,AAACC,AAAQC;AAEpB,AAAA,AAAMC,AAAYC;AAAlB,AACE,AAACC,AAAsBD;;AAEzB,AAAA,AAAME,AAAYC;AAAlB,AACE,AAACC,AAAsBD;;AAEzB,AAAA,AAAA,AAAAE,AAAAC,AAAA,AAAA;;AAAA,AAAAD,AAAAE,AAAA,AAEE,AAAcE;AAAd,AACE,AAAAC,AAAkB,AAACf,AAAYc;AAA/B,AAAAE,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAASE;AAAT,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACEA;;;AAJN,AAAAR,AAAAG,AAAA,AAKE,AAAYC;AAAZ,AACE,AAAAK,AAAgB,AAACnB,AAAYc;AAA7B,AAAAE,AAAAG,AAAA,AAAA,AAAOF;AAAP,AAAAD,AAAAG,AAAA,AAAA,AAASX;AAAT,AAAAQ,AAAAG,AAAA,AAAA,AAAaF;AAAb,AACET","names":["clojure.data.xml.js.name/parse-qname","cljs.core/memoize","cljs.core.partial","cljs.core/re-matches","clojure.data.xml.js.name/decode-uri","ns","js/decodeURIComponent","clojure.data.xml.js.name/encode-uri","uri","js/encodeURIComponent","goog.object/set","clojure.data.xml.protocols/AsQName","clojure.data.xml.protocols/qname-local","clojure.data.xml.protocols/qname-uri","s","vec__54576","cljs.core.nth","_","local","vec__54579"],"sourcesContent":["(ns clojure.data.xml.js.name\n  (:require [clojure.data.xml.protocols :refer [AsQName qname-uri qname-local]]\n            [clojure.string :as str]))\n\n(def parse-qname\n  (memoize (partial re-matches #\"(?:\\{([^}]+)\\})?([^{]*)\")))\n\n(defn decode-uri [ns]\n  (js/decodeURIComponent ns))\n\n(defn encode-uri [uri]\n  (js/encodeURIComponent uri))\n\n(extend-protocol AsQName\n  string\n  (qname-local [s]\n    (let [[_ _ local] (parse-qname s)]\n      local))\n  (qname-uri [s]\n    (let [[_ uri _] (parse-qname s)]\n      uri)))\n"]}