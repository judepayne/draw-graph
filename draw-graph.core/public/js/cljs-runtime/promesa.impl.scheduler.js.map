{"version":3,"sources":["promesa/impl/scheduler.cljc"],"mappings":";;;AAoCG,AAAA,AAAOA,AACJC,AAAIC;AADP,AAEE,AAAMC,AAAU,AAAA,AAACC;AAAjB,AACE,AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAFDT,AAAIC,AACCC,AACJ,AAAA,AAAAM,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAEeU;;AAFf,AAAA,AAAA,AAEeA;AAFf,AAAA,AAAAP,AAEmBV;;;AAFnB,AAAA,AAAA,AAAAO,AAAAI;;AAAA,AAAA,AAAA,AAAAJ,AAAA,AAKgBU;;AALhB,AAAA,AAAA,AAKgBA;AALhB,AAAA,AAAAP,AAKoBT;;;AALpB,AAAA,AAAA,AAAAM,AAAA,AAMYU;;AANZ,AAAA,AAAA,AAMYA;AANZ,AAOI,AAAA,AAAAP,AAAWT;AAAX;;AAAA,AACE,AAAA,AAACiB,AAAQjB;;AACT,AAACkB,AAAgBpB;;;;AATvB,AAAA,AAAAQ,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAK,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAFDd,AAAIC,AACCC,AACJe,AAAA,AAAAP;AAFDV,AAAIC,AACCC,AACJ,AAAA,AAAAM,AAAAE;;;AAAAF;;AAFDR,AAAIC,AACCC,AACJ,AAAAM,AAAA;;AA6CJ,AAAA,AAAMa;AAAN,AAEE,AAAA,AAAA,AAAAjB,AAAAC,AAAAC,AAAAgB;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAAX;;AAAA,AAAA,AAAA,AAAAW,AAAA,AAEcL,AAAES,AAAGC;;AAFnB,AAAA,AAAA,AAEcV;AAFd,AAGI,AAAMjB,AAAM,AAAA,AAACE;AACP0B,AAAK;AAAA,AACE,AAAA,AACE,AAACD,AAAAA,AAAAA;AADH,AAGI,AAAA,AAACT,AAAQlB;;AACpBD,AAAI,AAAC8B,AAAcD,AAAKF;AAN9B,AAOE,AAAC5B,AAAeC,AAAIC;;;AAV1B,AAAA,AAAAsB,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAV,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAY,AAAA,AAAAD;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA;;AAgBL;;;AAAaQ,AAEX,AAAAC,AAAA;AAAA,AAAO,AAACX;AAAR;AAEF,AAAA,AAAMY,AACHN,AAAGC;AADN,AAEE,AAAA,AAAAjB,AAACuB,AAAcH,AAAYJ,AAAGC","names":["promesa.impl.scheduler/scheduled-task","cur","done?","cancelled","cljs.core/volatile!","js/promesa","js/promesa.impl","js/promesa.impl.scheduler","js/promesa.impl.scheduler.t_promesa$impl$scheduler43588","promesa.impl.scheduler/t_promesa$impl$scheduler43588","_43590","meta43589","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","promesa.impl.scheduler/->t_promesa$impl$scheduler43588","_","cljs.core/vreset!","js/clearTimeout","promesa.impl.scheduler/scheduler","js/promesa.impl.scheduler.t_promesa$impl$scheduler43592","promesa.impl.scheduler/t_promesa$impl$scheduler43592","_43594","meta43593","promesa.impl.scheduler/->t_promesa$impl$scheduler43592","ms","func","task","js/setTimeout","promesa.impl.scheduler/+scheduler+","cljs.core/Delay","promesa.impl.scheduler/schedule","promesa.impl.proto/-schedule"],"sourcesContent":[";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.impl.scheduler\n  \"Scheduler helpers implementation. This is private api\n  and should not used directly.\"\n  (:require [promesa.impl.proto :as pt])\n  #?(:clj\n     (:import java.util.concurrent.ScheduledExecutorService\n              java.util.concurrent.Executors\n              java.util.concurrent.Future\n              java.util.concurrent.TimeUnit\n              java.util.concurrent.TimeoutException)))\n\n#?(:cljs\n   (defn- scheduled-task\n     [cur done?]\n     (let [cancelled (volatile! false)]\n       (reify\n         cljs.core/IPending\n         (-realized? [_] @done?)\n\n         pt/ICancellable\n         (-cancelled? [_] @cancelled)\n         (-cancel [_]\n           (when-not @cancelled\n             (vreset! cancelled true)\n             (js/clearTimeout cur))))))\n\n   :clj\n   (defn- scheduled-task\n     [^Future fut]\n     (reify\n       clojure.lang.IDeref\n       (deref [_]\n         (.get fut))\n\n       clojure.lang.IBlockingDeref\n       (deref [_ ms default]\n         (try\n           (.get fut ms TimeUnit/MILLISECONDS)\n           (catch TimeoutException e\n             default)))\n\n       clojure.lang.IPending\n       (isRealized [_] (and (.isDone fut)\n                            (not (.isCancelled fut))))\n\n       pt/ICancellable\n       (-cancelled? [_]\n         (.isCancelled fut))\n       (-cancel [_]\n         (when-not (.isCancelled fut)\n           (.cancel fut true))))))\n\n#?(:clj\n   (extend-type ScheduledExecutorService\n     pt/IScheduler\n     (-schedule [this ms func]\n       (let [fut (.schedule this ^Runnable func ^long ms TimeUnit/MILLISECONDS)]\n         (scheduled-task fut)))))\n\n#?(:cljs\n   (defn scheduler\n     []\n     (reify\n       pt/IScheduler\n       (-schedule [_ ms func]\n         (let [done? (volatile! false)\n               task (fn []\n                      (try\n                        (func)\n                        (finally\n                          (vreset! done? true))))\n               cur (js/setTimeout task ms)]\n           (scheduled-task cur done?)))))\n   :clj\n   (defn- scheduler\n     []\n     (Executors/newScheduledThreadPool 1)))\n\n(def ^:redef +scheduler+\n  \"A default lazy scheduler instance.\"\n  (delay (scheduler)))\n\n(defn schedule\n  [ms func]\n  (pt/-schedule @+scheduler+ ms func))\n"]}