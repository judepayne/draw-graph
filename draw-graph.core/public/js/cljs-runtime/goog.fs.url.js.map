{
"version":3,
"file":"goog.fs.url.js",
"lineCount":53,
"mappings":"AAmBAA,IAAAC,QAAA,CAAa,aAAb,CAAA;AAUA;;;;AAAAD,IAAAE,GAAAC,IAAAC,gBAAA,GAA8BC,QAAQ,CAACC,IAAD,CAAO;AAC3C,SAAON,IAAAE,GAAAC,IAAAI,cAAA,EAAAC,gBAAA,CAA4CF,IAA5C,CAAP;AAD2C,CAA7C;AAWA;;;AAAAN,IAAAE,GAAAC,IAAAM,gBAAA,GAA8BC,QAAQ,CAACP,GAAD,CAAM;AAC1CH,MAAAE,GAAAC,IAAAI,cAAA,EAAAI,gBAAA,CAA4CR,GAA5C,CAAA;AAD0C,CAA5C;AASA,iGAAAH,IAAAE,GAAAC,IAAAS,WAAA;AAUA;;;;AAAAZ,IAAAE,GAAAC,IAAAI,cAAA,GAA4BM,QAAQ,EAAG;AACrC,MAAIC,YAAYd,IAAAE,GAAAC,IAAAY,eAAA,EAAhB;AACA,MAAID,SAAJ,IAAiB,IAAjB;AACE,WAAOA,SAAP;AADF;AAGE,UAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AAHF;AAFqC,CAAvC;AAkBA;;;;AAAAhB,IAAAE,GAAAC,IAAAY,eAAA,GAA6BE,QAAQ,EAAG;AAGtC,MAAIjB,IAAAkB,MAAA,CAAWlB,IAAAmB,OAAAC,IAAX,CAAJ,IACIpB,IAAAkB,MAAA,CAAWlB,IAAAmB,OAAAC,IAAAZ,gBAAX,CADJ;AAEE,kDAA6C,CAACR,IAAAmB,OAAAC,IAAD,CAA7C;AAFF;AAIO,QACHpB,IAAAkB,MAAA,CAAWlB,IAAAmB,OAAAE,UAAX,CADG,IAEHrB,IAAAkB,MAAA,CAAWlB,IAAAmB,OAAAE,UAAAb,gBAAX,CAFG;AAGL,oDAA6C,CAACR,IAAAmB,OAAAE,UAAD,CAA7C;AAHK;AAKA,UAAIrB,IAAAkB,MAAA,CAAWlB,IAAAmB,OAAAX,gBAAX,CAAJ;AACL,sDAA6C,CAACR,IAAAmB,OAAD,CAA7C;AADK;AAGL,eAAO,IAAP;AAHK;AALA;AAJP;AAHsC,CAAxC;AA0BA;;;AAAAnB,IAAAE,GAAAC,IAAAmB,0BAAA,GAAwCC,QAAQ,EAAG;AACjD,SAAOvB,IAAAE,GAAAC,IAAAY,eAAA,EAAP,IAAuC,IAAvC;AADiD,CAAnD;;",
"sources":["goog/fs/url.js"],
"sourcesContent":["// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Wrapper for URL and its createObjectUrl and revokeObjectUrl\n * methods that are part of the HTML5 File API.\n */\n\ngoog.provide('goog.fs.url');\n\n\n/**\n * Creates a blob URL for a blob object.\n * Throws an error if the browser does not support Object Urls.\n *\n * @param {!Blob} blob The object for which to create the URL.\n * @return {string} The URL for the object.\n */\ngoog.fs.url.createObjectUrl = function(blob) {\n  return goog.fs.url.getUrlObject_().createObjectURL(blob);\n};\n\n\n/**\n * Revokes a URL created by {@link goog.fs.url.createObjectUrl}.\n * Throws an error if the browser does not support Object Urls.\n *\n * @param {string} url The URL to revoke.\n */\ngoog.fs.url.revokeObjectUrl = function(url) {\n  goog.fs.url.getUrlObject_().revokeObjectURL(url);\n};\n\n\n/**\n * @typedef {{createObjectURL: (function(!Blob): string),\n *            revokeObjectURL: function(string): void}}\n */\ngoog.fs.url.UrlObject_;\n\n\n/**\n * Get the object that has the createObjectURL and revokeObjectURL functions for\n * this browser.\n *\n * @return {goog.fs.url.UrlObject_} The object for this browser.\n * @private\n */\ngoog.fs.url.getUrlObject_ = function() {\n  var urlObject = goog.fs.url.findUrlObject_();\n  if (urlObject != null) {\n    return urlObject;\n  } else {\n    throw new Error('This browser doesn\\'t seem to support blob URLs');\n  }\n};\n\n\n/**\n * Finds the object that has the createObjectURL and revokeObjectURL functions\n * for this browser.\n *\n * @return {?goog.fs.url.UrlObject_} The object for this browser or null if the\n *     browser does not support Object Urls.\n * @private\n */\ngoog.fs.url.findUrlObject_ = function() {\n  // This is what the spec says to do\n  // http://dev.w3.org/2006/webapi/FileAPI/#dfn-createObjectURL\n  if (goog.isDef(goog.global.URL) &&\n      goog.isDef(goog.global.URL.createObjectURL)) {\n    return /** @type {goog.fs.url.UrlObject_} */ (goog.global.URL);\n    // This is what Chrome does (as of 10.0.648.6 dev)\n  } else if (\n      goog.isDef(goog.global.webkitURL) &&\n      goog.isDef(goog.global.webkitURL.createObjectURL)) {\n    return /** @type {goog.fs.url.UrlObject_} */ (goog.global.webkitURL);\n    // This is what the spec used to say to do\n  } else if (goog.isDef(goog.global.createObjectURL)) {\n    return /** @type {goog.fs.url.UrlObject_} */ (goog.global);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Checks whether this browser supports Object Urls. If not, calls to\n * createObjectUrl and revokeObjectUrl will result in an error.\n *\n * @return {boolean} True if this browser supports Object Urls.\n */\ngoog.fs.url.browserSupportsObjectUrls = function() {\n  return goog.fs.url.findUrlObject_() != null;\n};\n"],
"names":["goog","provide","fs","url","createObjectUrl","goog.fs.url.createObjectUrl","blob","getUrlObject_","createObjectURL","revokeObjectUrl","goog.fs.url.revokeObjectUrl","revokeObjectURL","UrlObject_","goog.fs.url.getUrlObject_","urlObject","findUrlObject_","Error","goog.fs.url.findUrlObject_","isDef","global","URL","webkitURL","browserSupportsObjectUrls","goog.fs.url.browserSupportsObjectUrls"]
}
