{"version":3,"sources":["hickory/utils.cljc"],"mappings":";;;;AAWA;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAKL;;;AAAA,AAAA,AAAA,AAAKC;AAQL,AAAA,AAAMC,AACHC;AADH,AAGW,AAACC,AAAmBD;;AAE/B,AAAA,AAAME,AACKF,AAAUG;AADrB,AAGW,AAACC,AAAuBJ,AAAEG;;AAErC;;;AAAA,AAAME,AAEHL;AAFH,AAGE,AAAA,AAAIA,AAAEM,AAAkBC;;AAE1B;;;;AAAA,AAAMC,AAGHC,AAAKC,AAASC;AAHjB,AAIE,AAAA,AAAA,AAAkBF,AACb,AAAA,AAAA,AAAM,AAACG,AAAUF,AACf,AAAA,AAAA,AAAkBA,AACpB,AAAA,AAAA,AAAM,AAACE,AAAUD,AACf,AAAA,AAAA,AAAWA","names":["hickory.utils/void-element","hickory.utils/unescapable-content","hickory.utils/html-escape","s","goog.string/htmlEscape","hickory.utils/starts-with","prefix","js/goog.string.startsWith","hickory.utils/lower-case-keyword","clojure.string/lower-case","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","hickory.utils/render-doctype","name","publicid","systemid","cljs.core/not-empty"],"sourcesContent":["(ns hickory.utils\n  \"Miscellaneous utilities used internally.\"\n  (:require [clojure.string :as string]\n    #?(:clj\n            [quoin.text :as qt]\n       :cljs [goog.string :as gstring])))\n\n;;\n;; Data\n;;\n\n(def void-element\n  \"Elements that don't have a meaningful <tag></tag> form.\"\n  #{:area :base :br :col :command :embed :hr :img :input :keygen :link :meta\n    :param :source :track :wbr})\n\n(def unescapable-content\n  \"Elements whose content should never have html-escape codes.\"\n  #{:script :style})\n\n;;\n;; String utils\n;;\n\n(defn html-escape\n  [s]\n  #?(:clj  (qt/html-escape s)\n     :cljs (gstring/htmlEscape s)))\n\n(defn starts-with\n  [^String s ^String prefix]\n  #?(:clj  (.startsWith s prefix)\n     :cljs (goog.string.startsWith s prefix)))\n\n(defn lower-case-keyword\n  \"Converts its string argument into a lowercase keyword.\"\n  [s]\n  (-> s string/lower-case keyword))\n\n(defn render-doctype\n  \"Returns a string containing the HTML source for the doctype with given args.\n   The second and third arguments can be nil or empty strings.\"\n  [name publicid systemid]\n  (str \"<!DOCTYPE \" name\n       (when (not-empty publicid)\n         (str \" PUBLIC \\\"\" publicid \"\\\"\"))\n       (when (not-empty systemid)\n         (str \" \\\"\" systemid \"\\\"\"))\n       \">\"))\n"]}