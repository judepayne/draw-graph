{
"version":3,
"file":"module$node_modules$scheduler$cjs$scheduler_tracing_development.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/scheduler/cjs/scheduler-tracing.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scheduler$cjs$scheduler_tracing_development\"] = function(global,require,module,exports) {\nvar process = require('process');\n/** @license React v0.13.6\n * scheduler-tracing.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\nvar enableSchedulerTracing = true;\n\n// Only used in www builds.\n // TODO: true? Here it might just be false.\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\nvar DEFAULT_THREAD_ID = 0;\n\n// Counters used to generate unique IDs.\nvar interactionIDCounter = 0;\nvar threadIDCounter = 0;\n\n// Set of currently traced interactions.\n// Interactions \"stack\"\u2013\n// Meaning that newly traced interactions are appended to the previously active set.\n// When an interaction goes out of scope, the previous set (if any) is restored.\nexports.__interactionsRef = null;\n\n// Listener(s) to notify when interactions begin and end.\nexports.__subscriberRef = null;\n\nif (enableSchedulerTracing) {\n  exports.__interactionsRef = {\n    current: new Set()\n  };\n  exports.__subscriberRef = {\n    current: null\n  };\n}\n\nfunction unstable_clear(callback) {\n  if (!enableSchedulerTracing) {\n    return callback();\n  }\n\n  var prevInteractions = exports.__interactionsRef.current;\n  exports.__interactionsRef.current = new Set();\n\n  try {\n    return callback();\n  } finally {\n    exports.__interactionsRef.current = prevInteractions;\n  }\n}\n\nfunction unstable_getCurrent() {\n  if (!enableSchedulerTracing) {\n    return null;\n  } else {\n    return exports.__interactionsRef.current;\n  }\n}\n\nfunction unstable_getThreadID() {\n  return ++threadIDCounter;\n}\n\nfunction unstable_trace(name, timestamp, callback) {\n  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;\n\n  if (!enableSchedulerTracing) {\n    return callback();\n  }\n\n  var interaction = {\n    __count: 1,\n    id: interactionIDCounter++,\n    name: name,\n    timestamp: timestamp\n  };\n\n  var prevInteractions = exports.__interactionsRef.current;\n\n  // Traced interactions should stack/accumulate.\n  // To do that, clone the current interactions.\n  // The previous set will be restored upon completion.\n  var interactions = new Set(prevInteractions);\n  interactions.add(interaction);\n  exports.__interactionsRef.current = interactions;\n\n  var subscriber = exports.__subscriberRef.current;\n  var returnValue = void 0;\n\n  try {\n    if (subscriber !== null) {\n      subscriber.onInteractionTraced(interaction);\n    }\n  } finally {\n    try {\n      if (subscriber !== null) {\n        subscriber.onWorkStarted(interactions, threadID);\n      }\n    } finally {\n      try {\n        returnValue = callback();\n      } finally {\n        exports.__interactionsRef.current = prevInteractions;\n\n        try {\n          if (subscriber !== null) {\n            subscriber.onWorkStopped(interactions, threadID);\n          }\n        } finally {\n          interaction.__count--;\n\n          // If no async work was scheduled for this interaction,\n          // Notify subscribers that it's completed.\n          if (subscriber !== null && interaction.__count === 0) {\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\n          }\n        }\n      }\n    }\n  }\n\n  return returnValue;\n}\n\nfunction unstable_wrap(callback) {\n  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;\n\n  if (!enableSchedulerTracing) {\n    return callback;\n  }\n\n  var wrappedInteractions = exports.__interactionsRef.current;\n\n  var subscriber = exports.__subscriberRef.current;\n  if (subscriber !== null) {\n    subscriber.onWorkScheduled(wrappedInteractions, threadID);\n  }\n\n  // Update the pending async work count for the current interactions.\n  // Update after calling subscribers in case of error.\n  wrappedInteractions.forEach(function (interaction) {\n    interaction.__count++;\n  });\n\n  var hasRun = false;\n\n  function wrapped() {\n    var prevInteractions = exports.__interactionsRef.current;\n    exports.__interactionsRef.current = wrappedInteractions;\n\n    subscriber = exports.__subscriberRef.current;\n\n    try {\n      var returnValue = void 0;\n\n      try {\n        if (subscriber !== null) {\n          subscriber.onWorkStarted(wrappedInteractions, threadID);\n        }\n      } finally {\n        try {\n          returnValue = callback.apply(undefined, arguments);\n        } finally {\n          exports.__interactionsRef.current = prevInteractions;\n\n          if (subscriber !== null) {\n            subscriber.onWorkStopped(wrappedInteractions, threadID);\n          }\n        }\n      }\n\n      return returnValue;\n    } finally {\n      if (!hasRun) {\n        // We only expect a wrapped function to be executed once,\n        // But in the event that it's executed more than once\u2013\n        // Only decrement the outstanding interaction counts once.\n        hasRun = true;\n\n        // Update pending async counts for all wrapped interactions.\n        // If this was the last scheduled async work for any of them,\n        // Mark them as completed.\n        wrappedInteractions.forEach(function (interaction) {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\n          }\n        });\n      }\n    }\n  }\n\n  wrapped.cancel = function cancel() {\n    subscriber = exports.__subscriberRef.current;\n\n    try {\n      if (subscriber !== null) {\n        subscriber.onWorkCanceled(wrappedInteractions, threadID);\n      }\n    } finally {\n      // Update pending async counts for all wrapped interactions.\n      // If this was the last scheduled async work for any of them,\n      // Mark them as completed.\n      wrappedInteractions.forEach(function (interaction) {\n        interaction.__count--;\n\n        if (subscriber && interaction.__count === 0) {\n          subscriber.onInteractionScheduledWorkCompleted(interaction);\n        }\n      });\n    }\n  };\n\n  return wrapped;\n}\n\nvar subscribers = null;\nif (enableSchedulerTracing) {\n  subscribers = new Set();\n}\n\nfunction unstable_subscribe(subscriber) {\n  if (enableSchedulerTracing) {\n    subscribers.add(subscriber);\n\n    if (subscribers.size === 1) {\n      exports.__subscriberRef.current = {\n        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,\n        onInteractionTraced: onInteractionTraced,\n        onWorkCanceled: onWorkCanceled,\n        onWorkScheduled: onWorkScheduled,\n        onWorkStarted: onWorkStarted,\n        onWorkStopped: onWorkStopped\n      };\n    }\n  }\n}\n\nfunction unstable_unsubscribe(subscriber) {\n  if (enableSchedulerTracing) {\n    subscribers.delete(subscriber);\n\n    if (subscribers.size === 0) {\n      exports.__subscriberRef.current = null;\n    }\n  }\n}\n\nfunction onInteractionTraced(interaction) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onInteractionTraced(interaction);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onInteractionScheduledWorkCompleted(interaction) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onInteractionScheduledWorkCompleted(interaction);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkScheduled(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkScheduled(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkStarted(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkStarted(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkStopped(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkStopped(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkCanceled(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkCanceled(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nexports.unstable_clear = unstable_clear;\nexports.unstable_getCurrent = unstable_getCurrent;\nexports.unstable_getThreadID = unstable_getThreadID;\nexports.unstable_trace = unstable_trace;\nexports.unstable_wrap = unstable_wrap;\nexports.unstable_subscribe = unstable_subscribe;\nexports.unstable_unsubscribe = unstable_unsubscribe;\n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","onInteractionTraced","interaction","didCatchError","caughtError","subscribers","forEach","subscriber","error","onInteractionScheduledWorkCompleted","onWorkScheduled","interactions","threadID","onWorkStarted","onWorkStopped","onWorkCanceled","Object","defineProperty","value","interactionIDCounter","threadIDCounter","__interactionsRef","__subscriberRef","current","Set","unstable_clear","callback","prevInteractions","unstable_getCurrent","unstable_getThreadID","unstable_trace","name","timestamp","arguments","length","undefined","DEFAULT_THREAD_ID","__count","id","add","returnValue","unstable_wrap","wrapped","wrappedInteractions","apply","hasRun","cancel","wrapped.cancel","unstable_subscribe","size","unstable_unsubscribe","delete"]
}
