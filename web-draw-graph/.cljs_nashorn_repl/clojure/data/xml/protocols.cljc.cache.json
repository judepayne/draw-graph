["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.data.xml.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$as-elements",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","~:line",26,"~:column",4,"~:end-line",26,"~:end-column",15,"~:protocol","~$clojure.data.xml.protocols/AsElements","~:doc","Return a seq of elements represented by an expression.","~:arglists",["~#list",["~$quote",["^H",[["~$expr"]]]]]],"^D","^E","^5","~$clojure.data.xml.protocols/as-elements","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",15,"~:method-params",["^H",[["^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^A",1,"~:variadic?",false,"^@",25,"~:ret-tag","~$any","^B",26,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^F","Return a seq of elements represented by an expression."],"~$EventGeneration",["^ ","^>",["^ ","~:protocol-symbol",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",29,"^A",14,"^@",17,"~:protocol-info",["^ ","~:methods",["^ ","~$gen-event",[["~$item"]],"~$next-events",[["^Y","~$next-items"]]]],"^B",17,"^F","Protocol for generating new events based on element type","~:jsdoc",["^H",["@interface"]]],"^U",true,"^5","~$clojure.data.xml.protocols/EventGeneration","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",29,"^A",1,"^@",17,"^V",["^ ","^W",["^ ","^X",[["^Y"]],"^Z",[["^Y","^["]]]],"~:info",null,"^B",17,"~:tag","^Q","~:impls",["^4",[]],"^F","Protocol for generating new events based on element type","^10",["^H",["@interface"]]],"~$AsElements",["^ ","^>",["^ ","^U",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",24,"^A",14,"^@",25,"^V",["^ ","^W",["^ ","^<",[["^J"]]]],"^B",25,"^F",null,"^10",["^H",["@interface"]]],"^U",true,"^5","^E","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",24,"^A",1,"^@",25,"^V",["^ ","^W",["^ ","^<",[["^J"]]]],"^12",null,"^B",25,"^13","^Q","^14",["^4",[]],"^F",null,"^10",["^H",["@interface"]]],"~$AsXmlString",["^ ","^>",["^ ","^U",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",25,"^A",14,"^@",28,"^V",["^ ","^W",["^ ","~$xml-str",[["~$node"]]]],"^B",28,"^F",null,"^10",["^H",["@interface"]]],"^U",true,"^5","~$clojure.data.xml.protocols/AsXmlString","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",25,"^A",1,"^@",28,"^V",["^ ","^W",["^ ","^17",[["^18"]]]],"^12",null,"^B",28,"^13","^Q","^14",["^4",[]],"^F",null,"^10",["^H",["@interface"]]],"~$AsQName",["^ ","^>",["^ ","^U",true,"^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",21,"^A",14,"^@",13,"^V",["^ ","^W",["^ ","~$qname-local",[["~$qname"]],"~$qname-uri",[["^1<"]]]],"^B",13,"^F",null,"^10",["^H",["@interface"]]],"^U",true,"^5","~$clojure.data.xml.protocols/AsQName","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",21,"^A",1,"^@",13,"^V",["^ ","^W",["^ ","^1;",[["^1<"]],"^1=",[["^1<"]]]],"^12",null,"^B",13,"^13","^Q","^14",["^4",[]],"^F",null,"^10",["^H",["@interface"]]],"^17",["^ ","^=",null,"^>",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^@",29,"^A",4,"^B",29,"^C",11,"^D","^19","^F","Serialize atribute value or content node","^G",["^H",["^I",["^H",[["^18"]]]]]],"^D","^19","^5","~$clojure.data.xml.protocols/xml-str","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",11,"^L",["^H",[["^18"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",28,"^P","^Q","^B",29,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^18"]]]]],"^F","Serialize atribute value or content node"],"^Z",["^ ","^=",null,"^>",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^@",21,"^A",4,"^B",21,"^C",15,"^D","^11","^F","Returns the next set of events that should occur after e.  next-events are the\n     events that should be generated after this one is complete.","^G",["^H",["^I",["^H",[["^Y","^["]]]]]],"^D","^11","^5","~$clojure.data.xml.protocols/next-events","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",15,"^L",["^H",[["^Y","^["]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",17,"^P","^Q","^B",21,"^R",2,"^S",true,"^G",["^H",["^I",["^H",[["^Y","^["]]]]],"^F","Returns the next set of events that should occur after e.  next-events are the\n     events that should be generated after this one is complete."],"^1=",["^ ","^=",null,"^>",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^@",15,"^A",4,"^B",15,"^C",13,"^D","^1>","^F","Get the namespace uri for this qname","^G",["^H",["^I",["^H",[["^1<"]]]]]],"^D","^1>","^5","~$clojure.data.xml.protocols/qname-uri","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",13,"^L",["^H",[["^1<"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",13,"^P","^Q","^B",15,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^1<"]]]]],"^F","Get the namespace uri for this qname"],"^1;",["^ ","^=",null,"^>",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^@",14,"^A",4,"^B",14,"^C",15,"^D","^1>","^F","Get the name for this qname","^G",["^H",["^I",["^H",[["^1<"]]]]]],"^D","^1>","^5","~$clojure.data.xml.protocols/qname-local","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",15,"^L",["^H",[["^1<"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",13,"^P","^Q","^B",14,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^1<"]]]]],"^F","Get the name for this qname"],"^X",["^ ","^=",null,"^>",["^ ","^?","/Users/jude/Dropbox/Projects/aws/draw-graph/web-draw-graph/.cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^@",19,"^A",4,"^B",19,"^C",13,"^D","^11","^F","Function to generate an event for e.","^G",["^H",["^I",["^H",[["^Y"]]]]]],"^D","^11","^5","~$clojure.data.xml.protocols/gen-event","^?",".cljs_nashorn_repl/clojure/data/xml/protocols.cljc","^C",13,"^L",["^H",[["^Y"]]],"^M",null,"^N",["^H",[null,null]],"^A",1,"^O",false,"^@",17,"^P","^Q","^B",19,"^R",1,"^S",true,"^G",["^H",["^I",["^H",[["^Y"]]]]],"^F","Function to generate an event for e."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^F",null]